{"version":3,"file":"index.js","sources":["../webpack://obs-helper/./lib/context.js","../webpack://obs-helper/./lib/credential.js","../webpack://obs-helper/./lib/main.js","../webpack://obs-helper/./lib/obs/bucket.js","../webpack://obs-helper/./lib/obs/download.js","../webpack://obs-helper/./lib/obs/upload.js","../webpack://obs-helper/./lib/types.js","../webpack://obs-helper/./lib/utils.js","../webpack://obs-helper/./node_modules/@actions/core/lib/command.js","../webpack://obs-helper/./node_modules/@actions/core/lib/core.js","../webpack://obs-helper/./node_modules/@actions/core/lib/file-command.js","../webpack://obs-helper/./node_modules/@actions/core/lib/oidc-utils.js","../webpack://obs-helper/./node_modules/@actions/core/lib/path-utils.js","../webpack://obs-helper/./node_modules/@actions/core/lib/summary.js","../webpack://obs-helper/./node_modules/@actions/core/lib/utils.js","../webpack://obs-helper/./node_modules/@actions/http-client/lib/auth.js","../webpack://obs-helper/./node_modules/@actions/http-client/lib/index.js","../webpack://obs-helper/./node_modules/@actions/http-client/lib/proxy.js","../webpack://obs-helper/./node_modules/date-format/lib/index.js","../webpack://obs-helper/./node_modules/debug/src/browser.js","../webpack://obs-helper/./node_modules/debug/src/common.js","../webpack://obs-helper/./node_modules/debug/src/index.js","../webpack://obs-helper/./node_modules/debug/src/node.js","../webpack://obs-helper/./node_modules/esdk-obs-nodejs/lib/enums.js","../webpack://obs-helper/./node_modules/esdk-obs-nodejs/lib/log.js","../webpack://obs-helper/./node_modules/esdk-obs-nodejs/lib/obs.js","../webpack://obs-helper/./node_modules/esdk-obs-nodejs/lib/obsModel.js","../webpack://obs-helper/./node_modules/esdk-obs-nodejs/lib/utils.js","../webpack://obs-helper/./node_modules/esdk-obs-nodejs/lib/v2Model.js","../webpack://obs-helper/./node_modules/flatted/cjs/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/copy-sync/copy-sync.js","../webpack://obs-helper/./node_modules/fs-extra/lib/copy-sync/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/copy/copy.js","../webpack://obs-helper/./node_modules/fs-extra/lib/copy/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/empty/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/ensure/file.js","../webpack://obs-helper/./node_modules/fs-extra/lib/ensure/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/ensure/link.js","../webpack://obs-helper/./node_modules/fs-extra/lib/ensure/symlink-paths.js","../webpack://obs-helper/./node_modules/fs-extra/lib/ensure/symlink-type.js","../webpack://obs-helper/./node_modules/fs-extra/lib/ensure/symlink.js","../webpack://obs-helper/./node_modules/fs-extra/lib/fs/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/json/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/json/jsonfile.js","../webpack://obs-helper/./node_modules/fs-extra/lib/json/output-json-sync.js","../webpack://obs-helper/./node_modules/fs-extra/lib/json/output-json.js","../webpack://obs-helper/./node_modules/fs-extra/lib/mkdirs/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/mkdirs/mkdirs-sync.js","../webpack://obs-helper/./node_modules/fs-extra/lib/mkdirs/mkdirs.js","../webpack://obs-helper/./node_modules/fs-extra/lib/mkdirs/win32.js","../webpack://obs-helper/./node_modules/fs-extra/lib/move-sync/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/move-sync/move-sync.js","../webpack://obs-helper/./node_modules/fs-extra/lib/move/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/move/move.js","../webpack://obs-helper/./node_modules/fs-extra/lib/output/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/path-exists/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/remove/index.js","../webpack://obs-helper/./node_modules/fs-extra/lib/remove/rimraf.js","../webpack://obs-helper/./node_modules/fs-extra/lib/util/buffer.js","../webpack://obs-helper/./node_modules/fs-extra/lib/util/stat.js","../webpack://obs-helper/./node_modules/fs-extra/lib/util/utimes.js","../webpack://obs-helper/./node_modules/graceful-fs/clone.js","../webpack://obs-helper/./node_modules/graceful-fs/graceful-fs.js","../webpack://obs-helper/./node_modules/graceful-fs/legacy-streams.js","../webpack://obs-helper/./node_modules/graceful-fs/polyfills.js","../webpack://obs-helper/./node_modules/has-flag/index.js","../webpack://obs-helper/./node_modules/jsonfile/index.js","../webpack://obs-helper/./node_modules/log4js/lib/LoggingEvent.js","../webpack://obs-helper/./node_modules/log4js/lib/appenders/adapters.js","../webpack://obs-helper/./node_modules/log4js/lib/appenders/categoryFilter.js","../webpack://obs-helper/./node_modules/log4js/lib/appenders/console.js","../webpack://obs-helper/./node_modules/log4js/lib/appenders/dateFile.js","../webpack://obs-helper/./node_modules/log4js/lib/appenders/file.js","../webpack://obs-helper/./node_modules/log4js/lib/appenders/fileSync.js","../webpack://obs-helper/./node_modules/log4js/lib/appenders/index.js","../webpack://obs-helper/./node_modules/log4js/lib/appenders/logLevelFilter.js","../webpack://obs-helper/./node_modules/log4js/lib/appenders/noLogFilter.js","../webpack://obs-helper/./node_modules/log4js/lib/appenders/recording.js","../webpack://obs-helper/./node_modules/log4js/lib/appenders/stderr.js","../webpack://obs-helper/./node_modules/log4js/lib/appenders/stdout.js","../webpack://obs-helper/./node_modules/log4js/lib/appenders/tcp.js","../webpack://obs-helper/./node_modules/log4js/lib/categories.js","../webpack://obs-helper/./node_modules/log4js/lib/clustering.js","../webpack://obs-helper/./node_modules/log4js/lib/configuration.js","../webpack://obs-helper/./node_modules/log4js/lib/connect-logger.js","../webpack://obs-helper/./node_modules/log4js/lib/layouts.js","../webpack://obs-helper/./node_modules/log4js/lib/levels.js","../webpack://obs-helper/./node_modules/log4js/lib/log4js.js","../webpack://obs-helper/./node_modules/log4js/lib/logger.js","../webpack://obs-helper/./node_modules/ms/index.js","../webpack://obs-helper/./node_modules/rfdc/index.js","../webpack://obs-helper/./node_modules/sax/lib/sax.js","../webpack://obs-helper/./node_modules/streamroller/lib/DateRollingFileStream.js","../webpack://obs-helper/./node_modules/streamroller/lib/RollingFileStream.js","../webpack://obs-helper/./node_modules/streamroller/lib/RollingFileWriteStream.js","../webpack://obs-helper/./node_modules/streamroller/lib/fileNameFormatter.js","../webpack://obs-helper/./node_modules/streamroller/lib/fileNameParser.js","../webpack://obs-helper/./node_modules/streamroller/lib/index.js","../webpack://obs-helper/./node_modules/streamroller/lib/moveAndMaybeCompressFile.js","../webpack://obs-helper/./node_modules/streamroller/lib/now.js","../webpack://obs-helper/./node_modules/supports-color/index.js","../webpack://obs-helper/./node_modules/tunnel/index.js","../webpack://obs-helper/./node_modules/tunnel/lib/tunnel.js","../webpack://obs-helper/./node_modules/universalify/index.js","../webpack://obs-helper/./node_modules/xml2js/lib/bom.js","../webpack://obs-helper/./node_modules/xml2js/lib/builder.js","../webpack://obs-helper/./node_modules/xml2js/lib/defaults.js","../webpack://obs-helper/./node_modules/xml2js/lib/parser.js","../webpack://obs-helper/./node_modules/xml2js/lib/processors.js","../webpack://obs-helper/./node_modules/xml2js/lib/xml2js.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/DocumentPosition.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/NodeType.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/Utility.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/WriterState.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLAttribute.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLCData.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLCharacterData.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLComment.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLDOMConfiguration.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLDOMImplementation.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLDOMStringList.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLDTDAttList.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLDTDElement.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLDTDEntity.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLDTDNotation.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLDeclaration.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLDocType.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLDocument.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLDocumentCB.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLDummy.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLElement.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLNamedNodeMap.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLNode.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLNodeList.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLProcessingInstruction.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLRaw.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLStreamWriter.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLStringWriter.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLStringifier.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLText.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/XMLWriterBase.js","../webpack://obs-helper/./node_modules/xmlbuilder/lib/index.js","../webpack://obs-helper/external \"assert\"","../webpack://obs-helper/external \"cluster\"","../webpack://obs-helper/external \"constants\"","../webpack://obs-helper/external \"crypto\"","../webpack://obs-helper/external \"events\"","../webpack://obs-helper/external \"fs\"","../webpack://obs-helper/external \"http\"","../webpack://obs-helper/external \"https\"","../webpack://obs-helper/external \"net\"","../webpack://obs-helper/external \"os\"","../webpack://obs-helper/external \"path\"","../webpack://obs-helper/external \"process\"","../webpack://obs-helper/external \"stream\"","../webpack://obs-helper/external \"string_decoder\"","../webpack://obs-helper/external \"timers\"","../webpack://obs-helper/external \"tls\"","../webpack://obs-helper/external \"tty\"","../webpack://obs-helper/external \"url\"","../webpack://obs-helper/external \"util\"","../webpack://obs-helper/external \"zlib\"","../webpack://obs-helper/webpack/bootstrap","../webpack://obs-helper/webpack/runtime/compat","../webpack://obs-helper/webpack/startup"],"sourcesContent":["\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getObsClient = exports.getBucketInputs = exports.getObjectInputs = exports.getCommonInputs = exports.getOperationType = void 0;\r\nconst core = __importStar(require(\"@actions/core\"));\r\nconst cred = __importStar(require(\"./credential\"));\r\nfunction getOperationType() {\r\n    return core.getInput('operation_type', { required: true });\r\n}\r\nexports.getOperationType = getOperationType;\r\nfunction getCommonInputs() {\r\n    return {\r\n        accessKey: cred.getCredential('access_key', true),\r\n        secretKey: cred.getCredential('secret_key', true),\r\n        region: cred.getCredential('region', true),\r\n        operationType: core.getInput('operation_type', { required: true }),\r\n        bucketName: core.getInput('bucket_name', { required: true }),\r\n    };\r\n}\r\nexports.getCommonInputs = getCommonInputs;\r\nfunction getObjectInputs() {\r\n    var _a;\r\n    return {\r\n        accessKey: cred.getCredential('access_key', true),\r\n        secretKey: cred.getCredential('secret_key', true),\r\n        region: cred.getCredential('region', true),\r\n        operationType: core.getInput('operation_type', { required: true }),\r\n        bucketName: core.getInput('bucket_name', { required: true }),\r\n        localFilePath: core.getMultilineInput('local_file_path', { required: false }),\r\n        obsFilePath: core.getInput('obs_file_path', { required: false }),\r\n        includeSelfFolder: (_a = core.getBooleanInput('include_self_folder', { required: false })) !== null && _a !== void 0 ? _a : false,\r\n        exclude: core.getMultilineInput('exclude', { required: false }),\r\n    };\r\n}\r\nexports.getObjectInputs = getObjectInputs;\r\nfunction getBucketInputs() {\r\n    return {\r\n        accessKey: cred.getCredential('access_key', true),\r\n        secretKey: cred.getCredential('secret_key', true),\r\n        region: cred.getCredential('region', true),\r\n        operationType: core.getInput('operation_type', { required: true }),\r\n        bucketName: core.getInput('bucket_name', { required: true }),\r\n        publicRead: core.getBooleanInput('public_read', { required: false }),\r\n        storageClass: core.getInput('storage_class', { required: false }),\r\n        clearBucket: core.getBooleanInput('clear_bucket', { required: false }),\r\n    };\r\n}\r\nexports.getBucketInputs = getBucketInputs;\r\n/**\r\n * 根据ak/sk，初始化Obs客户端\r\n * @param ak AK\r\n * @param sk SK\r\n * @param server 连接OBS的服务地址\r\n * @returns obsClient为引入的obs库的类型，本身并未导出其类型，故使用any\r\n */\r\nfunction getObsClient(ak, sk, server) {\r\n    const ObsClient = require('esdk-obs-nodejs'); // eslint-disable-line @typescript-eslint/no-var-requires\r\n    try {\r\n        const obs = new ObsClient({\r\n            access_key_id: ak,\r\n            secret_access_key: sk,\r\n            server: server,\r\n        });\r\n        return obs;\r\n    }\r\n    catch (error) {\r\n        core.setFailed('init obs client fail.');\r\n    }\r\n}\r\nexports.getObsClient = getObsClient;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getCredential = void 0;\r\nconst core = __importStar(require(\"@actions/core\"));\r\nconst HUAWEI_ClOUD_CREDENTIALS_ENVIRONMENT_VARIABLE_MAP = new Map([\r\n    ['access_key', 'HUAWEI_CLOUD_ACCESS_KEY_ID'],\r\n    ['secret_key', 'HUAWEI_CLOUD_SECRET_ACCESS_KEY'],\r\n    ['region', 'HUAWEI_CLOUD_REGION'],\r\n    ['project_id', 'HUAWEI_CLOUD_PROJECT_ID'],\r\n]);\r\nfunction getCredential(param, isRequired) {\r\n    const environmentVariable = HUAWEI_ClOUD_CREDENTIALS_ENVIRONMENT_VARIABLE_MAP.get(param) || '';\r\n    const credFromEnv = process.env[environmentVariable];\r\n    const cred = credFromEnv !== null && credFromEnv !== void 0 ? credFromEnv : core.getInput(param, { required: false });\r\n    if (isRequired && !cred) {\r\n        core.setFailed(`The Huawei Cloud credential input ${param} is not correct. Please switch to using huaweicloud/auth-action which supports authenticating to Huawei Cloud.`);\r\n    }\r\n    return cred;\r\n}\r\nexports.getCredential = getCredential;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst core = __importStar(require(\"@actions/core\"));\r\nconst context = __importStar(require(\"./context\"));\r\nconst utils = __importStar(require(\"./utils\"));\r\nconst upload = __importStar(require(\"./obs/upload\"));\r\nconst download = __importStar(require(\"./obs/download\"));\r\nconst bucket = __importStar(require(\"./obs/bucket\"));\r\nfunction run() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const commonInputs = context.getCommonInputs();\r\n        if (!utils.checkCommonInputs(commonInputs)) {\r\n            return;\r\n        }\r\n        // 初始化OBS客户端\r\n        const obs = context.getObsClient(commonInputs.accessKey, commonInputs.secretKey, `https://obs.${commonInputs.region}.myhuaweicloud.com`);\r\n        const operationCategory = utils.getOperationCategory(context.getOperationType());\r\n        if (operationCategory === 'object') {\r\n            handleObject(obs);\r\n        }\r\n        else if (operationCategory === 'bucket') {\r\n            handleBucket(obs);\r\n        }\r\n        else {\r\n            core.setFailed(`please check your operation_type. you can use 'download', 'upload', 'createbucket' or 'deletebucket'.`);\r\n        }\r\n    });\r\n}\r\n/**\r\n * 处理对象，目前支持上传对象，下载对象\r\n * @param obs OBS客户端\r\n * @returns\r\n */\r\nfunction handleObject(obs) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const inputs = context.getObjectInputs();\r\n        if (!utils.checkObjectInputs(inputs)) {\r\n            return;\r\n        }\r\n        // 若桶不存在，退出\r\n        if (!(yield bucket.hasBucket(obs, inputs.bucketName))) {\r\n            core.setFailed(`The bucket: ${inputs.bucketName} does not exists.`);\r\n            return;\r\n        }\r\n        // 执行上传/下载操作\r\n        if (inputs.operationType === 'upload') {\r\n            yield upload.uploadFileOrFolder(obs, inputs);\r\n        }\r\n        if (inputs.operationType === 'download') {\r\n            yield download.downloadFileOrFolder(obs, inputs);\r\n        }\r\n    });\r\n}\r\n/**\r\n * 处理桶，目前支持新增桶，删除桶\r\n * @param obs OBS客户端\r\n * @returns\r\n */\r\nfunction handleBucket(obs) {\r\n    var _a;\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const inputs = context.getBucketInputs();\r\n        if (!utils.checkBucketInputs(inputs)) {\r\n            return;\r\n        }\r\n        if (inputs.operationType.toLowerCase() === 'createbucket') {\r\n            bucket.createBucket(obs, inputs.bucketName, inputs.region, inputs.publicRead, utils.getStorageClass((_a = inputs.storageClass) !== null && _a !== void 0 ? _a : ''));\r\n        }\r\n        if (inputs.operationType.toLowerCase() === 'deletebucket') {\r\n            yield bucket.deleteBucket(obs, inputs.bucketName, inputs.clearBucket);\r\n        }\r\n    });\r\n}\r\nrun();\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.deleteBucket = exports.abortAllMultipartUpload = exports.deleteAllObjects = exports.clearBuckets = exports.isBucketEmpty = exports.getAllMultipartUploads = exports.listMultipartUploads = exports.getAllVersionObjects = exports.listVersionObjects = exports.getAllObjects = exports.listObjects = exports.getBucketVersioning = exports.createBucket = exports.hasBucket = void 0;\r\nconst core = __importStar(require(\"@actions/core\"));\r\n/**\r\n * 判断桶是否存在\r\n * @param obsClient obs客户端，因obsClient为引入的obs库的类型，本身并未导出其类型，故使用any，下同\r\n * @param bucketName 桶名\r\n * @returns\r\n */\r\nfunction hasBucket(obsClient, bucketName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const promise = yield obsClient.headBucket({\r\n            Bucket: bucketName,\r\n        });\r\n        return !(promise.CommonMsg.Status === 404);\r\n    });\r\n}\r\nexports.hasBucket = hasBucket;\r\n/**\r\n * 创建桶\r\n * @param obsClient obs客户端\r\n * @param bucketName 桶名\r\n * @param region 桶所在区域\r\n * @param publicRead 是否开放公共读权限\r\n * @param storageClass 存储类型\r\n * @returns\r\n */\r\nfunction createBucket(obsClient, bucketName, region, publicRead, storageClass) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (yield hasBucket(obsClient, bucketName)) {\r\n            core.setFailed(`The bucket: ${bucketName} already exists.`);\r\n            return false;\r\n        }\r\n        obsClient\r\n            .createBucket({\r\n            Bucket: bucketName,\r\n            Location: region,\r\n            ACL: publicRead ? obsClient.enums['AclPublicRead'] : obsClient.enums['AclPrivate'],\r\n            StorageClass: storageClass ? obsClient.enums[storageClass] : '',\r\n        })\r\n            .then((result) => {\r\n            if (result.CommonMsg.Status < 300) {\r\n                if (result.InterfaceResult) {\r\n                    core.info(`create bucket: ${bucketName} Successfully.`);\r\n                    return true;\r\n                }\r\n            }\r\n            else {\r\n                core.setFailed(`create bucket: ${bucketName} failed, ${result.CommonMsg.Message}.`);\r\n                return false;\r\n            }\r\n        })\r\n            .catch((err) => {\r\n            core.setFailed(`create bucket: ${bucketName} failed, ${err}.`);\r\n            return false;\r\n        });\r\n        return false;\r\n    });\r\n}\r\nexports.createBucket = createBucket;\r\n/**\r\n * 获取桶的多版本状态\r\n * @param obsClient obs客户端\r\n * @param bucketName 桶名\r\n * @returns\r\n */\r\nfunction getBucketVersioning(obsClient, bucketName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const result = yield obsClient.getBucketVersioning({\r\n            Bucket: bucketName,\r\n        });\r\n        if (result.CommonMsg.Status < 300) {\r\n            return result.InterfaceResult.VersionStatus;\r\n        }\r\n        else {\r\n            core.info(`get bucket versioning failed because ${result.CommonMsg.Message}`);\r\n            return '';\r\n        }\r\n    });\r\n}\r\nexports.getBucketVersioning = getBucketVersioning;\r\n/**\r\n * 根据前缀和起始位置，列举桶内对象\r\n * @param obsClient Obs客户端\r\n * @param bucketName 桶名\r\n * @param obsPath obs上请求的对象前缀\r\n * @param marker 起始位置\r\n * @returns\r\n */\r\nfunction listObjects(obsClient, bucketName, obsPath, marker) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return yield obsClient.listObjects({\r\n            Bucket: bucketName,\r\n            Prefix: obsPath,\r\n            Marker: marker !== null && marker !== void 0 ? marker : '',\r\n        });\r\n    });\r\n}\r\nexports.listObjects = listObjects;\r\n/**\r\n * 列举桶内全部对象\r\n * @param obsClient obs客户端\r\n * @param bucketName 桶名\r\n * @param nextMarker 起始位置\r\n */\r\nfunction getAllObjects(obsClient, bucketName, nextMarker) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const objList = [];\r\n        let isTruncated = true;\r\n        let marker = nextMarker;\r\n        while (isTruncated) {\r\n            const result = yield listObjects(obsClient, bucketName, '', marker);\r\n            result.InterfaceResult.Contents.forEach((elem) => {\r\n                objList.push({ Key: elem['Key'] });\r\n            });\r\n            isTruncated = result.InterfaceResult.IsTruncated === 'true';\r\n            marker = result.InterfaceResult.NextMarker;\r\n        }\r\n        return objList;\r\n    });\r\n}\r\nexports.getAllObjects = getAllObjects;\r\n/**\r\n * 根据起始位置，列举多版本桶内对象\r\n * @param obsClient Obs客户端\r\n * @param bucketName 桶名\r\n * @param nextKeyMarker 列举多版本对象的起始位置\r\n * @param nextVersionIdMarker 作为标记的多版本对象的版本, 与nextKeyMarker配合使用\r\n * @returns\r\n */\r\nfunction listVersionObjects(obsClient, bucketName, nextKeyMarker, nextVersionIdMarker) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return yield obsClient.listVersions({\r\n            Bucket: bucketName,\r\n            KeyMarker: nextKeyMarker !== null && nextKeyMarker !== void 0 ? nextKeyMarker : '',\r\n            VersionIdMarker: nextVersionIdMarker !== null && nextVersionIdMarker !== void 0 ? nextVersionIdMarker : '',\r\n        });\r\n    });\r\n}\r\nexports.listVersionObjects = listVersionObjects;\r\n/**\r\n * 列举桶内全部多版本对象\r\n * @param obsClient obs客户端\r\n * @param bucketName 桶名\r\n * @param nextKeyMarker 多版本对象的起始位置\r\n * @param nextVersionMaker 作为标记的多版本对象的版本\r\n */\r\nfunction getAllVersionObjects(obsClient, bucketName, nextKeyMarker, nextVersionMaker) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const objList = [];\r\n        let isTruncated = true;\r\n        let keyMarker = nextKeyMarker;\r\n        let versionMaker = nextVersionMaker;\r\n        while (isTruncated) {\r\n            const result = yield listVersionObjects(obsClient, bucketName, keyMarker, versionMaker);\r\n            result.InterfaceResult.Versions.forEach((elem) => {\r\n                objList.push({\r\n                    Key: elem['Key'],\r\n                    VersionId: elem['VersionId'],\r\n                });\r\n            });\r\n            result.InterfaceResult.DeleteMarkers.forEach((elem) => {\r\n                objList.push({\r\n                    Key: elem['Key'],\r\n                    VersionId: elem['VersionId'],\r\n                });\r\n            });\r\n            isTruncated = result.InterfaceResult.IsTruncated === 'true';\r\n            keyMarker = result.InterfaceResult.NextKeyMarker;\r\n            versionMaker = result.InterfaceResult.NextVersionIdMarker;\r\n        }\r\n        return objList;\r\n    });\r\n}\r\nexports.getAllVersionObjects = getAllVersionObjects;\r\n/**\r\n * 列举桶内分段上传任务\r\n * @param obsClient obs客户端\r\n * @param bucketName 桶名\r\n * @param nextKeyMarker 分段上传任务的起始位置\r\n * @param nextUploadIdMarker 指定起始位置任务的uploadid\r\n * @returns\r\n */\r\nfunction listMultipartUploads(obsClient, bucketName, nextKeyMarker, nextUploadIdMarker) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return yield obsClient.listMultipartUploads({\r\n            Bucket: bucketName,\r\n            KeyMarker: nextKeyMarker !== null && nextKeyMarker !== void 0 ? nextKeyMarker : '',\r\n            UploadIdMarker: nextUploadIdMarker !== null && nextUploadIdMarker !== void 0 ? nextUploadIdMarker : '',\r\n        });\r\n    });\r\n}\r\nexports.listMultipartUploads = listMultipartUploads;\r\n/**\r\n * 列举桶内全部分段上传任务\r\n * @param obsClient obs客户端\r\n * @param bucketName 桶名\r\n * @param nextKeyMarker 分段上传任务的起始位置\r\n * @param nextUploadIdMarker 起始位置任务的uploadid\r\n * @returns\r\n */\r\nfunction getAllMultipartUploads(obsClient, bucketName, nextKeyMarker, nextUploadIdMarker) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const partList = [];\r\n        let isTruncated = true;\r\n        let keyMarker = nextKeyMarker;\r\n        let uploadIdMarker = nextUploadIdMarker;\r\n        while (isTruncated) {\r\n            const result = yield listMultipartUploads(obsClient, bucketName, keyMarker, uploadIdMarker);\r\n            result.InterfaceResult.Uploads.forEach((elem) => {\r\n                partList.push({\r\n                    Key: elem['Key'],\r\n                    UploadId: elem['UploadId'],\r\n                });\r\n            });\r\n            isTruncated = result.InterfaceResult.IsTruncated === 'true';\r\n            keyMarker = result.InterfaceResult.NextKeyMarker;\r\n            uploadIdMarker = result.InterfaceResult.NextUploadIdMarker;\r\n        }\r\n        return partList;\r\n    });\r\n}\r\nexports.getAllMultipartUploads = getAllMultipartUploads;\r\n/**\r\n * 判断桶内是否存在对象/多版本对象/任务\r\n * @param obsClient obs客户端\r\n * @param bucketName 桶名\r\n * @returns\r\n */\r\nfunction isBucketEmpty(obsClient, bucketName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const bucketVersioning = yield getBucketVersioning(obsClient, bucketName);\r\n        if (bucketVersioning === 'Enabled') {\r\n            return ((yield getAllVersionObjects(obsClient, bucketName)).length +\r\n                (yield getAllMultipartUploads(obsClient, bucketName)).length ===\r\n                0);\r\n        }\r\n        else if (bucketVersioning === 'Suspended' || bucketVersioning === undefined) {\r\n            return ((yield getAllObjects(obsClient, bucketName)).length +\r\n                (yield getAllMultipartUploads(obsClient, bucketName)).length ===\r\n                0);\r\n        }\r\n        return false;\r\n    });\r\n}\r\nexports.isBucketEmpty = isBucketEmpty;\r\n/**\r\n * 清空桶内全部对象和任务\r\n * @param obsClient obs客户端\r\n * @param bucketName 桶名\r\n * @returns\r\n */\r\nfunction clearBuckets(obsClient, bucketName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        core.info('start clear bucket');\r\n        const clearObject = yield deleteAllObjects(obsClient, bucketName);\r\n        const clearPart = yield abortAllMultipartUpload(obsClient, bucketName);\r\n        if (clearObject && clearPart) {\r\n            core.info(`bucket: ${bucketName} cleared successfully.`);\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n}\r\nexports.clearBuckets = clearBuckets;\r\n/**\r\n * 删除桶内全部对象/多版本对象\r\n * @param obsClient obs客户端\r\n * @param bucketName 桶名\r\n * @returns\r\n */\r\nfunction deleteAllObjects(obsClient, bucketName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const bucketVersioning = yield getBucketVersioning(obsClient, bucketName);\r\n        let objectList = [];\r\n        if (bucketVersioning === 'Enabled') {\r\n            objectList = yield getAllVersionObjects(obsClient, bucketName);\r\n        }\r\n        else if (bucketVersioning === 'Suspended' || bucketVersioning === undefined) {\r\n            objectList = yield getAllObjects(obsClient, bucketName);\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n        if (objectList.length === 0) {\r\n            return true;\r\n        }\r\n        core.info('start clear objects.');\r\n        // 批量删除一次仅支持最大1000个\r\n        while (objectList.length > 1000) {\r\n            yield deleteObjects(obsClient, bucketName, objectList.splice(0, 1000));\r\n        }\r\n        yield deleteObjects(obsClient, bucketName, objectList);\r\n        objectList = yield getAllObjects(obsClient, bucketName);\r\n        if (objectList.length > 0) {\r\n            core.info('delete all objects failed, please try again or delete objects by yourself.');\r\n            return false;\r\n        }\r\n        else {\r\n            core.info('finish clear objects.');\r\n            return true;\r\n        }\r\n    });\r\n}\r\nexports.deleteAllObjects = deleteAllObjects;\r\n/**\r\n * 批量删除对象/多版本对象\r\n * @param obsClient obs客户端\r\n * @param bucketName 桶名\r\n * @param delList 待删除对象列表\r\n */\r\nfunction deleteObjects(obsClient, bucketName, delList) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        yield obsClient\r\n            .deleteObjects({\r\n            Bucket: bucketName,\r\n            Quiet: false,\r\n            Objects: delList,\r\n        })\r\n            .then((result) => {\r\n            if (result.CommonMsg.Status === 400) {\r\n                core.info(`Delete failed because ${result.CommonMsg.Message}`);\r\n            }\r\n            else if (result.InterfaceResult.Errors.length > 0) {\r\n                core.info(`Failed to delete objects: ${result.InterfaceResult.Errors}.`);\r\n            }\r\n            else {\r\n                core.info(`Successfully delete ${delList.length} objects.`);\r\n            }\r\n        });\r\n    });\r\n}\r\n/**\r\n * 取消桶内所有分段上传任务\r\n * @param obsClient obs客户端\r\n * @param bucketName 桶名\r\n * @returns\r\n */\r\nfunction abortAllMultipartUpload(obsClient, bucketName) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const partList = yield getAllMultipartUploads(obsClient, bucketName);\r\n        if (partList.length === 0) {\r\n            return true;\r\n        }\r\n        core.info('start clear part.');\r\n        for (const part of partList) {\r\n            yield obsClient.abortMultipartUpload({\r\n                Bucket: bucketName,\r\n                Key: part.Key,\r\n                UploadId: part.UploadId,\r\n            });\r\n        }\r\n        core.info('finish clear part.');\r\n        return true;\r\n    });\r\n}\r\nexports.abortAllMultipartUpload = abortAllMultipartUpload;\r\n/**\r\n * 删除桶\r\n * @param obsClient obs客户端\r\n * @param bucketName 桶名\r\n * @param forceClear 是否强制清空桶\r\n * @returns\r\n */\r\nfunction deleteBucket(obsClient, bucketName, forceClear) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        // 若桶不存在，退出\r\n        if (!(yield hasBucket(obsClient, bucketName))) {\r\n            core.setFailed(`The bucket: ${bucketName} does not exists.`);\r\n            return false;\r\n        }\r\n        // 若桶非空且用户设置不强制清空桶，退出\r\n        let isEmpty = yield isBucketEmpty(obsClient, bucketName);\r\n        if (!isEmpty && !forceClear) {\r\n            core.setFailed('some object or parts already exist in bucket, please delete them first or set parameter \"clear_bucket\" as true.');\r\n            return false;\r\n        }\r\n        if (!isEmpty) {\r\n            isEmpty = yield clearBuckets(obsClient, bucketName);\r\n        }\r\n        obsClient.deleteBucket({\r\n            Bucket: bucketName,\r\n        })\r\n            .then((result) => {\r\n            if (result.CommonMsg.Status < 300) {\r\n                core.info(`delete bucket: ${bucketName} successfully.`);\r\n                return true;\r\n            }\r\n            else {\r\n                core.setFailed(`delete bucket: ${bucketName} failed, ${result.CommonMsg.Message}.`);\r\n            }\r\n        })\r\n            .catch((err) => {\r\n            core.setFailed(`delete bucket: ${bucketName} failed, ${err}.`);\r\n        });\r\n        return false;\r\n    });\r\n}\r\nexports.deleteBucket = deleteBucket;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.getDownloadList = exports.getLocalFileName = exports.downloadFile = exports.downloadFolder = exports.createLocalRootFolder = exports.getDownloadRoot = exports.pathIsSingleFile = exports.downloadFileOrFolder = void 0;\r\nconst fs = __importStar(require(\"fs\"));\r\nconst path_1 = __importDefault(require(\"path\"));\r\nconst core = __importStar(require(\"@actions/core\"));\r\nconst bucket = __importStar(require(\"./bucket\"));\r\nconst utils = __importStar(require(\"../utils\"));\r\n/**\r\n * 下载文件或者文件夹\r\n * @param obsClient Obs客户端，因obsClient为引入的obs库的类型，本身并未导出其类型，故使用any，下同\r\n * @param inputs 用户输入的参数\r\n * @returns\r\n */\r\nfunction downloadFileOrFolder(obsClient, inputs) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const inputLocalFilePath = utils.replaceSlash(path_1.default.normalize(inputs.localFilePath[0]));\r\n        const downloadPathList = yield getDownloadList(obsClient, inputs, inputs.obsFilePath);\r\n        if (downloadPathList.length < 1) {\r\n            core.setFailed('object not exist in obs or no object needed downloaded.');\r\n            return;\r\n        }\r\n        if (pathIsSingleFile(downloadPathList, inputs.obsFilePath)) {\r\n            // 下载单个文件时，以'/'结尾，代表下载到localpath代表的文件夹中，下载文件夹时无此限制\r\n            const fileLocalPath = utils.isEndWithSlash(inputLocalFilePath)\r\n                ? `${inputLocalFilePath}${path_1.default.basename(downloadPathList[0])}`\r\n                : inputLocalFilePath;\r\n            yield downloadFile(obsClient, inputs, downloadPathList[0], fileLocalPath);\r\n        }\r\n        else {\r\n            yield downloadFilesFromObs(obsClient, inputs, downloadPathList, inputLocalFilePath);\r\n        }\r\n    });\r\n}\r\nexports.downloadFileOrFolder = downloadFileOrFolder;\r\n/**\r\n * 待下载的对象是否为单个文件\r\n * @param downloadPathList 待下载的对象列表\r\n * @param obsPath 对象在obs上的path\r\n * @returns\r\n */\r\nfunction pathIsSingleFile(downloadPathList, obsPath) {\r\n    return (downloadPathList.length === 1 && downloadPathList[0] === obsPath && !utils.isEndWithSlash(downloadPathList[0]));\r\n}\r\nexports.pathIsSingleFile = pathIsSingleFile;\r\n/**\r\n * 下载多个文件/文件夹\r\n * @param obsClient Obs客户端\r\n * @param inputs 用户输入的参数\r\n * @param downloadList 待下载列表\r\n * @param localPath 本地path\r\n */\r\nfunction downloadFilesFromObs(obsClient, inputs, downloadList, localPath) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const localRoot = getDownloadRoot(localPath, inputs.obsFilePath, !!inputs.includeSelfFolder);\r\n        if (localRoot !== '' && utils.replaceSlash(path_1.default.normalize(localRoot)) !== '/') {\r\n            createLocalRootFolder(utils.replaceSlash(path_1.default.normalize(localRoot)));\r\n        }\r\n        let delFolderPath = ''; // 用来记录无法下载的文件夹\r\n        for (const path of downloadList) {\r\n            if (delFolderPath === '' || !path.match(`^${delFolderPath}`)) {\r\n                let finalLocalPath = `${localRoot}${utils.getPathWithoutRootPath(utils.getStringDelLastSlash(inputs.obsFilePath), path)}`;\r\n                // 若本地有和待下载文件同名的文件夹，给文件名加后缀下载\r\n                if (downloadList.indexOf(`${finalLocalPath}/`) !== -1) {\r\n                    finalLocalPath = `${finalLocalPath}${new Date().valueOf()}`;\r\n                }\r\n                // 下载文件/文件夹\r\n                if (utils.isEndWithSlash(finalLocalPath)) {\r\n                    // 若本地有和待下载文件夹同名的文件，停止下载此文件夹\r\n                    if (utils.isExistSameNameFile(finalLocalPath)) {\r\n                        core.info(`download folder \"${finalLocalPath}\" failed, because there is already a file with the same name\".`);\r\n                        delFolderPath = path;\r\n                    }\r\n                    else {\r\n                        delFolderPath = downloadFolder(finalLocalPath);\r\n                    }\r\n                }\r\n                else {\r\n                    yield downloadFile(obsClient, inputs, path, finalLocalPath);\r\n                }\r\n            }\r\n        }\r\n    });\r\n}\r\n/**\r\n * 根据includeSelfFolder，获取本地文件根目录\r\n * @param localPath 本地path\r\n * @param obsPath 对象在obs上的path\r\n * @param includeSelfFolder 是否包含文件夹自身\r\n * @returns\r\n */\r\nfunction getDownloadRoot(localPath, obsPath, includeSelfFolder) {\r\n    return includeSelfFolder\r\n        ? `${utils.getStringDelLastSlash(localPath)}/${utils.getStringDelLastSlash(obsPath).split('/').pop()}`\r\n        : utils.getStringDelLastSlash(localPath);\r\n}\r\nexports.getDownloadRoot = getDownloadRoot;\r\n/**\r\n * 下载文件夹时，检查并创建本地根目录\r\n * @param localPath\r\n */\r\nfunction createLocalRootFolder(localPath) {\r\n    let local = localPath.startsWith('/') ? '/' : '';\r\n    for (const dir of localPath.split('/')) {\r\n        local = path_1.default.join(local, dir);\r\n        utils.createFolder(local);\r\n    }\r\n}\r\nexports.createLocalRootFolder = createLocalRootFolder;\r\n/**\r\n * 下载文件夹\r\n * @param localPath 文件夹要下载在本地的路径\r\n * @returns\r\n */\r\nfunction downloadFolder(localPath) {\r\n    const isCreated = utils.createFolder(localPath);\r\n    if (isCreated) {\r\n        return '';\r\n    }\r\n    else {\r\n        core.setFailed(`failed to create folder: \"${localPath}\"`);\r\n        return localPath;\r\n    }\r\n}\r\nexports.downloadFolder = downloadFolder;\r\n/**\r\n * 下载文件\r\n * @param obsClient Obs客户端\r\n * @param inputs 用户输入的参数\r\n * @param obsPath 对象在obs上的路径\r\n * @param localPath 文件要下载在本地的路径\r\n */\r\nfunction downloadFile(obsClient, inputs, obsPath, localPath) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let localFileName = localPath !== null && localPath !== void 0 ? localPath : getLocalFileName(utils.getStringDelLastSlash(inputs.localFilePath[0]), obsPath);\r\n        // 若本地存在同名文件夹，下载到此文件夹中。若此文件夹中还存在同名文件夹，放弃本次下载\r\n        if (utils.isExistSameNameFolder(localFileName)) {\r\n            core.info(`a folder already exists on the local that has the same name as the path for downloading the obs file \"${obsPath}\"`);\r\n            core.info(`try to download obs file in this folder`);\r\n            const nextFileName = `${localFileName}/${path_1.default.basename(localFileName)}`;\r\n            if (utils.isExistSameNameFolder(nextFileName)) {\r\n                core.info(`download file \"${localFileName}\" failed, because \"${localFileName}\" already exists as a folder on the local.`);\r\n                return;\r\n            }\r\n            else {\r\n                localFileName = nextFileName;\r\n            }\r\n        }\r\n        core.info(`start download obs file: \"${obsPath}\"`);\r\n        const result = yield obsClient.getObject({\r\n            Bucket: inputs.bucketName,\r\n            Key: obsPath,\r\n            SaveAsFile: localFileName,\r\n        });\r\n        if (result.CommonMsg.Status < 300) {\r\n            core.info(`successfully download obs file: \"${obsPath}\"`);\r\n        }\r\n        else {\r\n            core.setFailed(`failed to download obs file: \"${obsPath}\", because ${result.CommonMsg.Message}`);\r\n        }\r\n    });\r\n}\r\nexports.downloadFile = downloadFile;\r\n/**\r\n * 获得对象应在本地的路径\r\n * @param localPath 本地文件夹路径\r\n * @param obsPath 对象在obs上的路径\r\n * @returns\r\n */\r\nfunction getLocalFileName(localPath, obsPath) {\r\n    try {\r\n        if (fs.lstatSync(localPath).isDirectory()) {\r\n            return `${localPath}/${path_1.default.basename(obsPath)}`;\r\n        }\r\n        else {\r\n            return localPath;\r\n        }\r\n    }\r\n    catch (error) {\r\n        return localPath;\r\n    }\r\n}\r\nexports.getLocalFileName = getLocalFileName;\r\n/**\r\n * 获取在obs上待下载的对象列表\r\n * 官方提供的getObject方法最大请求1000个文件，若请求的文件大于1000个则返回对象名按照字典序排序后的前1000个文件\r\n * result.InterfaceResult.IsTruncated表明本次请求是否返回了全部结果，“true”表示没有返回全部结果；“false”表示已返回了全部结果\r\n * result.InterfaceResult.NextMarker会记录下次起始位置\r\n * @param obsClient Obs客户端\r\n * @param inputs 用户输入的参数\r\n * @param obsPath 对象在obs上的路径\r\n * @returns\r\n */\r\nfunction getDownloadList(obsClient, inputs, obsPath) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const obsFilePath = utils.getStringDelLastSlash(obsPath);\r\n        let resultList = [];\r\n        let isTruncated = true;\r\n        let marker = '';\r\n        while (isTruncated) {\r\n            const result = yield bucket.listObjects(obsClient, inputs.bucketName, obsFilePath, marker);\r\n            resultList = resultList.concat(delUselessPath(result.InterfaceResult.Contents, inputs));\r\n            isTruncated = result.InterfaceResult.IsTruncated === 'true';\r\n            marker = result.InterfaceResult.NextMarker;\r\n        }\r\n        return resultList;\r\n    });\r\n}\r\nexports.getDownloadList = getDownloadList;\r\n/**\r\n * 从待下载列表中排除不需要的对象（用户输入的排除项）\r\n * @param objList 列举出的桶内对象列表\r\n * @param inputs 用户输入的参数\r\n * @returns\r\n */\r\nfunction delUselessPath(objList, inputs) {\r\n    const resultList = [];\r\n    objList.forEach((element) => {\r\n        // 删除不需要的path，仅保留inputs.obsFilePath相关的文件路径\r\n        let isInclude = true;\r\n        if (!!inputs.exclude && inputs.exclude.length > 0) {\r\n            inputs.exclude.forEach((excludeItem) => {\r\n                if (excludeItem && element['Key'].search(`^${utils.getStringDelLastSlash(excludeItem)}`) > -1) {\r\n                    isInclude = false;\r\n                }\r\n            });\r\n        }\r\n        if (isInclude) {\r\n            resultList.push(element['Key']);\r\n        }\r\n    });\r\n    return resultList;\r\n}\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.mergeParts = exports.uploadParts = exports.initMultipartUpload = exports.multipartUpload = exports.obsCreateRootFolder = exports.uploadFolder = exports.uploadFile = exports.fileDisplay = exports.getObsFilePath = exports.formatObsPath = exports.getObsRootFile = exports.uploadFileOrFolder = void 0;\r\nconst fs = __importStar(require(\"fs\"));\r\nconst path = __importStar(require(\"path\"));\r\nconst utils = __importStar(require(\"../utils\"));\r\nconst core = __importStar(require(\"@actions/core\"));\r\nconst types_1 = require(\"../types\");\r\n/**\r\n * 上传文件/文件夹\r\n * @param obsClient  Obs客户端，因obsClient为引入的obs库的类型，本身并未导出其类型，故使用any，下同\r\n * @param inputs 用户输入的参数\r\n */\r\nfunction uploadFileOrFolder(obsClient, inputs) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        for (const localPath of inputs.localFilePath) {\r\n            const localFilePath = utils.getStringDelLastSlash(localPath); // 去除本地路径参数结尾的'/'，方便后续使用\r\n            const localName = path.basename(localFilePath);\r\n            try {\r\n                const fsStat = fs.lstatSync(localFilePath);\r\n                if (fsStat.isFile()) {\r\n                    yield uploadFile(obsClient, inputs.bucketName, localFilePath, getObsFilePath(inputs, localName));\r\n                }\r\n                if (fsStat.isDirectory()) {\r\n                    const obsFileRootPath = getObsRootFile(!!inputs.includeSelfFolder, inputs.obsFilePath, localName);\r\n                    const uploadList = {\r\n                        file: [],\r\n                        folder: [],\r\n                    };\r\n                    yield fileDisplay(obsClient, inputs, localFilePath, obsFileRootPath, uploadList);\r\n                    // 若总文件数大于1000，取消上传\r\n                    const uploadListLength = uploadList.file.length + uploadList.folder.length;\r\n                    if (uploadListLength > 1000) {\r\n                        core.setFailed(`local dirctory: '${localPath}' has ${uploadListLength} files and folders,`);\r\n                        core.setFailed(`please upload a dirctory include less than 1000 files and folders.`);\r\n                        return;\r\n                    }\r\n                    if (inputs.obsFilePath) {\r\n                        yield obsCreateRootFolder(obsClient, inputs.bucketName, utils.getStringDelLastSlash(inputs.obsFilePath));\r\n                    }\r\n                    yield uploadFileAndFolder(obsClient, inputs.bucketName, uploadList);\r\n                }\r\n            }\r\n            catch (error) {\r\n                core.setFailed(`read local file or dirctory: '${localPath}' failed.`);\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.uploadFileOrFolder = uploadFileOrFolder;\r\n/**\r\n * 得到待上传对象在obs的根路径\r\n * @param includeSelf 是否包含文件夹自身\r\n * @param obsfile 用户输入的obs_file_path\r\n * @param objectName 对象在本地的名称\r\n * @returns\r\n */\r\nfunction getObsRootFile(includeSelf, obsfile, objectName) {\r\n    const formatPath = formatObsPath(obsfile);\r\n    if (includeSelf) {\r\n        return formatPath ? `${utils.getStringDelLastSlash(formatPath)}/${objectName}` : objectName;\r\n    }\r\n    else {\r\n        return utils.getStringDelLastSlash(formatPath);\r\n    }\r\n}\r\nexports.getObsRootFile = getObsRootFile;\r\n/**\r\n * 格式化上传时的obs_file_path\r\n * @param obsPath\r\n * @returns\r\n */\r\nfunction formatObsPath(obsPath) {\r\n    // 上传到根目录\r\n    if (!obsPath || utils.replaceSlash(path.normalize(obsPath)) === '/') {\r\n        return '';\r\n    }\r\n    const pathFormat = utils.replaceSlash(path.normalize(obsPath));\r\n    return pathFormat.startsWith('/') ? pathFormat.substring(1) : pathFormat;\r\n}\r\nexports.formatObsPath = formatObsPath;\r\n/**\r\n * 得到待上传文件在obs的路径\r\n * @param inputs 用户输入的参数\r\n * @param localRoot 待上传文件的根目录\r\n * @returns\r\n */\r\nfunction getObsFilePath(inputs, localRoot) {\r\n    if (!inputs.obsFilePath) {\r\n        return localRoot;\r\n    }\r\n    if (utils.isEndWithSlash(inputs.obsFilePath)) {\r\n        return `${inputs.obsFilePath}${localRoot}`;\r\n    }\r\n    else {\r\n        // 若是多路径上传时的文件,不存在重命名,默认传至obs_file_path文件夹下\r\n        return inputs.localFilePath.length > 1 ? `${inputs.obsFilePath}/${localRoot}` : inputs.obsFilePath;\r\n    }\r\n}\r\nexports.getObsFilePath = getObsFilePath;\r\n/**\r\n * 读取文件夹, 统计待上传文件/文件夹路径\r\n * @param obsClient Obs客户端\r\n * @param inputs 用户输入的参数\r\n * @param localFilePath 本地路径\r\n * @param obsFileRootPath 要上传到obs的根路径\r\n * @param uploadList 待上传文件列表\r\n */\r\nfunction fileDisplay(obsClient, inputs, localFilePath, obsFileRootPath, uploadList) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const fslist = fs.readdirSync(localFilePath);\r\n        if (fslist.length > 0) {\r\n            for (const filename of fslist) {\r\n                // 得到当前文件的绝对路径\r\n                const filepath = path.join(localFilePath, filename);\r\n                const info = fs.statSync(filepath);\r\n                const obsFilePath = obsFileRootPath ? `${obsFileRootPath}/${filename}` : `${obsFileRootPath}${filename}`;\r\n                if (info.isFile()) {\r\n                    uploadList.file.push({\r\n                        local: utils.replaceSlash(path.normalize(filepath)),\r\n                        obs: obsFilePath,\r\n                    });\r\n                }\r\n                if (info.isDirectory()) {\r\n                    uploadList.folder.push(obsFilePath);\r\n                    yield fileDisplay(obsClient, inputs, filepath, obsFilePath, uploadList);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // 是空文件夹\r\n            if (uploadList.folder.indexOf(utils.getStringDelLastSlash(obsFileRootPath)) === -1) {\r\n                uploadList.folder.push(utils.getStringDelLastSlash(obsFileRootPath));\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.fileDisplay = fileDisplay;\r\n/**\r\n * 上传文件和文件夹\r\n * @param obsClient Obs客户端\r\n * @param bucketName 桶名\r\n * @param uploadList 待上传对象列表\r\n */\r\nfunction uploadFileAndFolder(obsClient, bucketName, uploadList) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        for (const folder of uploadList.folder) {\r\n            yield uploadFolder(obsClient, bucketName, folder);\r\n        }\r\n        for (const file of uploadList.file) {\r\n            yield uploadFile(obsClient, bucketName, file.local, file.obs);\r\n        }\r\n    });\r\n}\r\n/**\r\n * 上传文件\r\n * @param obsClient Obs客户端\r\n * @param bucketName 桶名\r\n * @param localFilePath 对象在本地的路径\r\n * @param obsFilePath 对象要上传到obs的路径\r\n * @returns\r\n */\r\nfunction uploadFile(obsClient, bucketName, localFilePath, obsFilePath) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        if (utils.isFileOverSize(localFilePath)) {\r\n            core.setFailed(`your local file \"${localFilePath}\" cannot be uploaded because it is larger than 5 GB`);\r\n            return;\r\n        }\r\n        core.info(`start upload file: \"${localFilePath}\"`);\r\n        const result = yield obsClient.putObject({\r\n            Bucket: bucketName,\r\n            Key: obsFilePath,\r\n            SourceFile: localFilePath,\r\n        });\r\n        if (result.CommonMsg.Status < types_1.SUCCESS_STATUS_CODE) {\r\n            core.info(`succeessfully upload file: \"${localFilePath}\"`);\r\n        }\r\n        else {\r\n            core.setFailed(`failed to upload file: \"${localFilePath}\", because ${result.CommonMsg.Message}`);\r\n        }\r\n    });\r\n}\r\nexports.uploadFile = uploadFile;\r\n/**\r\n * 上传文件夹\r\n * 因obs无实际文件夹概念, 不需要本地路径, 只需目标路径即可\r\n * @param obsClient Obs客户端\r\n * @param bucketName 桶名\r\n * @param obsFilePath 对象要上传到obs的路径\r\n * @returns\r\n */\r\nfunction uploadFolder(obsClient, bucketName, obsFilePath) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        core.info(`start create folder \"${obsFilePath}/\"`);\r\n        const result = yield obsClient.putObject({\r\n            Bucket: bucketName,\r\n            Key: `${obsFilePath}/`,\r\n        });\r\n        if (result.CommonMsg.Status < types_1.SUCCESS_STATUS_CODE) {\r\n            core.info(`succeessfully create folder \"${obsFilePath}/\"`);\r\n        }\r\n        else {\r\n            core.setFailed(`failed to create folder \"${obsFilePath}/\", because ${result.CommonMsg.Message}`);\r\n        }\r\n    });\r\n}\r\nexports.uploadFolder = uploadFolder;\r\n/**\r\n * 在obs创建空文件夹\r\n * 上传时若指定一个obs上非已存在的路径, 则需要在obs上逐级建立文件夹\r\n * @param obsClient Obs客户端\r\n * @param bucketName 桶名\r\n * @param obsFilePath 对象要上传到obs的路径\r\n * @returns\r\n */\r\nfunction obsCreateRootFolder(obsClient, bucketName, obsFile) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const obsPathList = obsFile.split('/');\r\n        let obsPath = '';\r\n        for (const path of obsPathList) {\r\n            if (!path) {\r\n                return;\r\n            }\r\n            obsPath += `${path}/`;\r\n            core.info(`start create folder \"${obsPath}\"`);\r\n            const result = yield obsClient.putObject({\r\n                Bucket: bucketName,\r\n                Key: obsPath,\r\n            });\r\n            if (result.CommonMsg.Status < types_1.SUCCESS_STATUS_CODE) {\r\n                core.info(`succeessfully create folder \"${obsPath}\"`);\r\n            }\r\n            else {\r\n                core.setFailed(`failed to create folder \"${obsPath}\", because ${result.CommonMsg.Message}`);\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.obsCreateRootFolder = obsCreateRootFolder;\r\n/**\r\n * 分段上传\r\n * @param obs obs客户端\r\n * @param bucketName 桶名\r\n * @param objKey 上传对象在obs上的名称\r\n * @param filePath 上传对象的本地路径\r\n */\r\nfunction multipartUpload(obs, bucketName, objKey, filePath) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const uploadId = yield initMultipartUpload(obs, bucketName, objKey);\r\n        if (uploadId) {\r\n            const parts = yield uploadParts(obs, bucketName, objKey, uploadId, filePath);\r\n            if (parts.length > 0) {\r\n                yield mergeParts(obs, bucketName, objKey, uploadId, parts);\r\n            }\r\n        }\r\n    });\r\n}\r\nexports.multipartUpload = multipartUpload;\r\n/**\r\n * 初始化分段上传任务\r\n * @param obs obs客户端\r\n * @param bucketName 桶名\r\n * @param objKey 上传对象在obs上的名称\r\n * @returns\r\n */\r\nfunction initMultipartUpload(obs, bucketName, objKey) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const result = yield obs.initiateMultipartUpload({\r\n            Bucket: bucketName,\r\n            Key: objKey,\r\n        });\r\n        if (result.CommonMsg.Status < types_1.SUCCESS_STATUS_CODE) {\r\n            core.info('init multipart upload successfully.');\r\n            return result.InterfaceResult.UploadId;\r\n        }\r\n        else {\r\n            core.setFailed('init multipart upload failed.');\r\n            return '';\r\n        }\r\n    });\r\n}\r\nexports.initMultipartUpload = initMultipartUpload;\r\n/**\r\n * 上传分段\r\n * @param obs obs客户端\r\n * @param bucketName 桶名\r\n * @param objKey 上传对象在obs上的名称\r\n * @param uploadId 分段上传任务的uploadid\r\n * @param filePath 上传对象的本地路径\r\n * @returns\r\n */\r\nfunction uploadParts(obs, bucketName, objKey, uploadId, filePath) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const partSize = utils.PART_MAX_SIZE;\r\n        const fileLength = fs.lstatSync(filePath).size;\r\n        const partCount = fileLength % partSize === 0 ? Math.floor(fileLength / partSize) : Math.floor(fileLength / partSize) + 1;\r\n        core.info(`total parts count ${partCount}.`);\r\n        const parts = [];\r\n        core.info('Begin to upload multiparts to OBS from a file');\r\n        for (let i = 0; i < partCount; i++) {\r\n            const offset = i * partSize;\r\n            const currPartSize = i + 1 === partCount ? fileLength - offset : partSize;\r\n            const partNumber = i + 1;\r\n            const result = yield obs.uploadPart({\r\n                Bucket: bucketName,\r\n                Key: objKey,\r\n                PartNumber: partNumber,\r\n                UploadId: uploadId,\r\n                SourceFile: filePath,\r\n                Offset: offset,\r\n                PartSize: currPartSize,\r\n            });\r\n            if (result.CommonMsg.Status < types_1.SUCCESS_STATUS_CODE) {\r\n                parts.push({\r\n                    PartNumber: partNumber,\r\n                    ETag: result.InterfaceResult.ETag,\r\n                });\r\n            }\r\n            else {\r\n                core.setFailed(result.CommonMsg.Code);\r\n            }\r\n        }\r\n        if (parts.length === partCount) {\r\n            // Sort parts order by partNumber asc\r\n            const _parts = parts.sort((a, b) => {\r\n                if (a.PartNumber >= b.PartNumber) {\r\n                    return 1;\r\n                }\r\n                return -1;\r\n            });\r\n            return _parts;\r\n        }\r\n        return parts;\r\n    });\r\n}\r\nexports.uploadParts = uploadParts;\r\n/**\r\n * 合并分段\r\n * @param obs obs客户端\r\n * @param bucketName 桶名\r\n * @param objKey 上传对象在obs上的名称\r\n * @param uploadId 分段上传任务的uploadid\r\n * @param parts 分段上传任务的分段信息\r\n * @returns\r\n */\r\nfunction mergeParts(obs, bucketName, objKey, uploadId, parts) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        const result = yield obs.completeMultipartUpload({\r\n            Bucket: bucketName,\r\n            Key: objKey,\r\n            UploadId: uploadId,\r\n            Parts: parts,\r\n        });\r\n        if (result.CommonMsg.Status < types_1.SUCCESS_STATUS_CODE) {\r\n            core.info('Complete to upload multiparts finished.');\r\n            return true;\r\n        }\r\n        else {\r\n            core.setFailed(result.CommonMsg.Code);\r\n            return false;\r\n        }\r\n    });\r\n}\r\nexports.mergeParts = mergeParts;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.SUCCESS_STATUS_CODE = void 0;\r\nexports.SUCCESS_STATUS_CODE = 300;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n      desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.isExistSameNameFile = exports.isExistSameNameFolder = exports.isFileOverSize = exports.getStringDelLastSlash = exports.isEndWithSlash = exports.createFolder = exports.getPathWithoutRootPath = exports.replaceSlash = exports.checkBucketInputs = exports.checkObjectInputs = exports.checkCommonInputs = exports.getStorageClass = exports.checkDownloadFilePath = exports.checkUploadFilePath = exports.getOperationCategory = exports.checkBucketName = exports.checkRegion = exports.checkAkSk = exports.PART_MAX_SIZE = void 0;\r\nconst core = __importStar(require(\"@actions/core\"));\r\nconst fs = __importStar(require(\"fs\"));\r\n/**\r\n * 目前支持obs功能的region列表\r\n * LA-Santiago\tla-south-2\r\n * 非洲-约翰内斯堡\taf-south-1\r\n * 华北-北京四\tcn-north-4\r\n * 华北-北京一\tcn-north-1\r\n * 华东-上海二\tcn-east-2\r\n * 华东-上海一\tcn-east-3\r\n * 华南-广州\tcn-south-1\r\n * 拉美-墨西哥城二\tla-north-2\r\n * 拉美-墨西哥城一\tna-mexico-1\r\n * 拉美-圣保罗一\tsa-brazil-1\r\n * 亚太-曼谷\tap-southeast-2\r\n * 亚太-新加坡\tap-southeast-3\r\n * 中国-香港\tap-southeast-1\r\n */\r\nconst regionArray = [\r\n    'la-south-2',\r\n    'af-south-1',\r\n    'cn-north-4',\r\n    'cn-north-1',\r\n    'cn-east-2',\r\n    'cn-east-3',\r\n    'cn-south-1',\r\n    'la-north-2',\r\n    'na-mexico-1',\r\n    'sa-brazil-1',\r\n    'ap-southeast-2',\r\n    'ap-southeast-3',\r\n    'ap-southeast-1',\r\n];\r\n/**\r\n * 目前支持的存储类型\r\n * 标准存储 StorageClassStandard\r\n * 低频访问存储 StorageClassWarm\r\n * 归档存储 StorageClassCold\r\n */\r\nconst storageClassList = {\r\n    standard: 'StorageClassStandard',\r\n    infrequent: 'StorageClassWarm',\r\n    archive: 'StorageClassCold',\r\n};\r\n/**\r\n * 目前支持的操作类型\r\n * 对象操作 upload  download\r\n * 桶操作 createbucket  deletebucket\r\n */\r\nconst OPERATION_TYPE = {\r\n    object: ['upload', 'download'],\r\n    bucket: ['createbucket', 'deletebucket'],\r\n};\r\n/**\r\n * 允许上传的最大文件大小（单位：B）\r\n */\r\nconst FILE_MAX_SIZE = 5 * 1024 * 1024 * 1024;\r\n/**\r\n * 分段上传的段大小（单位：B）\r\n */\r\nexports.PART_MAX_SIZE = 1024 * 1024;\r\n/**\r\n * 用于验证输入参数的正则表达式\r\n */\r\nconst akReg = /^[a-zA-Z0-9]{10,30}$/;\r\nconst skReg = /^[a-zA-Z0-9]{30,50}$/;\r\nconst legalReg = /^[a-z0-9][a-z0-9.-]{1,61}[a-z0-9]$/;\r\nconst symbolReg = /([.]+[.-]+)|([-]+[.]+)/;\r\nconst ipReg = /(\\.((2(5[0-5]|[0-4]\\d))|[0-1]?\\d{1,2})){3}/;\r\n/**\r\n * 检查ak/sk是否合法\r\n * @param ak\r\n * @param sk\r\n * @returns\r\n */\r\nfunction checkAkSk(ak, sk) {\r\n    return akReg.test(ak) && skReg.test(sk);\r\n}\r\nexports.checkAkSk = checkAkSk;\r\n/**\r\n * 检查region是否合法\r\n * @param region\r\n * @returns\r\n */\r\nfunction checkRegion(region) {\r\n    return regionArray.includes(region);\r\n}\r\nexports.checkRegion = checkRegion;\r\n/**\r\n * 检查桶名，规则如下\r\n * 3～63个字符，数字或字母开头，支持小写字母、数字、“-”、“.”\r\n * 禁止以“-”或“.”开头及结尾，禁止两个“.”相邻，禁止“.”和“-”相邻\r\n * 禁止类IP地址\r\n * @param bucketName\r\n * @returns\r\n */\r\nfunction checkBucketName(bucketName) {\r\n    return legalReg.test(bucketName) && !symbolReg.test(bucketName) && !ipReg.test(bucketName);\r\n}\r\nexports.checkBucketName = checkBucketName;\r\n/**\r\n * 获得操作类型\r\n * @param operation_type\r\n * @returns\r\n */\r\nfunction getOperationCategory(operationType) {\r\n    if (OPERATION_TYPE.object.includes(operationType.toLowerCase())) {\r\n        return 'object';\r\n    }\r\n    if (OPERATION_TYPE.bucket.includes(operationType.toLowerCase())) {\r\n        return 'bucket';\r\n    }\r\n    return '';\r\n}\r\nexports.getOperationCategory = getOperationCategory;\r\n/**\r\n * 检查上传时的input_file_path和参数obs_file_path是否合法\r\n * @param inputs\r\n * @returns\r\n */\r\nfunction checkUploadFilePath(inputs) {\r\n    if (inputs.localFilePath.length === 0) {\r\n        core.setFailed('please input localFilePath.');\r\n        return false;\r\n    }\r\n    if (inputs.localFilePath.length > 10) {\r\n        core.setFailed('you should input no more than 10 local_file_path.');\r\n        return false;\r\n    }\r\n    for (const path of inputs.localFilePath) {\r\n        if (path === '') {\r\n            core.setFailed('you should not input a empty string as local_file_path.');\r\n            return false;\r\n        }\r\n        if (!fs.existsSync(path)) {\r\n            core.setFailed(`local file or dirctory not exist, please check your input path.`);\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.checkUploadFilePath = checkUploadFilePath;\r\n/**\r\n * 检查下载时的input_file_path和obs_file_path是否合法\r\n * @param inputs\r\n * @returns\r\n */\r\nfunction checkDownloadFilePath(inputs) {\r\n    if (inputs.localFilePath.length !== 1) {\r\n        core.setFailed('you should input one local_file_path.');\r\n        return false;\r\n    }\r\n    if (inputs.localFilePath[0] === '') {\r\n        core.setFailed('you should not input a empty string as local_file_path.');\r\n        return false;\r\n    }\r\n    if (!inputs.obsFilePath) {\r\n        core.setFailed('you should input one obs_file_path.');\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexports.checkDownloadFilePath = checkDownloadFilePath;\r\n/**\r\n * 获得存储类型\r\n * @param storageClass\r\n * @returns\r\n */\r\nfunction getStorageClass(storageClass) {\r\n    for (const key in storageClassList) {\r\n        if (storageClass === key) {\r\n            return storageClassList[key];\r\n        }\r\n    }\r\n    return '';\r\n}\r\nexports.getStorageClass = getStorageClass;\r\n/**\r\n * 检查公共属性(ak,sk,region,bucketName)是否合法\r\n * @param inputs\r\n * @returns\r\n */\r\nfunction checkCommonInputs(inputs) {\r\n    if (!checkAkSk(inputs.accessKey, inputs.secretKey)) {\r\n        core.setFailed('ak or sk is not correct.');\r\n        return false;\r\n    }\r\n    if (!checkRegion(inputs.region)) {\r\n        core.setFailed('region is not correct.');\r\n        return false;\r\n    }\r\n    if (!checkBucketName(inputs.bucketName)) {\r\n        core.setFailed('bucket name is not correct.');\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexports.checkCommonInputs = checkCommonInputs;\r\n/**\r\n * 检查操作对象时输入的参数(localFilePath,obsFilePath)是否合法\r\n * @param inputs\r\n * @returns\r\n */\r\nfunction checkObjectInputs(inputs) {\r\n    const checkFilePath = inputs.operationType.toLowerCase() === 'upload' ? checkUploadFilePath(inputs) : checkDownloadFilePath(inputs);\r\n    if (!checkFilePath) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\nexports.checkObjectInputs = checkObjectInputs;\r\n/**\r\n * 检查操作桶时输入的参数(storageClass)是否合法\r\n * @param inputs\r\n * @returns\r\n */\r\nfunction checkBucketInputs(inputs) {\r\n    if (inputs.storageClass) {\r\n        if (getStorageClass(inputs.storageClass) === '') {\r\n            core.setFailed('storageClass is not correct.');\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexports.checkBucketInputs = checkBucketInputs;\r\n/**\r\n * 将传入的路径中的'\\'替换为'/'\r\n * @param path\r\n * @returns\r\n */\r\nfunction replaceSlash(path) {\r\n    return path.replace(/\\\\/g, '/');\r\n}\r\nexports.replaceSlash = replaceSlash;\r\n/**\r\n * 获得以rootPath开头， 并删除rootPath的path\r\n * 用于获得从obs下载对象时，对象应下载在本地的相对路径\r\n * @param rootPath\r\n * @param path\r\n * @returns\r\n */\r\nfunction getPathWithoutRootPath(rootPath, path) {\r\n    try {\r\n        const aimPath = path.match(`^${rootPath}`);\r\n        if (aimPath) {\r\n            return path.replace(aimPath[0], '');\r\n        }\r\n        else {\r\n            return path;\r\n        }\r\n    }\r\n    catch (error) {\r\n        core.info('rootPath not start with path.');\r\n        return path;\r\n    }\r\n}\r\nexports.getPathWithoutRootPath = getPathWithoutRootPath;\r\n/**\r\n * 创建文件夹\r\n * @param path\r\n */\r\nfunction createFolder(path) {\r\n    if (fs.existsSync(path)) {\r\n        return true;\r\n    }\r\n    try {\r\n        fs.mkdirSync(path);\r\n    }\r\n    catch (error) {\r\n        return false;\r\n    }\r\n    return fs.existsSync(path);\r\n}\r\nexports.createFolder = createFolder;\r\n/**\r\n * 判断路径是否以'/'结尾\r\n * @param path\r\n * @returns\r\n */\r\nfunction isEndWithSlash(path) {\r\n    try {\r\n        return path.slice(-1) === '/';\r\n    }\r\n    catch (error) {\r\n        return false;\r\n    }\r\n}\r\nexports.isEndWithSlash = isEndWithSlash;\r\n/**\r\n * 删除字符串末尾的字符'/'\r\n * @param str\r\n * @returns\r\n */\r\nfunction getStringDelLastSlash(str) {\r\n    if (str) {\r\n        return isEndWithSlash(str) ? str.substring(0, str.length - 1) : str;\r\n    }\r\n    return str;\r\n}\r\nexports.getStringDelLastSlash = getStringDelLastSlash;\r\n/**\r\n * 检查文件是否超过5GB\r\n * @param filepath\r\n * @returns\r\n */\r\nfunction isFileOverSize(filepath) {\r\n    return fs.lstatSync(filepath).size > FILE_MAX_SIZE;\r\n}\r\nexports.isFileOverSize = isFileOverSize;\r\n/**\r\n * 检查本地是否存在同名文件夹\r\n * @param localPath\r\n * @returns\r\n */\r\nfunction isExistSameNameFolder(localPath) {\r\n    return fs.existsSync(localPath) && fs.statSync(localPath).isDirectory();\r\n}\r\nexports.isExistSameNameFolder = isExistSameNameFolder;\r\n/**\r\n * 检查本地是否存在同名文件\r\n *\r\n * @param localPath\r\n * @returns\r\n */\r\nfunction isExistSameNameFile(localPath) {\r\n    return fs.existsSync(getStringDelLastSlash(localPath)) && fs.statSync(getStringDelLastSlash(localPath)).isFile();\r\n}\r\nexports.isExistSameNameFile = isExistSameNameFile;\r\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issue = exports.issueCommand = void 0;\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\n/**\n * Commands\n *\n * Command Format:\n *   ::name key=value,key=value::message\n *\n * Examples:\n *   ::warning::This is the message\n *   ::set-env name=MY_VAR::some value\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            let first = true;\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        if (first) {\n                            first = false;\n                        }\n                        else {\n                            cmdStr += ',';\n                        }\n                        cmdStr += `${key}=${escapeProperty(val)}`;\n                    }\n                }\n            }\n        }\n        cmdStr += `${CMD_STRING}${escapeData(this.message)}`;\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A');\n}\nfunction escapeProperty(s) {\n    return utils_1.toCommandValue(s)\n        .replace(/%/g, '%25')\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/:/g, '%3A')\n        .replace(/,/g, '%2C');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getIDToken = exports.getState = exports.saveState = exports.group = exports.endGroup = exports.startGroup = exports.info = exports.notice = exports.warning = exports.error = exports.debug = exports.isDebug = exports.setFailed = exports.setCommandEcho = exports.setOutput = exports.getBooleanInput = exports.getMultilineInput = exports.getInput = exports.addPath = exports.setSecret = exports.exportVariable = exports.ExitCode = void 0;\nconst command_1 = require(\"./command\");\nconst file_command_1 = require(\"./file-command\");\nconst utils_1 = require(\"./utils\");\nconst os = __importStar(require(\"os\"));\nconst path = __importStar(require(\"path\"));\nconst oidc_utils_1 = require(\"./oidc-utils\");\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction exportVariable(name, val) {\n    const convertedVal = utils_1.toCommandValue(val);\n    process.env[name] = convertedVal;\n    const filePath = process.env['GITHUB_ENV'] || '';\n    if (filePath) {\n        const delimiter = '_GitHubActionsFileCommandDelimeter_';\n        const commandValue = `${name}<<${delimiter}${os.EOL}${convertedVal}${os.EOL}${delimiter}`;\n        file_command_1.issueCommand('ENV', commandValue);\n    }\n    else {\n        command_1.issueCommand('set-env', { name }, convertedVal);\n    }\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    const filePath = process.env['GITHUB_PATH'] || '';\n    if (filePath) {\n        file_command_1.issueCommand('PATH', inputPath);\n    }\n    else {\n        command_1.issueCommand('add-path', {}, inputPath);\n    }\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.\n * Unless trimWhitespace is set to false in InputOptions, the value is also trimmed.\n * Returns an empty string if the value is not defined.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    if (options && options.trimWhitespace === false) {\n        return val;\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Gets the values of an multiline input.  Each value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string[]\n *\n */\nfunction getMultilineInput(name, options) {\n    const inputs = getInput(name, options)\n        .split('\\n')\n        .filter(x => x !== '');\n    return inputs;\n}\nexports.getMultilineInput = getMultilineInput;\n/**\n * Gets the input value of the boolean type in the YAML 1.2 \"core schema\" specification.\n * Support boolean input list: `true | True | TRUE | false | False | FALSE` .\n * The return value is also in boolean type.\n * ref: https://yaml.org/spec/1.2/spec.html#id2804923\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   boolean\n */\nfunction getBooleanInput(name, options) {\n    const trueValue = ['true', 'True', 'TRUE'];\n    const falseValue = ['false', 'False', 'FALSE'];\n    const val = getInput(name, options);\n    if (trueValue.includes(val))\n        return true;\n    if (falseValue.includes(val))\n        return false;\n    throw new TypeError(`Input does not meet YAML 1.2 \"Core Schema\" specification: ${name}\\n` +\n        `Support boolean input list: \\`true | True | TRUE | false | False | FALSE\\``);\n}\nexports.getBooleanInput = getBooleanInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction setOutput(name, value) {\n    process.stdout.write(os.EOL);\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n/**\n * Enables or disables the echoing of commands into stdout for the rest of the step.\n * Echoing is disabled by default if ACTIONS_STEP_DEBUG is not set.\n *\n */\nfunction setCommandEcho(enabled) {\n    command_1.issue('echo', enabled ? 'on' : 'off');\n}\nexports.setCommandEcho = setCommandEcho;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Gets whether Actions Step Debug is on or not\n */\nfunction isDebug() {\n    return process.env['RUNNER_DEBUG'] === '1';\n}\nexports.isDebug = isDebug;\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction error(message, properties = {}) {\n    command_1.issueCommand('error', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.error = error;\n/**\n * Adds a warning issue\n * @param message warning issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction warning(message, properties = {}) {\n    command_1.issueCommand('warning', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.warning = warning;\n/**\n * Adds a notice issue\n * @param message notice issue message. Errors will be converted to string via toString()\n * @param properties optional properties to add to the annotation.\n */\nfunction notice(message, properties = {}) {\n    command_1.issueCommand('notice', utils_1.toCommandProperties(properties), message instanceof Error ? message.toString() : message);\n}\nexports.notice = notice;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//-----------------------------------------------------------------------\n// Wrapper action state\n//-----------------------------------------------------------------------\n/**\n * Saves state for current action, the state can only be retrieved by this action's post job execution.\n *\n * @param     name     name of the state to store\n * @param     value    value to store. Non-string values will be converted to a string via JSON.stringify\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction saveState(name, value) {\n    command_1.issueCommand('save-state', { name }, value);\n}\nexports.saveState = saveState;\n/**\n * Gets the value of an state set by this action's main execution.\n *\n * @param     name     name of the state to get\n * @returns   string\n */\nfunction getState(name) {\n    return process.env[`STATE_${name}`] || '';\n}\nexports.getState = getState;\nfunction getIDToken(aud) {\n    return __awaiter(this, void 0, void 0, function* () {\n        return yield oidc_utils_1.OidcClient.getIDToken(aud);\n    });\n}\nexports.getIDToken = getIDToken;\n/**\n * Summary exports\n */\nvar summary_1 = require(\"./summary\");\nObject.defineProperty(exports, \"summary\", { enumerable: true, get: function () { return summary_1.summary; } });\n/**\n * @deprecated use core.summary\n */\nvar summary_2 = require(\"./summary\");\nObject.defineProperty(exports, \"markdownSummary\", { enumerable: true, get: function () { return summary_2.markdownSummary; } });\n/**\n * Path exports\n */\nvar path_utils_1 = require(\"./path-utils\");\nObject.defineProperty(exports, \"toPosixPath\", { enumerable: true, get: function () { return path_utils_1.toPosixPath; } });\nObject.defineProperty(exports, \"toWin32Path\", { enumerable: true, get: function () { return path_utils_1.toWin32Path; } });\nObject.defineProperty(exports, \"toPlatformPath\", { enumerable: true, get: function () { return path_utils_1.toPlatformPath; } });\n//# sourceMappingURL=core.js.map","\"use strict\";\n// For internal use, subject to change.\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.issueCommand = void 0;\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nconst fs = __importStar(require(\"fs\"));\nconst os = __importStar(require(\"os\"));\nconst utils_1 = require(\"./utils\");\nfunction issueCommand(command, message) {\n    const filePath = process.env[`GITHUB_${command}`];\n    if (!filePath) {\n        throw new Error(`Unable to find environment variable for file command ${command}`);\n    }\n    if (!fs.existsSync(filePath)) {\n        throw new Error(`Missing file at path: ${filePath}`);\n    }\n    fs.appendFileSync(filePath, `${utils_1.toCommandValue(message)}${os.EOL}`, {\n        encoding: 'utf8'\n    });\n}\nexports.issueCommand = issueCommand;\n//# sourceMappingURL=file-command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.OidcClient = void 0;\nconst http_client_1 = require(\"@actions/http-client\");\nconst auth_1 = require(\"@actions/http-client/lib/auth\");\nconst core_1 = require(\"./core\");\nclass OidcClient {\n    static createHttpClient(allowRetry = true, maxRetry = 10) {\n        const requestOptions = {\n            allowRetries: allowRetry,\n            maxRetries: maxRetry\n        };\n        return new http_client_1.HttpClient('actions/oidc-client', [new auth_1.BearerCredentialHandler(OidcClient.getRequestToken())], requestOptions);\n    }\n    static getRequestToken() {\n        const token = process.env['ACTIONS_ID_TOKEN_REQUEST_TOKEN'];\n        if (!token) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_TOKEN env variable');\n        }\n        return token;\n    }\n    static getIDTokenUrl() {\n        const runtimeUrl = process.env['ACTIONS_ID_TOKEN_REQUEST_URL'];\n        if (!runtimeUrl) {\n            throw new Error('Unable to get ACTIONS_ID_TOKEN_REQUEST_URL env variable');\n        }\n        return runtimeUrl;\n    }\n    static getCall(id_token_url) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const httpclient = OidcClient.createHttpClient();\n            const res = yield httpclient\n                .getJson(id_token_url)\n                .catch(error => {\n                throw new Error(`Failed to get ID Token. \\n \n        Error Code : ${error.statusCode}\\n \n        Error Message: ${error.result.message}`);\n            });\n            const id_token = (_a = res.result) === null || _a === void 0 ? void 0 : _a.value;\n            if (!id_token) {\n                throw new Error('Response json body do not have ID Token field');\n            }\n            return id_token;\n        });\n    }\n    static getIDToken(audience) {\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                // New ID Token is requested from action service\n                let id_token_url = OidcClient.getIDTokenUrl();\n                if (audience) {\n                    const encodedAudience = encodeURIComponent(audience);\n                    id_token_url = `${id_token_url}&audience=${encodedAudience}`;\n                }\n                core_1.debug(`ID token url is ${id_token_url}`);\n                const id_token = yield OidcClient.getCall(id_token_url);\n                core_1.setSecret(id_token);\n                return id_token;\n            }\n            catch (error) {\n                throw new Error(`Error message: ${error.message}`);\n            }\n        });\n    }\n}\nexports.OidcClient = OidcClient;\n//# sourceMappingURL=oidc-utils.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toPlatformPath = exports.toWin32Path = exports.toPosixPath = void 0;\nconst path = __importStar(require(\"path\"));\n/**\n * toPosixPath converts the given path to the posix form. On Windows, \\\\ will be\n * replaced with /.\n *\n * @param pth. Path to transform.\n * @return string Posix path.\n */\nfunction toPosixPath(pth) {\n    return pth.replace(/[\\\\]/g, '/');\n}\nexports.toPosixPath = toPosixPath;\n/**\n * toWin32Path converts the given path to the win32 form. On Linux, / will be\n * replaced with \\\\.\n *\n * @param pth. Path to transform.\n * @return string Win32 path.\n */\nfunction toWin32Path(pth) {\n    return pth.replace(/[/]/g, '\\\\');\n}\nexports.toWin32Path = toWin32Path;\n/**\n * toPlatformPath converts the given path to a platform-specific path. It does\n * this by replacing instances of / and \\ with the platform-specific path\n * separator.\n *\n * @param pth The path to platformize.\n * @return string The platform-specific path.\n */\nfunction toPlatformPath(pth) {\n    return pth.replace(/[/\\\\]/g, path.sep);\n}\nexports.toPlatformPath = toPlatformPath;\n//# sourceMappingURL=path-utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.summary = exports.markdownSummary = exports.SUMMARY_DOCS_URL = exports.SUMMARY_ENV_VAR = void 0;\nconst os_1 = require(\"os\");\nconst fs_1 = require(\"fs\");\nconst { access, appendFile, writeFile } = fs_1.promises;\nexports.SUMMARY_ENV_VAR = 'GITHUB_STEP_SUMMARY';\nexports.SUMMARY_DOCS_URL = 'https://docs.github.com/actions/using-workflows/workflow-commands-for-github-actions#adding-a-job-summary';\nclass Summary {\n    constructor() {\n        this._buffer = '';\n    }\n    /**\n     * Finds the summary file path from the environment, rejects if env var is not found or file does not exist\n     * Also checks r/w permissions.\n     *\n     * @returns step summary file path\n     */\n    filePath() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._filePath) {\n                return this._filePath;\n            }\n            const pathFromEnv = process.env[exports.SUMMARY_ENV_VAR];\n            if (!pathFromEnv) {\n                throw new Error(`Unable to find environment variable for $${exports.SUMMARY_ENV_VAR}. Check if your runtime environment supports job summaries.`);\n            }\n            try {\n                yield access(pathFromEnv, fs_1.constants.R_OK | fs_1.constants.W_OK);\n            }\n            catch (_a) {\n                throw new Error(`Unable to access summary file: '${pathFromEnv}'. Check if the file has correct read/write permissions.`);\n            }\n            this._filePath = pathFromEnv;\n            return this._filePath;\n        });\n    }\n    /**\n     * Wraps content in an HTML tag, adding any HTML attributes\n     *\n     * @param {string} tag HTML tag to wrap\n     * @param {string | null} content content within the tag\n     * @param {[attribute: string]: string} attrs key-value list of HTML attributes to add\n     *\n     * @returns {string} content wrapped in HTML element\n     */\n    wrap(tag, content, attrs = {}) {\n        const htmlAttrs = Object.entries(attrs)\n            .map(([key, value]) => ` ${key}=\"${value}\"`)\n            .join('');\n        if (!content) {\n            return `<${tag}${htmlAttrs}>`;\n        }\n        return `<${tag}${htmlAttrs}>${content}</${tag}>`;\n    }\n    /**\n     * Writes text in the buffer to the summary buffer file and empties buffer. Will append by default.\n     *\n     * @param {SummaryWriteOptions} [options] (optional) options for write operation\n     *\n     * @returns {Promise<Summary>} summary instance\n     */\n    write(options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const overwrite = !!(options === null || options === void 0 ? void 0 : options.overwrite);\n            const filePath = yield this.filePath();\n            const writeFunc = overwrite ? writeFile : appendFile;\n            yield writeFunc(filePath, this._buffer, { encoding: 'utf8' });\n            return this.emptyBuffer();\n        });\n    }\n    /**\n     * Clears the summary buffer and wipes the summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    clear() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.emptyBuffer().write({ overwrite: true });\n        });\n    }\n    /**\n     * Returns the current summary buffer as a string\n     *\n     * @returns {string} string of summary buffer\n     */\n    stringify() {\n        return this._buffer;\n    }\n    /**\n     * If the summary buffer is empty\n     *\n     * @returns {boolen} true if the buffer is empty\n     */\n    isEmptyBuffer() {\n        return this._buffer.length === 0;\n    }\n    /**\n     * Resets the summary buffer without writing to summary file\n     *\n     * @returns {Summary} summary instance\n     */\n    emptyBuffer() {\n        this._buffer = '';\n        return this;\n    }\n    /**\n     * Adds raw text to the summary buffer\n     *\n     * @param {string} text content to add\n     * @param {boolean} [addEOL=false] (optional) append an EOL to the raw text (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addRaw(text, addEOL = false) {\n        this._buffer += text;\n        return addEOL ? this.addEOL() : this;\n    }\n    /**\n     * Adds the operating system-specific end-of-line marker to the buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addEOL() {\n        return this.addRaw(os_1.EOL);\n    }\n    /**\n     * Adds an HTML codeblock to the summary buffer\n     *\n     * @param {string} code content to render within fenced code block\n     * @param {string} lang (optional) language to syntax highlight code\n     *\n     * @returns {Summary} summary instance\n     */\n    addCodeBlock(code, lang) {\n        const attrs = Object.assign({}, (lang && { lang }));\n        const element = this.wrap('pre', this.wrap('code', code), attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML list to the summary buffer\n     *\n     * @param {string[]} items list of items to render\n     * @param {boolean} [ordered=false] (optional) if the rendered list should be ordered or not (default: false)\n     *\n     * @returns {Summary} summary instance\n     */\n    addList(items, ordered = false) {\n        const tag = ordered ? 'ol' : 'ul';\n        const listItems = items.map(item => this.wrap('li', item)).join('');\n        const element = this.wrap(tag, listItems);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML table to the summary buffer\n     *\n     * @param {SummaryTableCell[]} rows table rows\n     *\n     * @returns {Summary} summary instance\n     */\n    addTable(rows) {\n        const tableBody = rows\n            .map(row => {\n            const cells = row\n                .map(cell => {\n                if (typeof cell === 'string') {\n                    return this.wrap('td', cell);\n                }\n                const { header, data, colspan, rowspan } = cell;\n                const tag = header ? 'th' : 'td';\n                const attrs = Object.assign(Object.assign({}, (colspan && { colspan })), (rowspan && { rowspan }));\n                return this.wrap(tag, data, attrs);\n            })\n                .join('');\n            return this.wrap('tr', cells);\n        })\n            .join('');\n        const element = this.wrap('table', tableBody);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds a collapsable HTML details element to the summary buffer\n     *\n     * @param {string} label text for the closed state\n     * @param {string} content collapsable content\n     *\n     * @returns {Summary} summary instance\n     */\n    addDetails(label, content) {\n        const element = this.wrap('details', this.wrap('summary', label) + content);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML image tag to the summary buffer\n     *\n     * @param {string} src path to the image you to embed\n     * @param {string} alt text description of the image\n     * @param {SummaryImageOptions} options (optional) addition image attributes\n     *\n     * @returns {Summary} summary instance\n     */\n    addImage(src, alt, options) {\n        const { width, height } = options || {};\n        const attrs = Object.assign(Object.assign({}, (width && { width })), (height && { height }));\n        const element = this.wrap('img', null, Object.assign({ src, alt }, attrs));\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML section heading element\n     *\n     * @param {string} text heading text\n     * @param {number | string} [level=1] (optional) the heading level, default: 1\n     *\n     * @returns {Summary} summary instance\n     */\n    addHeading(text, level) {\n        const tag = `h${level}`;\n        const allowedTag = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'].includes(tag)\n            ? tag\n            : 'h1';\n        const element = this.wrap(allowedTag, text);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML thematic break (<hr>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addSeparator() {\n        const element = this.wrap('hr', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML line break (<br>) to the summary buffer\n     *\n     * @returns {Summary} summary instance\n     */\n    addBreak() {\n        const element = this.wrap('br', null);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML blockquote to the summary buffer\n     *\n     * @param {string} text quote text\n     * @param {string} cite (optional) citation url\n     *\n     * @returns {Summary} summary instance\n     */\n    addQuote(text, cite) {\n        const attrs = Object.assign({}, (cite && { cite }));\n        const element = this.wrap('blockquote', text, attrs);\n        return this.addRaw(element).addEOL();\n    }\n    /**\n     * Adds an HTML anchor tag to the summary buffer\n     *\n     * @param {string} text link text/content\n     * @param {string} href hyperlink\n     *\n     * @returns {Summary} summary instance\n     */\n    addLink(text, href) {\n        const element = this.wrap('a', text, { href });\n        return this.addRaw(element).addEOL();\n    }\n}\nconst _summary = new Summary();\n/**\n * @deprecated use `core.summary`\n */\nexports.markdownSummary = _summary;\nexports.summary = _summary;\n//# sourceMappingURL=summary.js.map","\"use strict\";\n// We use any as a valid input type\n/* eslint-disable @typescript-eslint/no-explicit-any */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toCommandProperties = exports.toCommandValue = void 0;\n/**\n * Sanitizes an input into a string so it can be passed into issueCommand safely\n * @param input input to sanitize into a string\n */\nfunction toCommandValue(input) {\n    if (input === null || input === undefined) {\n        return '';\n    }\n    else if (typeof input === 'string' || input instanceof String) {\n        return input;\n    }\n    return JSON.stringify(input);\n}\nexports.toCommandValue = toCommandValue;\n/**\n *\n * @param annotationProperties\n * @returns The command properties to send with the actual annotation command\n * See IssueCommandProperties: https://github.com/actions/runner/blob/main/src/Runner.Worker/ActionCommandManager.cs#L646\n */\nfunction toCommandProperties(annotationProperties) {\n    if (!Object.keys(annotationProperties).length) {\n        return {};\n    }\n    return {\n        title: annotationProperties.title,\n        file: annotationProperties.file,\n        line: annotationProperties.startLine,\n        endLine: annotationProperties.endLine,\n        col: annotationProperties.startColumn,\n        endColumn: annotationProperties.endColumn\n    };\n}\nexports.toCommandProperties = toCommandProperties;\n//# sourceMappingURL=utils.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PersonalAccessTokenCredentialHandler = exports.BearerCredentialHandler = exports.BasicCredentialHandler = void 0;\nclass BasicCredentialHandler {\n    constructor(username, password) {\n        this.username = username;\n        this.password = password;\n    }\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`${this.username}:${this.password}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BasicCredentialHandler = BasicCredentialHandler;\nclass BearerCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Bearer ${this.token}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.BearerCredentialHandler = BearerCredentialHandler;\nclass PersonalAccessTokenCredentialHandler {\n    constructor(token) {\n        this.token = token;\n    }\n    // currently implements pre-authorization\n    // TODO: support preAuth = false where it hooks on 401\n    prepareRequest(options) {\n        if (!options.headers) {\n            throw Error('The request has no headers');\n        }\n        options.headers['Authorization'] = `Basic ${Buffer.from(`PAT:${this.token}`).toString('base64')}`;\n    }\n    // This handler cannot handle 401\n    canHandleAuthentication() {\n        return false;\n    }\n    handleAuthentication() {\n        return __awaiter(this, void 0, void 0, function* () {\n            throw new Error('not implemented');\n        });\n    }\n}\nexports.PersonalAccessTokenCredentialHandler = PersonalAccessTokenCredentialHandler;\n//# sourceMappingURL=auth.js.map","\"use strict\";\n/* eslint-disable @typescript-eslint/no-explicit-any */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpClient = exports.isHttps = exports.HttpClientResponse = exports.HttpClientError = exports.getProxyUrl = exports.MediaTypes = exports.Headers = exports.HttpCodes = void 0;\nconst http = __importStar(require(\"http\"));\nconst https = __importStar(require(\"https\"));\nconst pm = __importStar(require(\"./proxy\"));\nconst tunnel = __importStar(require(\"tunnel\"));\nvar HttpCodes;\n(function (HttpCodes) {\n    HttpCodes[HttpCodes[\"OK\"] = 200] = \"OK\";\n    HttpCodes[HttpCodes[\"MultipleChoices\"] = 300] = \"MultipleChoices\";\n    HttpCodes[HttpCodes[\"MovedPermanently\"] = 301] = \"MovedPermanently\";\n    HttpCodes[HttpCodes[\"ResourceMoved\"] = 302] = \"ResourceMoved\";\n    HttpCodes[HttpCodes[\"SeeOther\"] = 303] = \"SeeOther\";\n    HttpCodes[HttpCodes[\"NotModified\"] = 304] = \"NotModified\";\n    HttpCodes[HttpCodes[\"UseProxy\"] = 305] = \"UseProxy\";\n    HttpCodes[HttpCodes[\"SwitchProxy\"] = 306] = \"SwitchProxy\";\n    HttpCodes[HttpCodes[\"TemporaryRedirect\"] = 307] = \"TemporaryRedirect\";\n    HttpCodes[HttpCodes[\"PermanentRedirect\"] = 308] = \"PermanentRedirect\";\n    HttpCodes[HttpCodes[\"BadRequest\"] = 400] = \"BadRequest\";\n    HttpCodes[HttpCodes[\"Unauthorized\"] = 401] = \"Unauthorized\";\n    HttpCodes[HttpCodes[\"PaymentRequired\"] = 402] = \"PaymentRequired\";\n    HttpCodes[HttpCodes[\"Forbidden\"] = 403] = \"Forbidden\";\n    HttpCodes[HttpCodes[\"NotFound\"] = 404] = \"NotFound\";\n    HttpCodes[HttpCodes[\"MethodNotAllowed\"] = 405] = \"MethodNotAllowed\";\n    HttpCodes[HttpCodes[\"NotAcceptable\"] = 406] = \"NotAcceptable\";\n    HttpCodes[HttpCodes[\"ProxyAuthenticationRequired\"] = 407] = \"ProxyAuthenticationRequired\";\n    HttpCodes[HttpCodes[\"RequestTimeout\"] = 408] = \"RequestTimeout\";\n    HttpCodes[HttpCodes[\"Conflict\"] = 409] = \"Conflict\";\n    HttpCodes[HttpCodes[\"Gone\"] = 410] = \"Gone\";\n    HttpCodes[HttpCodes[\"TooManyRequests\"] = 429] = \"TooManyRequests\";\n    HttpCodes[HttpCodes[\"InternalServerError\"] = 500] = \"InternalServerError\";\n    HttpCodes[HttpCodes[\"NotImplemented\"] = 501] = \"NotImplemented\";\n    HttpCodes[HttpCodes[\"BadGateway\"] = 502] = \"BadGateway\";\n    HttpCodes[HttpCodes[\"ServiceUnavailable\"] = 503] = \"ServiceUnavailable\";\n    HttpCodes[HttpCodes[\"GatewayTimeout\"] = 504] = \"GatewayTimeout\";\n})(HttpCodes = exports.HttpCodes || (exports.HttpCodes = {}));\nvar Headers;\n(function (Headers) {\n    Headers[\"Accept\"] = \"accept\";\n    Headers[\"ContentType\"] = \"content-type\";\n})(Headers = exports.Headers || (exports.Headers = {}));\nvar MediaTypes;\n(function (MediaTypes) {\n    MediaTypes[\"ApplicationJson\"] = \"application/json\";\n})(MediaTypes = exports.MediaTypes || (exports.MediaTypes = {}));\n/**\n * Returns the proxy URL, depending upon the supplied url and proxy environment variables.\n * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n */\nfunction getProxyUrl(serverUrl) {\n    const proxyUrl = pm.getProxyUrl(new URL(serverUrl));\n    return proxyUrl ? proxyUrl.href : '';\n}\nexports.getProxyUrl = getProxyUrl;\nconst HttpRedirectCodes = [\n    HttpCodes.MovedPermanently,\n    HttpCodes.ResourceMoved,\n    HttpCodes.SeeOther,\n    HttpCodes.TemporaryRedirect,\n    HttpCodes.PermanentRedirect\n];\nconst HttpResponseRetryCodes = [\n    HttpCodes.BadGateway,\n    HttpCodes.ServiceUnavailable,\n    HttpCodes.GatewayTimeout\n];\nconst RetryableHttpVerbs = ['OPTIONS', 'GET', 'DELETE', 'HEAD'];\nconst ExponentialBackoffCeiling = 10;\nconst ExponentialBackoffTimeSlice = 5;\nclass HttpClientError extends Error {\n    constructor(message, statusCode) {\n        super(message);\n        this.name = 'HttpClientError';\n        this.statusCode = statusCode;\n        Object.setPrototypeOf(this, HttpClientError.prototype);\n    }\n}\nexports.HttpClientError = HttpClientError;\nclass HttpClientResponse {\n    constructor(message) {\n        this.message = message;\n    }\n    readBody() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve) => __awaiter(this, void 0, void 0, function* () {\n                let output = Buffer.alloc(0);\n                this.message.on('data', (chunk) => {\n                    output = Buffer.concat([output, chunk]);\n                });\n                this.message.on('end', () => {\n                    resolve(output.toString());\n                });\n            }));\n        });\n    }\n}\nexports.HttpClientResponse = HttpClientResponse;\nfunction isHttps(requestUrl) {\n    const parsedUrl = new URL(requestUrl);\n    return parsedUrl.protocol === 'https:';\n}\nexports.isHttps = isHttps;\nclass HttpClient {\n    constructor(userAgent, handlers, requestOptions) {\n        this._ignoreSslError = false;\n        this._allowRedirects = true;\n        this._allowRedirectDowngrade = false;\n        this._maxRedirects = 50;\n        this._allowRetries = false;\n        this._maxRetries = 1;\n        this._keepAlive = false;\n        this._disposed = false;\n        this.userAgent = userAgent;\n        this.handlers = handlers || [];\n        this.requestOptions = requestOptions;\n        if (requestOptions) {\n            if (requestOptions.ignoreSslError != null) {\n                this._ignoreSslError = requestOptions.ignoreSslError;\n            }\n            this._socketTimeout = requestOptions.socketTimeout;\n            if (requestOptions.allowRedirects != null) {\n                this._allowRedirects = requestOptions.allowRedirects;\n            }\n            if (requestOptions.allowRedirectDowngrade != null) {\n                this._allowRedirectDowngrade = requestOptions.allowRedirectDowngrade;\n            }\n            if (requestOptions.maxRedirects != null) {\n                this._maxRedirects = Math.max(requestOptions.maxRedirects, 0);\n            }\n            if (requestOptions.keepAlive != null) {\n                this._keepAlive = requestOptions.keepAlive;\n            }\n            if (requestOptions.allowRetries != null) {\n                this._allowRetries = requestOptions.allowRetries;\n            }\n            if (requestOptions.maxRetries != null) {\n                this._maxRetries = requestOptions.maxRetries;\n            }\n        }\n    }\n    options(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('OPTIONS', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    get(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('GET', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    del(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('DELETE', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    post(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('POST', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    patch(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PATCH', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    put(requestUrl, data, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('PUT', requestUrl, data, additionalHeaders || {});\n        });\n    }\n    head(requestUrl, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request('HEAD', requestUrl, null, additionalHeaders || {});\n        });\n    }\n    sendStream(verb, requestUrl, stream, additionalHeaders) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.request(verb, requestUrl, stream, additionalHeaders);\n        });\n    }\n    /**\n     * Gets a typed object from an endpoint\n     * Be aware that not found returns a null.  Other errors (4xx, 5xx) reject the promise\n     */\n    getJson(requestUrl, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            const res = yield this.get(requestUrl, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    postJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.post(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    putJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.put(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    patchJson(requestUrl, obj, additionalHeaders = {}) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = JSON.stringify(obj, null, 2);\n            additionalHeaders[Headers.Accept] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.Accept, MediaTypes.ApplicationJson);\n            additionalHeaders[Headers.ContentType] = this._getExistingOrDefaultHeader(additionalHeaders, Headers.ContentType, MediaTypes.ApplicationJson);\n            const res = yield this.patch(requestUrl, data, additionalHeaders);\n            return this._processResponse(res, this.requestOptions);\n        });\n    }\n    /**\n     * Makes a raw http request.\n     * All other methods such as get, post, patch, and request ultimately call this.\n     * Prefer get, del, post and patch\n     */\n    request(verb, requestUrl, data, headers) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._disposed) {\n                throw new Error('Client has already been disposed.');\n            }\n            const parsedUrl = new URL(requestUrl);\n            let info = this._prepareRequest(verb, parsedUrl, headers);\n            // Only perform retries on reads since writes may not be idempotent.\n            const maxTries = this._allowRetries && RetryableHttpVerbs.includes(verb)\n                ? this._maxRetries + 1\n                : 1;\n            let numTries = 0;\n            let response;\n            do {\n                response = yield this.requestRaw(info, data);\n                // Check if it's an authentication challenge\n                if (response &&\n                    response.message &&\n                    response.message.statusCode === HttpCodes.Unauthorized) {\n                    let authenticationHandler;\n                    for (const handler of this.handlers) {\n                        if (handler.canHandleAuthentication(response)) {\n                            authenticationHandler = handler;\n                            break;\n                        }\n                    }\n                    if (authenticationHandler) {\n                        return authenticationHandler.handleAuthentication(this, info, data);\n                    }\n                    else {\n                        // We have received an unauthorized response but have no handlers to handle it.\n                        // Let the response return to the caller.\n                        return response;\n                    }\n                }\n                let redirectsRemaining = this._maxRedirects;\n                while (response.message.statusCode &&\n                    HttpRedirectCodes.includes(response.message.statusCode) &&\n                    this._allowRedirects &&\n                    redirectsRemaining > 0) {\n                    const redirectUrl = response.message.headers['location'];\n                    if (!redirectUrl) {\n                        // if there's no location to redirect to, we won't\n                        break;\n                    }\n                    const parsedRedirectUrl = new URL(redirectUrl);\n                    if (parsedUrl.protocol === 'https:' &&\n                        parsedUrl.protocol !== parsedRedirectUrl.protocol &&\n                        !this._allowRedirectDowngrade) {\n                        throw new Error('Redirect from HTTPS to HTTP protocol. This downgrade is not allowed for security reasons. If you want to allow this behavior, set the allowRedirectDowngrade option to true.');\n                    }\n                    // we need to finish reading the response before reassigning response\n                    // which will leak the open socket.\n                    yield response.readBody();\n                    // strip authorization header if redirected to a different hostname\n                    if (parsedRedirectUrl.hostname !== parsedUrl.hostname) {\n                        for (const header in headers) {\n                            // header names are case insensitive\n                            if (header.toLowerCase() === 'authorization') {\n                                delete headers[header];\n                            }\n                        }\n                    }\n                    // let's make the request with the new redirectUrl\n                    info = this._prepareRequest(verb, parsedRedirectUrl, headers);\n                    response = yield this.requestRaw(info, data);\n                    redirectsRemaining--;\n                }\n                if (!response.message.statusCode ||\n                    !HttpResponseRetryCodes.includes(response.message.statusCode)) {\n                    // If not a retry code, return immediately instead of retrying\n                    return response;\n                }\n                numTries += 1;\n                if (numTries < maxTries) {\n                    yield response.readBody();\n                    yield this._performExponentialBackoff(numTries);\n                }\n            } while (numTries < maxTries);\n            return response;\n        });\n    }\n    /**\n     * Needs to be called if keepAlive is set to true in request options.\n     */\n    dispose() {\n        if (this._agent) {\n            this._agent.destroy();\n        }\n        this._disposed = true;\n    }\n    /**\n     * Raw request.\n     * @param info\n     * @param data\n     */\n    requestRaw(info, data) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => {\n                function callbackForResult(err, res) {\n                    if (err) {\n                        reject(err);\n                    }\n                    else if (!res) {\n                        // If `err` is not passed, then `res` must be passed.\n                        reject(new Error('Unknown error'));\n                    }\n                    else {\n                        resolve(res);\n                    }\n                }\n                this.requestRawWithCallback(info, data, callbackForResult);\n            });\n        });\n    }\n    /**\n     * Raw request with callback.\n     * @param info\n     * @param data\n     * @param onResult\n     */\n    requestRawWithCallback(info, data, onResult) {\n        if (typeof data === 'string') {\n            if (!info.options.headers) {\n                info.options.headers = {};\n            }\n            info.options.headers['Content-Length'] = Buffer.byteLength(data, 'utf8');\n        }\n        let callbackCalled = false;\n        function handleResult(err, res) {\n            if (!callbackCalled) {\n                callbackCalled = true;\n                onResult(err, res);\n            }\n        }\n        const req = info.httpModule.request(info.options, (msg) => {\n            const res = new HttpClientResponse(msg);\n            handleResult(undefined, res);\n        });\n        let socket;\n        req.on('socket', sock => {\n            socket = sock;\n        });\n        // If we ever get disconnected, we want the socket to timeout eventually\n        req.setTimeout(this._socketTimeout || 3 * 60000, () => {\n            if (socket) {\n                socket.end();\n            }\n            handleResult(new Error(`Request timeout: ${info.options.path}`));\n        });\n        req.on('error', function (err) {\n            // err has statusCode property\n            // res should have headers\n            handleResult(err);\n        });\n        if (data && typeof data === 'string') {\n            req.write(data, 'utf8');\n        }\n        if (data && typeof data !== 'string') {\n            data.on('close', function () {\n                req.end();\n            });\n            data.pipe(req);\n        }\n        else {\n            req.end();\n        }\n    }\n    /**\n     * Gets an http agent. This function is useful when you need an http agent that handles\n     * routing through a proxy server - depending upon the url and proxy environment variables.\n     * @param serverUrl  The server URL where the request will be sent. For example, https://api.github.com\n     */\n    getAgent(serverUrl) {\n        const parsedUrl = new URL(serverUrl);\n        return this._getAgent(parsedUrl);\n    }\n    _prepareRequest(method, requestUrl, headers) {\n        const info = {};\n        info.parsedUrl = requestUrl;\n        const usingSsl = info.parsedUrl.protocol === 'https:';\n        info.httpModule = usingSsl ? https : http;\n        const defaultPort = usingSsl ? 443 : 80;\n        info.options = {};\n        info.options.host = info.parsedUrl.hostname;\n        info.options.port = info.parsedUrl.port\n            ? parseInt(info.parsedUrl.port)\n            : defaultPort;\n        info.options.path =\n            (info.parsedUrl.pathname || '') + (info.parsedUrl.search || '');\n        info.options.method = method;\n        info.options.headers = this._mergeHeaders(headers);\n        if (this.userAgent != null) {\n            info.options.headers['user-agent'] = this.userAgent;\n        }\n        info.options.agent = this._getAgent(info.parsedUrl);\n        // gives handlers an opportunity to participate\n        if (this.handlers) {\n            for (const handler of this.handlers) {\n                handler.prepareRequest(info.options);\n            }\n        }\n        return info;\n    }\n    _mergeHeaders(headers) {\n        if (this.requestOptions && this.requestOptions.headers) {\n            return Object.assign({}, lowercaseKeys(this.requestOptions.headers), lowercaseKeys(headers || {}));\n        }\n        return lowercaseKeys(headers || {});\n    }\n    _getExistingOrDefaultHeader(additionalHeaders, header, _default) {\n        let clientHeader;\n        if (this.requestOptions && this.requestOptions.headers) {\n            clientHeader = lowercaseKeys(this.requestOptions.headers)[header];\n        }\n        return additionalHeaders[header] || clientHeader || _default;\n    }\n    _getAgent(parsedUrl) {\n        let agent;\n        const proxyUrl = pm.getProxyUrl(parsedUrl);\n        const useProxy = proxyUrl && proxyUrl.hostname;\n        if (this._keepAlive && useProxy) {\n            agent = this._proxyAgent;\n        }\n        if (this._keepAlive && !useProxy) {\n            agent = this._agent;\n        }\n        // if agent is already assigned use that agent.\n        if (agent) {\n            return agent;\n        }\n        const usingSsl = parsedUrl.protocol === 'https:';\n        let maxSockets = 100;\n        if (this.requestOptions) {\n            maxSockets = this.requestOptions.maxSockets || http.globalAgent.maxSockets;\n        }\n        // This is `useProxy` again, but we need to check `proxyURl` directly for TypeScripts's flow analysis.\n        if (proxyUrl && proxyUrl.hostname) {\n            const agentOptions = {\n                maxSockets,\n                keepAlive: this._keepAlive,\n                proxy: Object.assign(Object.assign({}, ((proxyUrl.username || proxyUrl.password) && {\n                    proxyAuth: `${proxyUrl.username}:${proxyUrl.password}`\n                })), { host: proxyUrl.hostname, port: proxyUrl.port })\n            };\n            let tunnelAgent;\n            const overHttps = proxyUrl.protocol === 'https:';\n            if (usingSsl) {\n                tunnelAgent = overHttps ? tunnel.httpsOverHttps : tunnel.httpsOverHttp;\n            }\n            else {\n                tunnelAgent = overHttps ? tunnel.httpOverHttps : tunnel.httpOverHttp;\n            }\n            agent = tunnelAgent(agentOptions);\n            this._proxyAgent = agent;\n        }\n        // if reusing agent across request and tunneling agent isn't assigned create a new agent\n        if (this._keepAlive && !agent) {\n            const options = { keepAlive: this._keepAlive, maxSockets };\n            agent = usingSsl ? new https.Agent(options) : new http.Agent(options);\n            this._agent = agent;\n        }\n        // if not using private agent and tunnel agent isn't setup then use global agent\n        if (!agent) {\n            agent = usingSsl ? https.globalAgent : http.globalAgent;\n        }\n        if (usingSsl && this._ignoreSslError) {\n            // we don't want to set NODE_TLS_REJECT_UNAUTHORIZED=0 since that will affect request for entire process\n            // http.RequestOptions doesn't expose a way to modify RequestOptions.agent.options\n            // we have to cast it to any and change it directly\n            agent.options = Object.assign(agent.options || {}, {\n                rejectUnauthorized: false\n            });\n        }\n        return agent;\n    }\n    _performExponentialBackoff(retryNumber) {\n        return __awaiter(this, void 0, void 0, function* () {\n            retryNumber = Math.min(ExponentialBackoffCeiling, retryNumber);\n            const ms = ExponentialBackoffTimeSlice * Math.pow(2, retryNumber);\n            return new Promise(resolve => setTimeout(() => resolve(), ms));\n        });\n    }\n    _processResponse(res, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return new Promise((resolve, reject) => __awaiter(this, void 0, void 0, function* () {\n                const statusCode = res.message.statusCode || 0;\n                const response = {\n                    statusCode,\n                    result: null,\n                    headers: {}\n                };\n                // not found leads to null obj returned\n                if (statusCode === HttpCodes.NotFound) {\n                    resolve(response);\n                }\n                // get the result from the body\n                function dateTimeDeserializer(key, value) {\n                    if (typeof value === 'string') {\n                        const a = new Date(value);\n                        if (!isNaN(a.valueOf())) {\n                            return a;\n                        }\n                    }\n                    return value;\n                }\n                let obj;\n                let contents;\n                try {\n                    contents = yield res.readBody();\n                    if (contents && contents.length > 0) {\n                        if (options && options.deserializeDates) {\n                            obj = JSON.parse(contents, dateTimeDeserializer);\n                        }\n                        else {\n                            obj = JSON.parse(contents);\n                        }\n                        response.result = obj;\n                    }\n                    response.headers = res.message.headers;\n                }\n                catch (err) {\n                    // Invalid resource (contents not json);  leaving result obj null\n                }\n                // note that 3xx redirects are handled by the http layer.\n                if (statusCode > 299) {\n                    let msg;\n                    // if exception/error in body, attempt to get better error\n                    if (obj && obj.message) {\n                        msg = obj.message;\n                    }\n                    else if (contents && contents.length > 0) {\n                        // it may be the case that the exception is in the body message as string\n                        msg = contents;\n                    }\n                    else {\n                        msg = `Failed request: (${statusCode})`;\n                    }\n                    const err = new HttpClientError(msg, statusCode);\n                    err.result = response.result;\n                    reject(err);\n                }\n                else {\n                    resolve(response);\n                }\n            }));\n        });\n    }\n}\nexports.HttpClient = HttpClient;\nconst lowercaseKeys = (obj) => Object.keys(obj).reduce((c, k) => ((c[k.toLowerCase()] = obj[k]), c), {});\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.checkBypass = exports.getProxyUrl = void 0;\nfunction getProxyUrl(reqUrl) {\n    const usingSsl = reqUrl.protocol === 'https:';\n    if (checkBypass(reqUrl)) {\n        return undefined;\n    }\n    const proxyVar = (() => {\n        if (usingSsl) {\n            return process.env['https_proxy'] || process.env['HTTPS_PROXY'];\n        }\n        else {\n            return process.env['http_proxy'] || process.env['HTTP_PROXY'];\n        }\n    })();\n    if (proxyVar) {\n        return new URL(proxyVar);\n    }\n    else {\n        return undefined;\n    }\n}\nexports.getProxyUrl = getProxyUrl;\nfunction checkBypass(reqUrl) {\n    if (!reqUrl.hostname) {\n        return false;\n    }\n    const noProxy = process.env['no_proxy'] || process.env['NO_PROXY'] || '';\n    if (!noProxy) {\n        return false;\n    }\n    // Determine the request port\n    let reqPort;\n    if (reqUrl.port) {\n        reqPort = Number(reqUrl.port);\n    }\n    else if (reqUrl.protocol === 'http:') {\n        reqPort = 80;\n    }\n    else if (reqUrl.protocol === 'https:') {\n        reqPort = 443;\n    }\n    // Format the request hostname and hostname with port\n    const upperReqHosts = [reqUrl.hostname.toUpperCase()];\n    if (typeof reqPort === 'number') {\n        upperReqHosts.push(`${upperReqHosts[0]}:${reqPort}`);\n    }\n    // Compare request host against noproxy\n    for (const upperNoProxyItem of noProxy\n        .split(',')\n        .map(x => x.trim().toUpperCase())\n        .filter(x => x)) {\n        if (upperReqHosts.some(x => x === upperNoProxyItem)) {\n            return true;\n        }\n    }\n    return false;\n}\nexports.checkBypass = checkBypass;\n//# sourceMappingURL=proxy.js.map","\"use strict\";\n\nfunction padWithZeros(vNumber, width) {\n  var numAsString = vNumber.toString();\n  while (numAsString.length < width) {\n    numAsString = \"0\" + numAsString;\n  }\n  return numAsString;\n}\n\nfunction addZero(vNumber) {\n  return padWithZeros(vNumber, 2);\n}\n\n/**\n * Formats the TimeOffset\n * Thanks to http://www.svendtofte.com/code/date_format/\n * @private\n */\nfunction offset(timezoneOffset) {\n  var os = Math.abs(timezoneOffset);\n  var h = String(Math.floor(os / 60));\n  var m = String(os % 60);\n  h = (\"0\" + h).slice(-2);\n  m = (\"0\" + m).slice(-2);\n  return timezoneOffset === 0 ? \"Z\" : (timezoneOffset < 0 ? \"+\" : \"-\") + h + \":\" + m;\n}\n\nfunction asString(format, date) {\n  if (typeof format !== \"string\") {\n    date = format;\n    format = module.exports.ISO8601_FORMAT;\n  }\n  if (!date) {\n    date = module.exports.now();\n  }\n\n  // Issue # 14 - Per ISO8601 standard, the time string should be local time\n  // with timezone info.\n  // See https://en.wikipedia.org/wiki/ISO_8601 section \"Time offsets from UTC\"\n\n  var vDay = addZero(date.getDate());\n  var vMonth = addZero(date.getMonth() + 1);\n  var vYearLong = addZero(date.getFullYear());\n  var vYearShort = addZero(vYearLong.substring(2, 4));\n  var vYear = format.indexOf(\"yyyy\") > -1 ? vYearLong : vYearShort;\n  var vHour = addZero(date.getHours());\n  var vMinute = addZero(date.getMinutes());\n  var vSecond = addZero(date.getSeconds());\n  var vMillisecond = padWithZeros(date.getMilliseconds(), 3);\n  var vTimeZone = offset(date.getTimezoneOffset());\n  var formatted = format\n    .replace(/dd/g, vDay)\n    .replace(/MM/g, vMonth)\n    .replace(/y{1,4}/g, vYear)\n    .replace(/hh/g, vHour)\n    .replace(/mm/g, vMinute)\n    .replace(/ss/g, vSecond)\n    .replace(/SSS/g, vMillisecond)\n    .replace(/O/g, vTimeZone);\n  return formatted;\n}\n\nfunction setDatePart(date, part, value, local) {\n  date['set' + (local ? '' : 'UTC') + part](value);\n}\n\nfunction extractDateParts(pattern, str, missingValuesDate) {\n  // Javascript Date object doesn't support custom timezone.  Sets all felds as\n  // GMT based to begin with.  If the timezone offset is provided, then adjust\n  // it using provided timezone, otherwise, adjust it with the system timezone.\n  var local = pattern.indexOf('O') < 0;\n  var monthOverflow = false;\n  var matchers = [\n    {\n      pattern: /y{1,4}/,\n      regexp: \"\\\\d{1,4}\",\n      fn: function(date, value) {\n        setDatePart(date, 'FullYear', value, local);\n      }\n    },\n    {\n      pattern: /MM/,\n      regexp: \"\\\\d{1,2}\",\n      fn: function(date, value) {\n        setDatePart(date, 'Month', (value - 1), local);\n        if (date.getMonth() !== (value - 1)) {\n          // in the event of 31 May --> 31 Feb --> 3 Mar\n          // this is correct behavior if no Date is involved\n          monthOverflow = true;\n        }\n      }\n    },\n    {\n      pattern: /dd/,\n      regexp: \"\\\\d{1,2}\",\n      fn: function(date, value) {\n        // in the event of 31 May --> 31 Feb --> 3 Mar\n        // reset Mar back to Feb, before setting the Date\n        if (monthOverflow) {\n          setDatePart(date, 'Month', (date.getMonth() - 1), local);\n        }\n        setDatePart(date, 'Date', value, local);\n      }\n    },\n    {\n      pattern: /hh/,\n      regexp: \"\\\\d{1,2}\",\n      fn: function(date, value) {\n        setDatePart(date, 'Hours', value, local);\n      }\n    },\n    {\n      pattern: /mm/,\n      regexp: \"\\\\d\\\\d\",\n      fn: function(date, value) {\n        setDatePart(date, 'Minutes', value, local);\n      }\n    },\n    {\n      pattern: /ss/,\n      regexp: \"\\\\d\\\\d\",\n      fn: function(date, value) {\n        setDatePart(date, 'Seconds', value, local);\n      }\n    },\n    {\n      pattern: /SSS/,\n      regexp: \"\\\\d\\\\d\\\\d\",\n      fn: function(date, value) {\n        setDatePart(date, 'Milliseconds', value, local);\n      }\n    },\n    {\n      pattern: /O/,\n      regexp: \"[+-]\\\\d{1,2}:?\\\\d{2}?|Z\",\n      fn: function(date, value) {\n        if (value === \"Z\") {\n          value = 0;\n        }\n        else {\n          value = value.replace(\":\", \"\");\n        }\n        var offset = Math.abs(value);\n        var timezoneOffset = (value > 0 ? -1 :  1 ) * ((offset % 100) + Math.floor(offset / 100) * 60);\n        // Per ISO8601 standard: UTC = local time - offset\n        //\n        // For example, 2000-01-01T01:00:00-0700\n        //   local time: 2000-01-01T01:00:00\n        //   ==> UTC   : 2000-01-01T08:00:00 ( 01 - (-7) = 8 )\n        //\n        // To make it even more confusing, the date.getTimezoneOffset() is\n        // opposite sign of offset string in the ISO8601 standard.  So if offset\n        // is '-0700' the getTimezoneOffset() would be (+)420. The line above\n        // calculates timezoneOffset to matche Javascript's behavior.\n        //\n        // The date/time of the input is actually the local time, so the date\n        // object that was constructed is actually local time even thought the\n        // UTC setters are used.  This means the date object's internal UTC\n        // representation was wrong.  It needs to be fixed by substracting the\n        // offset (or adding the offset minutes as they are opposite sign).\n        //\n        // Note: the time zone has to be processed after all other fields are\n        // set.  The result would be incorrect if the offset was calculated\n        // first then overriden by the other filed setters.\n        date.setUTCMinutes(date.getUTCMinutes() + timezoneOffset);\n      }\n    }\n  ];\n\n  var parsedPattern = matchers.reduce(\n    function(p, m) {\n      if (m.pattern.test(p.regexp)) {\n        m.index = p.regexp.match(m.pattern).index;\n        p.regexp = p.regexp.replace(m.pattern, \"(\" + m.regexp + \")\");\n      } else {\n        m.index = -1;\n      }\n      return p;\n    },\n    { regexp: pattern, index: [] }\n  );\n\n  var dateFns = matchers.filter(function(m) {\n    return m.index > -1;\n  });\n  dateFns.sort(function(a, b) {\n    return a.index - b.index;\n  });\n\n  var matcher = new RegExp(parsedPattern.regexp);\n  var matches = matcher.exec(str);\n  if (matches) {\n    var date = missingValuesDate || module.exports.now();\n    dateFns.forEach(function(f, i) {\n      f.fn(date, matches[i + 1]);\n    });\n\n    return date;\n  }\n\n  throw new Error(\n    \"String '\" + str + \"' could not be parsed as '\" + pattern + \"'\"\n  );\n}\n\nfunction parse(pattern, str, missingValuesDate) {\n  if (!pattern) {\n    throw new Error(\"pattern must be supplied\");\n  }\n\n  return extractDateParts(pattern, str, missingValuesDate);\n}\n\n/**\n * Used for testing - replace this function with a fixed date.\n */\nfunction now() {\n  return new Date();\n}\n\nmodule.exports = asString;\nmodule.exports.asString = asString;\nmodule.exports.parse = parse;\nmodule.exports.now = now;\nmodule.exports.ISO8601_FORMAT = \"yyyy-MM-ddThh:mm:ss.SSS\";\nmodule.exports.ISO8601_WITH_TZ_OFFSET_FORMAT = \"yyyy-MM-ddThh:mm:ss.SSSO\";\nmodule.exports.DATETIME_FORMAT = \"dd MM yyyy hh:mm:ss.SSS\";\nmodule.exports.ABSOLUTETIME_FORMAT = \"hh:mm:ss.SSS\";\n","/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n","/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n","/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n","/**\r\n * Copyright 2019 Huawei Technologies Co.,Ltd.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n * this file except in compliance with the License.  You may obtain a copy of the\r\n * License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed\r\n * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\n\r\n\r\nexports.AclPrivate = 'private';\r\nexports.AclPublicRead = 'public-read';\r\nexports.AclPublicReadWrite = 'public-read-write';\r\nexports.AclPublicReadDelivered = 'public-read-delivered';\r\nexports.AclPublicReadWriteDelivered = 'public-read-write-delivered';\r\nexports.AclAuthenticatedRead = 'authenticated-read';\r\nexports.AclBucketOwnerRead = 'bucket-owner-read';\r\nexports.AclBucketOwnerFullControl = 'bucket-owner-full-control';\r\nexports.AclLogDeliveryWrite = 'log-delivery-write';\r\n\r\nexports.StorageClassStandard = 'STANDARD';\r\nexports.StorageClassWarm = 'WARM';\r\nexports.StorageClassCold = 'COLD';\r\n\r\nexports.PermissionRead = 'READ';\r\nexports.PermissionWrite = 'WRITE';\r\nexports.PermissionReadAcp = 'READ_ACP';\r\nexports.PermissionWriteAcp = 'WRITE_ACP';\r\nexports.PermissionFullControl = 'FULL_CONTROL';\r\n\r\nexports.GroupAllUsers = 'AllUsers';\r\nexports.GroupAuthenticatedUsers = 'AuthenticatedUsers';\r\nexports.GroupLogDelivery = 'LogDelivery';\r\n\r\nexports.RestoreTierExpedited = 'Expedited';\r\nexports.RestoreTierStandard = 'Standard';\r\nexports.RestoreTierBulk = 'Bulk';\r\n\r\nexports.GranteeGroup = 'Group';\r\nexports.GranteeUser = 'CanonicalUser';\r\n\r\nexports.CopyMetadata = 'COPY';\r\nexports.ReplaceMetadata = 'REPLACE';\r\n\r\nexports.EventObjectCreatedAll = 'ObjectCreated:*';\r\nexports.EventObjectCreatedPut = 'ObjectCreated:Put';\r\nexports.EventObjectCreatedPost = 'ObjectCreated:Post';\r\nexports.EventObjectCreatedCopy = 'ObjectCreated:Copy';\r\nexports.EventObjectCreatedCompleteMultipartUpload = 'ObjectCreated:CompleteMultipartUpload';\r\nexports.EventObjectRemovedAll = 'ObjectRemoved:*';\r\nexports.EventObjectRemovedDelete = 'ObjectRemoved:Delete';\r\nexports.EventObjectRemovedDeleteMarkerCreated = 'ObjectRemoved:DeleteMarkerCreated';\r\n\r\nconst KB = 1024;\r\nconst MB = 1024 * KB;\r\nconst GB = 1024 * MB;\r\n\r\nexports.KB = KB;\r\nexports.MB = MB;\r\nexports.GB = GB;\r\n\r\nexports.MAX_UPLOAD_PART_COUNT = 10000;\r\nexports.MAX_UPLOAD_PART_SIZE = 5 * GB;\r\nexports.DEFAULT_UPLOAD_PART_SIZE = 5 * MB;\r\nexports.MIN_UPLOAD_PART_SIZE = 100 * KB;\r\n\r\nexports.MAX_DOWNLOAD_PART_SIZE = 5 * GB;\r\nexports.DEFAULT_DOWNLOAD_PART_SIZE = 5 * MB;\r\nexports.MIN_DOWNLOAD_PART_SIZE = 100 * KB;","/**\r\n * Copyright 2019 Huawei Technologies Co.,Ltd.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n * this file except in compliance with the License.  You may obtain a copy of the\r\n * License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed\r\n * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\n\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst log4js = require('log4js');\r\n\r\nfunction checkAndCreateDir(dir,path){\r\n\tif(!fs.existsSync(dir)){\r\n\t\tlet rout = path.dirname(dir);\r\n\t\tif(!fs.existsSync(rout)){\r\n\t\t\tcheckAndCreateDir(rout);\r\n\t\t}\r\n\t\tfs.mkdirSync(dir);\r\n\t}\r\n}\r\n\r\nfunction LogUtil(){\r\n\tthis.loggerInf = null;\r\n\tthis.loggerRun = null;\r\n\tthis.consoleLog = null;\r\n}\r\n\r\nLogUtil.prototype.initLog = function(filename, maxLogSize, backups, level, logToConsole, name, logger){\r\n\tif(logger){\r\n\t\tthis.loggerInf = logger;\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tif(!filename){\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tlet dir = path.dirname(filename);\r\n\tcheckAndCreateDir(dir, path);\r\n\tlet ext = path.extname(filename);\r\n\tlet file = path.basename(filename, ext);\r\n\tif(!ext){\r\n\t\text = '.log';\r\n\t}\r\n\t\r\n\tlevel = level === undefined ? 'info' : String(level);\r\n\tmaxLogSize = maxLogSize === undefined ? 102400 : parseInt(maxLogSize, 10);\r\n\tbackups = backups === undefined ? 10 : parseInt(backups, 10);\r\n\t\r\n\tlet fileInterface = path.join(dir, file + ext);\r\n\tlet layoutFormat = '%d{yyyy/MM/dd hh:mm:ss SSS}|%c|%-5p|%m';\r\n\tlet cateInterface = 'sdk-file';\r\n\tlet cateConsole = 'sdk-console';\r\n\tif(name){\r\n\t\tcateInterface += ':' + String(name);\r\n\t\tcateConsole += ':' + String(name);\r\n\t}\r\n\t\r\n\tlet appenders = {};\r\n\tappenders[cateConsole] = {\r\n        type:'console',\r\n    };\r\n\tappenders[cateInterface] = {\r\n        type: 'file',\r\n        filename: fileInterface,\r\n        maxLogSize:maxLogSize,\r\n        backups:backups,\r\n        layout: {\r\n            type: 'pattern',\r\n            pattern : layoutFormat,\r\n        }\r\n    };\r\n\t\r\n\tlet categories = {\r\n\t\tdefault: { appenders: [cateConsole], level: 'off' }\r\n\t};\r\n\tcategories[cateInterface] =  { appenders: [cateInterface], level:level.toLowerCase()};\r\n\tcategories[cateConsole] =  { appenders: [cateConsole], level:level.toLowerCase()};\r\n\t\r\n\tlog4js.configure({\r\n\t\tcategories: categories,\r\n\t    appenders: appenders,\r\n\t    replaceConsole: true\r\n\t});\r\n\t\r\n\tthis.loggerInf = log4js.getLogger(cateInterface);\r\n\tif(logToConsole){\r\n\t\tthis.consoleLog = log4js.getLogger(cateConsole);\r\n\t}\r\n};\r\n\r\nLogUtil.prototype._doLog = function(level, form){\r\n\tif(level.toLowerCase() === 'debug'){\r\n\t\tif(this.loggerInf){\r\n\t\t\tthis.loggerInf.debug(form);\r\n\t\t}\r\n\t\tif(this.consoleLog){\r\n\t\t\tthis.consoleLog.debug(form);\r\n\t\t}\r\n\t}else if(level.toLowerCase() === 'info'){\r\n\t\tif(this.loggerInf){\r\n\t\t\tthis.loggerInf.info(form);\r\n\t\t}\r\n\t\tif(this.consoleLog){\r\n\t\t\tthis.consoleLog.info(form);\r\n\t\t}\r\n\t}else if(level.toLowerCase() === 'warn'){\r\n\t\tif(this.loggerInf){\r\n\t\t\tthis.loggerInf.warn(form);\r\n\t\t}\r\n\t\tif(this.consoleLog){\r\n\t\t\tthis.consoleLog.warn(form);\r\n\t\t}\r\n\t}else if(level.toLowerCase() === 'error'){\r\n\t\tif(this.loggerInf){\r\n\t\t\tthis.loggerInf.error(form);\r\n\t\t}\r\n\t\tif(this.consoleLog){\r\n\t\t\tthis.consoleLog.error(form);\r\n\t\t}\r\n\t}\r\n};\r\n\r\nLogUtil.prototype.isLevelEnabled = function(level){\r\n\treturn (this.loggerInf && this.loggerInf.isLevelEnabled(level)) || (this.consoleLog && this.consoleLog.isLevelEnabled(level));\r\n};\r\n\r\nLogUtil.prototype.runLog = function(level, methodName, msg){\r\n\tif(!this.loggerInf && !this.consoleLog){\r\n\t\treturn;\r\n\t}\r\n\tlet form = methodName + '|' + msg;\r\n\tthis._doLog(level, form);\r\n};\r\n\r\n\r\nmodule.exports = LogUtil;\r\n","/**\r\n * Copyright 2019 Huawei Technologies Co.,Ltd.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n * this file except in compliance with the License.  You may obtain a copy of the\r\n * License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed\r\n * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\n\r\nconst util = require('util');\r\nconst Utils = require('./utils');\r\nconst LogUtil = require('./log');\r\nconst enums = require('./enums');\r\nconst {\r\n\tMAX_UPLOAD_PART_COUNT,\r\n\r\n\tMIN_UPLOAD_PART_SIZE,\r\n\tMAX_UPLOAD_PART_SIZE,\r\n\tDEFAULT_UPLOAD_PART_SIZE,\r\n\r\n\tMIN_DOWNLOAD_PART_SIZE,\r\n\tMAX_DOWNLOAD_PART_SIZE,\r\n\tDEFAULT_DOWNLOAD_PART_SIZE,\r\n} = enums;\r\nfunction ObsClient(param){\r\n\tthis.factory(param);\r\n}\r\n\r\nfunction capitalize(key){\r\n\treturn key.slice(0,1).toUpperCase() + key.slice(1);\r\n}\r\n\r\nconst methods = [\r\n\t'headBucket',\r\n\t'getBucketMetadata',\r\n\t'deleteBucket',\r\n\t'setBucketQuota',\r\n\t'getBucketQuota',\r\n\t'getBucketStorageInfo',\r\n\t'setBucketPolicy',\r\n\t'getBucketPolicy',\r\n\t'deleteBucketPolicy',\r\n\t'setBucketVersioningConfiguration',\r\n\t'getBucketVersioningConfiguration',\r\n\t'getBucketLocation',\r\n\t'listVersions',\r\n\t'listObjects',\r\n\t'setBucketLifecycleConfiguration',\r\n\t'getBucketLifecycleConfiguration',\r\n\t'deleteBucketLifecycleConfiguration',\r\n\t'setBucketAcl',\r\n\t'getBucketAcl',\r\n\t'setBucketLoggingConfiguration',\r\n\t'getBucketLoggingConfiguration',\r\n\t'setBucketWebsiteConfiguration',\r\n\t'getBucketWebsiteConfiguration',\r\n\t'deleteBucketWebsiteConfiguration',\r\n\t'setBucketNotification',\r\n\t'getBucketNotification',\r\n\t'setBucketTagging',\r\n\t'deleteBucketTagging',\r\n\t'getBucketTagging',\r\n\t'setBucketReplication',\r\n\t'deleteBucketReplication',\r\n\t'getBucketReplication',\r\n\t'getObject',\r\n\t'setObjectMetadata',\r\n\t'getObjectMetadata',\r\n\t'setObjectAcl',\r\n\t'getObjectAcl',\r\n\t'deleteObject',\r\n\t'deleteObjects',\r\n\t'listMultipartUploads',\r\n\t'listParts',\r\n\t'abortMultipartUpload',\r\n\t'completeMultipartUpload',\r\n\t'setBucketCors',\r\n\t'getBucketCors',\r\n\t'deleteBucketCors',\r\n\t'optionsBucket',\r\n\t'optionsObject',\r\n\t'setBucketStoragePolicy',\r\n\t'getBucketStoragePolicy',\r\n\t'getBucketEncryption',\r\n\t'setBucketEncryption',\r\n\t'deleteBucketEncryption',\r\n\t'getBucketDirectColdAccess',\r\n\t'setBucketDirectColdAccess',\r\n\t'deleteBucketDirectColdAccess',\r\n\t'renameObject',\r\n\t'getBucketRequesterPayment',\r\n\t'setBucketRequesterPayment',\r\n];\r\n\r\nfunction createAction(method){\r\n\treturn function(param, callback){\r\n\t\tthis.exec(capitalize(method), param, callback);\r\n\t};\r\n}\r\n\r\nfor(let i=0;i<methods.length;i++){\r\n\tlet method = methods[i];\r\n\tObsClient.prototype[method] = createAction(method);\r\n}\r\n\r\nObsClient.prototype.createBucket = function(param, callback){\r\n\tif(this.util && this.util.isCname){\r\n\t\treturn callback('createBucket is not allowed in customdomain mode', null);\r\n\t}\r\n\tthis.exec('CreateBucket', param, callback);\r\n};\r\n\r\nObsClient.prototype.listBuckets = function(param, callback){\r\n\tif(this.util && this.util.isCname){\r\n\t\treturn callback('listBuckets is not allowed in customdomain mode', null);\r\n\t}\r\n\tthis.exec('ListBuckets', param, callback);\r\n};\r\n\r\nObsClient.prototype.putObject = function(param, callback){\r\n\t\r\n\tif(('Body' in param) && ('SourceFile' in param)){\r\n\t\tlet err = 'the input body and sourcefile exist at same time,please specify one of eigther a string or file to be send!';\r\n\t\tif(this.log.isLevelEnabled('error')){\r\n\t\t\tthis.log.runLog('error', 'PutObject', err);\r\n\t\t}\r\n\t\treturn callback(new Error(err), null);\r\n\t}\r\n\t\r\n\tif(!('ContentType' in param)){\r\n\t\tif('Key' in param){\r\n\t\t\tparam.ContentType = this.util.mimeTypes[param.Key.substring(param.Key.lastIndexOf('.') + 1)];\r\n\t\t}\r\n\t\tif(!param.ContentType && ('SourceFile' in param)){\r\n\t\t\tparam.ContentType = this.util.mimeTypes[param.SourceFile.substring(param.SourceFile.lastIndexOf('.') + 1)];\r\n\t\t}\r\n\t}\r\n\t\r\n\tthis.exec('PutObject', param, callback);\r\n};\r\n\r\nObsClient.prototype.modifyObject = function(param, callback){\r\n\r\n\tif(('Body' in param) && ('SourceFile' in param)){\r\n\t\tlet err = 'the input body and sourcefile exist at same time,please specify one of eigther a string or file to be send!';\r\n\t\tif(this.log.isLevelEnabled('error')){\r\n\t\t\tthis.log.runLog('error', 'ModifyObject', err);\r\n\t\t}\r\n\t\treturn callback(new Error(err), null);\r\n\t}\r\n\r\n\tif(!('ContentType' in param)){\r\n\t\tif('Key' in param){\r\n\t\t\tparam.ContentType = this.util.mimeTypes[param.Key.substring(param.Key.lastIndexOf('.') + 1)];\r\n\t\t}\r\n\t\tif(!param.ContentType && ('SourceFile' in param)){\r\n\t\t\tparam.ContentType = this.util.mimeTypes[param.SourceFile.substring(param.SourceFile.lastIndexOf('.') + 1)];\r\n\t\t}\r\n\t}\r\n\r\n\tthis.exec('ModifyObject', param, callback);\r\n};\r\n\r\nObsClient.prototype.appendObject = function(param, callback){\r\n\t\r\n\tif(('Body' in param) && ('SourceFile' in param)){\r\n\t\tlet err = 'the input body and sourcefile exist at same time,please specify one of eigther a string or file to be send!';\r\n\t\tif(this.log.isLevelEnabled('error')){\r\n\t\t\tthis.log.runLog('error', 'PutObject', err);\r\n\t\t}\r\n\t\treturn callback(new Error(err), null);\r\n\t}\r\n\t\r\n\tif(!('ContentType' in param)){\r\n\t\tif('Key' in param){\r\n\t\t\tparam.ContentType = this.util.mimeTypes[param.Key.substring(param.Key.lastIndexOf('.') + 1)];\r\n\t\t}\r\n\t\tif(!param.ContentType && ('SourceFile' in param)){\r\n\t\t\tparam.ContentType = this.util.mimeTypes[param.SourceFile.substring(param.SourceFile.lastIndexOf('.') + 1)];\r\n\t\t}\r\n\t}\r\n\t\r\n\tthis.exec('AppendObject', param, callback);\r\n};\r\n\r\nObsClient.prototype.copyObject = function(param, callback){\r\n\tlet key = 'CopySource';\r\n\tif(key in param){\r\n\t\tlet val = param[key];\r\n\t\tlet index = val.lastIndexOf('?versionId=');\r\n\t\tif(index > 0){\r\n\t\t\tparam[key] = this.util.encodeURIWithSafe(val.slice(0, index)) + val.slice(index);\r\n\t\t}else{\r\n\t\t\tparam[key] = this.util.encodeURIWithSafe(val);\r\n\t\t}\r\n\t}\r\n\tthis.exec('CopyObject', param, callback);\r\n};\r\n\r\nObsClient.prototype.copyPart = function(param, callback){\r\n\tlet key = 'CopySource';\r\n\tif(key in param){\r\n\t\tlet val = param[key];\r\n\t\tlet index = val.lastIndexOf('?versionId=');\r\n\t\tif(index > 0){\r\n\t\t\tparam[key] = this.util.encodeURIWithSafe(val.slice(0, index)) + val.slice(index);\r\n\t\t}else{\r\n\t\t\tparam[key] = this.util.encodeURIWithSafe(val);\r\n\t\t}\r\n\t}\r\n\tthis.exec('CopyPart', param, callback);\r\n};\r\n\r\nObsClient.prototype.restoreObject = function(param, callback){\r\n\tthis.exec('RestoreObject', param, function(err, result){\r\n\t\tif(!err && result.InterfaceResult && result.CommonMsg.Status < 300){\r\n\t\t\tresult.InterfaceResult.RestoreStatus = result.CommonMsg.Status === 200 ? 'AVALIABLE' : 'INPROGRESS';\r\n\t\t}\r\n\t\tcallback(err, result);\r\n\t});\r\n};\r\n\r\nObsClient.prototype.initiateMultipartUpload = function(param, callback){\r\n\tif(!('ContentType' in param) && 'Key' in param){\r\n\t\tparam.ContentType = this.util.mimeTypes[param.Key.substring(param.Key.lastIndexOf('.') + 1)];\r\n\t}\r\n\tthis.exec('InitiateMultipartUpload', param, callback);\r\n};\r\n\r\n\r\nObsClient.prototype.uploadPart = function(param, callback){\r\n\tif(('Body' in param) && ('SourceFile' in param)){\r\n\t\tlet err = 'the input body and sourcefile exist at same time,please specify one of eigther a string or file to be send!';\r\n\t\tif(this.log.isLevelEnabled('error')){\r\n\t\t\tthis.log.runLog('error', 'UploadPart', err);\r\n\t\t}\r\n\t\treturn callback(new Error(err), null);\r\n\t}\r\n\tthis.exec('UploadPart', param, callback);\r\n};\r\n\r\n\r\nObsClient.prototype.uploadFile = function(param, callback){\r\n\tparam = param || {};\r\n\tlet _log = this.log;\r\n\tlet obsClient = this;\r\n\tlet funcName = 'uploadFile';\r\n\tlet start = new Date().getTime();\r\n\tcallback = callback || function(){};\r\n\tlet _callback = function(code, message, result){\r\n\t\tif(_log.isLevelEnabled('info')){\r\n\t\t\t_log.runLog('info', funcName, 'ObsClient cost ' +  (new Date().getTime()-start) + ' ms');\r\n\t\t}\r\n\t\tif(typeof code === 'string'){\r\n\t\t\tif(message){\r\n\t\t\t\tcode += ':' + String(message);\r\n\t\t\t}\r\n\t\t\tcallback(code, result);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tcallback(code ? (code.CommonMsg.Code + ':' + code.CommonMsg.Message) : null, result);\r\n\t};\r\n\t\r\n\tif(_log.isLevelEnabled('info')){\r\n\t\t_log.runLog('info', funcName, 'enter ' + funcName + '...' );\r\n\t}\r\n\r\n\tlet bucket = param.Bucket;\r\n\tif(!bucket){\r\n\t\t_callback('InvalidArgument','Bucket is a required element!');\r\n\t\treturn;\r\n\t}\r\n\tbucket = String(bucket);\r\n\r\n\tlet key = param.Key;\r\n\tif(!key){\r\n\t\t_callback('InvalidArgument', 'Key is a required element!');\r\n\t\treturn;\r\n\t}\r\n\tkey = String(key);\r\n\r\n\tlet uploadFile = param.UploadFile;\r\n\tif(!uploadFile){\r\n\t\t_callback('InvalidArgument', 'UploadFile is a required element!');\r\n\t\treturn;\r\n\t}\r\n\tlet fs = require('fs');\r\n\tuploadFile = String(uploadFile); \r\n\t\r\n\tif(!fs.existsSync(uploadFile)){\r\n\t\t_callback('InvalidArgument', 'UploadFile does not exist!');\r\n\t\treturn;\r\n\t}\r\n\tlet fstat = fs.statSync(uploadFile);\r\n\tif(!fstat.isFile()){\r\n\t\t_callback('InvalidArgument', 'UploadFile is not a file!');\r\n\t\treturn;\r\n\t}\r\n\t\r\n\tlet fileSize = fstat.size;\r\n\t\r\n\tlet enableCheckpoint = param.EnableCheckpoint;\r\n\tlet checkpointFile = null;\r\n\tlet enableCheckSum = false;\r\n\r\n\tlet taskNum = parseInt(param.TaskNum, 10) || 20;\r\n\t\r\n\tif(enableCheckpoint){\r\n\t\tcheckpointFile = param.CheckpointFile;\r\n\t\tcheckpointFile = (checkpointFile && checkpointFile !== '') ? String(checkpointFile) : uploadFile + '.upload_record';\r\n\t\tlet pathLib = require('path');\r\n\t\tlet fileDir = pathLib.dirname(checkpointFile);\r\n\t\tif(!fs.existsSync(fileDir)){\r\n\t\t\tlet mkdirsSync = function(dirname){\r\n\t\t\t    if(fs.existsSync(dirname)){\r\n\t\t\t        return true;\r\n\t\t\t    }else{\r\n\t\t\t        if(mkdirsSync(pathLib.dirname(dirname))){\r\n\t\t\t            fs.mkdirSync(dirname);\r\n\t\t\t            return true;\r\n\t\t\t        }\r\n\t\t\t    }\r\n\t\t\t};\r\n\t\t\tmkdirsSync(fileDir);\r\n\t\t}\r\n\t\tenableCheckSum = param.EnableCheckSum;\r\n\t}\r\n\tif(_log.isLevelEnabled('debug')){\r\n\t\t_log.runLog('debug', funcName, 'Begin to uploadFile to OBS from file:' + uploadFile);\r\n\t}\r\n\t\r\n\tlet events = require('events');\r\n\tlet eventEmitter = new events.EventEmitter();\r\n\t\r\n\tlet calculateUploadCheckpointMD5 = function(uploadCheckpoint){\r\n\t\tlet data = [];\r\n\t\tdata.push(uploadCheckpoint.bucketName);\r\n\t\tdata.push(uploadCheckpoint.objectKey);\r\n\t\tdata.push(uploadCheckpoint.uploadFile);\r\n\t\tdata.push(String(uploadCheckpoint.partSize));\r\n\t\tdata.push(String(uploadCheckpoint.partCount));\r\n\t\tif(uploadCheckpoint.contentType){\r\n\t\t\tdata.push(uploadCheckpoint.contentType);\r\n\t\t}\r\n\t\tif(uploadCheckpoint.acl){\r\n\t\t\tdata.push(uploadCheckpoint.acl);\r\n\t\t}\r\n\t\tif(uploadCheckpoint.websiteRedirectLocation){\r\n\t\t\tdata.push(uploadCheckpoint.websiteRedirectLocation);\r\n\t\t}\r\n\t\tif(uploadCheckpoint.sseKms){\r\n\t\t\tdata.push(uploadCheckpoint.sseKms);\r\n\t\t}\r\n\t\tif(uploadCheckpoint.sseKmsKey){\r\n\t\t\tdata.push(uploadCheckpoint.sseKmsKey);\r\n\t\t}\r\n\t\tif(uploadCheckpoint.sseC){\r\n\t\t\tdata.push(uploadCheckpoint.sseC);\r\n\t\t}\r\n\t\tif(uploadCheckpoint.sseCKey){\r\n\t\t\tdata.push(uploadCheckpoint.sseCKey);\r\n\t\t}\r\n\t\tif(uploadCheckpoint.metadata){\r\n\t\t\tdata.push(JSON.stringify(uploadCheckpoint.metadata));\r\n\t\t}\r\n\t\tif(uploadCheckpoint.uploadId){\r\n\t\t\tdata.push(uploadCheckpoint.uploadId);\r\n\t\t}\r\n\t\tif(uploadCheckpoint.partsMeta && (uploadCheckpoint.partsMeta instanceof Object)){\r\n\t\t\tfor(let key in uploadCheckpoint.partsMeta){\r\n\t\t\t\tif ({}.hasOwnProperty.call(uploadCheckpoint.partsMeta, key)) {\r\n\t\t\t\t\tdata.push(String(key));\r\n\t\t\t\t\tlet partMeta = uploadCheckpoint.partsMeta[key];\r\n\t\t\t\t\tif(partMeta){\r\n\t\t\t\t\t\tdata.push(String(partMeta.offset));\r\n\t\t\t\t\t\tdata.push(String(partMeta.partSize));\r\n\t\t\t\t\t\tdata.push(String(partMeta.isCompleted));\r\n\t\t\t\t\t\tdata.push(String(partMeta.etag));\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn obsClient.util.bufMD5(Buffer.from(data.join(''), 'utf8'));\r\n\t};\r\n\t\r\n\tlet writeCheckpointFileSync = function(checkpointFile, uploadCheckpoint){\r\n\t\ttry{\r\n\t\t\tfs.writeFileSync(checkpointFile, JSON.stringify(uploadCheckpoint));\r\n\t\t\treturn true;\r\n\t\t}catch(e){\r\n\t\t\t_callback('WriteCheckpointFileError', e);\r\n\t\t\tif(_log.isLevelEnabled('debug')){\r\n\t\t\t\t_log.runLog('debug', funcName, 'Write checkpoint file failed and abort upload, uploadId ' + uploadCheckpoint.uploadId);\r\n\t\t\t}\r\n\t\t\tif(uploadCheckpoint.uploadId){\r\n\t\t\t\tobsClient.abortMultipartUpload({\r\n\t\t\t\t\tBucket:uploadCheckpoint.bucketName,\r\n\t\t\t\t\tKey:uploadCheckpoint.objectKey,\r\n\t\t\t\t\tUploadId:uploadCheckpoint.uploadId,\r\n\t\t\t\t},function(e, r){\r\n\t\t\t\t\tif(!e && (r.CommonMsg.Status < 300 || r.CommonMsg.Status === 404)){\r\n\t\t\t\t\t\tfs.unlink(checkpointFile, function(){});\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\tfs.unlink(checkpointFile, function(){});\r\n\t\t\t}\r\n\t\t\treturn false;\r\n\t\t}\r\n\t};\r\n\t\r\n\tlet abortRequest = function(uploadCheckpoint, checkpointFile, code, message){\r\n\t\tif(uploadCheckpoint && uploadCheckpoint.uploadId){\r\n\t\t\tobsClient.abortMultipartUpload({\r\n\t\t\t\tBucket:uploadCheckpoint.bucketName,\r\n\t\t\t\tKey:uploadCheckpoint.objectKey,\r\n\t\t\t\tUploadId:uploadCheckpoint.uploadId,\r\n\t\t\t},function(e, r){\r\n\t\t\t\tif(!e && (r.CommonMsg.Status < 300 || r.CommonMsg.Status === 404)){\r\n\t\t\t\t\tif(checkpointFile){\r\n\t\t\t\t\t\tfs.unlink(checkpointFile, function(){});\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t_callback(code, message);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tif(checkpointFile){\r\n\t\t\t\tfs.unlink(checkpointFile, function(){});\r\n\t\t\t}\r\n\t\t\t_callback(code, message);\r\n\t\t}\r\n\t};\r\n\t\r\n\tlet transResultToError = function(result){\r\n\t\tlet ret = [];\r\n\t\tif(result && result.CommonMsg){\r\n\t\t\tret.push('Status:' + result.CommonMsg.Status);\r\n\t\t\tret.push('Code:' + result.CommonMsg.Code);\r\n\t\t\tret.push('Message:' + result.CommonMsg.Message);\r\n\t\t}\r\n\t\treturn ret.join(',');\r\n\t};\r\n\t\r\n\teventEmitter.on('start to uploadFile', function(uploadCheckpoint){\r\n\t\tif(!uploadCheckpoint){\r\n\t\t\tuploadCheckpoint = {};\r\n\t\t}\r\n\t\tif(!uploadCheckpoint.partsMeta){\r\n\t\t\tuploadCheckpoint.partsMeta = {};\r\n\t\t}\r\n\t\tlet startToUploadFile = function(uploadId){\r\n\t\t\tlet finishedCount = 0;\r\n\t\t\tlet hasError = false;\r\n\t\t\tlet isAbort = false;\r\n\t\t\tlet completedRequest = function(){\r\n\t\t\t\tif(finishedCount === uploadCheckpoint.partCount){\r\n\t\t\t\t\tif(!hasError){\r\n\t\t\t\t\t\tlet parts = [];\r\n\t\t\t\t\t\tfor(let partNumber in uploadCheckpoint.partsMeta){\r\n\t\t\t\t\t\t\tif ({}.hasOwnProperty.call(uploadCheckpoint.partsMeta, partNumber)) {\r\n\t\t\t\t\t\t\t\tparts.push({\r\n\t\t\t\t\t\t\t\t\tPartNumber : partNumber,\r\n\t\t\t\t\t\t\t\t\tETag : uploadCheckpoint.partsMeta[partNumber].etag\r\n\t\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tobsClient.completeMultipartUpload({\r\n\t\t\t\t\t\t\tBucket: uploadCheckpoint.bucketName,\r\n\t\t\t\t\t\t\tKey : uploadCheckpoint.objectKey,\r\n\t\t\t\t\t\t\tUploadId : uploadId,\r\n\t\t\t\t\t\t\tParts: parts\r\n\t\t\t\t\t\t}, function(err, result){\r\n\t\t\t\t\t\t\tif(err || result.CommonMsg.Status >= 500){ \r\n\t\t\t\t\t\t\t\tif(checkpointFile){\r\n\t\t\t\t\t\t\t\t\t_callback('IncompletedUpload', err ? err : transResultToError(result));\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\tabortRequest(uploadCheckpoint, checkpointFile, 'UploadFileFailed', err ? err : transResultToError(result));\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}else if(result.CommonMsg.Status >= 300 && result.CommonMsg.Status < 500){\r\n\t\t\t\t\t\t\t\tabortRequest(uploadCheckpoint, checkpointFile, result.CommonMsg.Code, result.CommonMsg.Message);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tif(checkpointFile){\r\n\t\t\t\t\t\t\t\t\tfs.unlink(checkpointFile, function(){});\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t_callback(null, null, result);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tif(checkpointFile){\r\n\t\t\t\t\t\t\t_callback('IncompletedUpload','UploadFile finished with error, you can retry with the same parameters');\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tabortRequest(uploadCheckpoint, checkpointFile, 'UploadFileFailed', 'UploadFile finished with error!');\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\teventEmitter.on('doUpload', function(currentGroupIndex, groupCount, taskNum){\r\n\t\t\t\tlet start = (currentGroupIndex - 1) * taskNum;\r\n\t\t\t\tlet end = (currentGroupIndex === groupCount) ? uploadCheckpoint.partCount : currentGroupIndex * taskNum;\r\n\t\t\t\tlet finishedCountGroup = 0;\r\n\t\t\t\twhile(start<end){\r\n\t\t\t\t\tif(isAbort){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlet partNumber = start + 1;\r\n\t\t\t\t\tif(uploadCheckpoint.partsMeta[partNumber] && uploadCheckpoint.partsMeta[partNumber].isCompleted){\r\n\t\t\t\t\t\tfinishedCount++;\r\n\t\t\t\t\t\tfinishedCountGroup++;\r\n\t\t\t\t\t\tlet _taskNum = (currentGroupIndex === groupCount) ? (uploadCheckpoint.partCount - (currentGroupIndex - 1) * taskNum) : taskNum;\r\n\t\t\t\t\t\tif(finishedCountGroup === _taskNum && finishedCount < uploadCheckpoint.partCount){\r\n\t\t\t\t\t\t\teventEmitter.emit('doUpload', currentGroupIndex + 1, groupCount, taskNum);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcompletedRequest();\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlet offset = start * uploadCheckpoint.partSize;\r\n\t\t\t\t\t\tlet currPartSize = (start + 1 === uploadCheckpoint.partCount) ? uploadCheckpoint.uploadFileStat.fileSize - offset : uploadCheckpoint.partSize;\r\n\t\t\t\t\t\tobsClient.uploadPart({\r\n\t\t\t\t\t\t\tBucket : uploadCheckpoint.bucketName,\r\n\t\t\t\t\t\t\tKey: uploadCheckpoint.objectKey,\r\n\t\t\t\t\t\t\tPartNumber: partNumber,\r\n\t\t\t\t\t\t\tUploadId : uploadId,\r\n\t\t\t\t\t\t\tSourceFile: uploadCheckpoint.uploadFile,\r\n\t\t\t\t\t\t\tOffset : offset,\r\n\t\t\t\t\t\t\tPartSize : currPartSize,\r\n\t\t\t\t\t\t\tSseC : uploadCheckpoint.sseC,\r\n\t\t\t\t\t\t\tSseCKey : uploadCheckpoint.sseCKey\r\n\t\t\t\t\t\t}, function(err, result) {\r\n\t\t\t\t\t\t\tif(isAbort){\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlet partMeta = {offset : offset, partSize : currPartSize};\r\n\t\t\t\t\t\t\tif(err || result.CommonMsg.Status >= 500){\r\n\t\t\t\t\t\t\t\tpartMeta.isCompleted = false;\r\n\t\t\t\t\t\t\t\thasError = true;\r\n\t\t\t\t\t\t\t}else if(result.CommonMsg.Status >= 300 && result.CommonMsg.Status < 500){\r\n\t\t\t\t\t\t\t\tisAbort = true;\r\n\t\t\t\t\t\t\t\tabortRequest(uploadCheckpoint, checkpointFile, result.CommonMsg.Code, result.CommonMsg.Message);\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tpartMeta.etag = result.InterfaceResult.ETag;\r\n\t\t\t\t\t\t\t\tpartMeta.isCompleted = true;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tuploadCheckpoint.partsMeta[partNumber] = partMeta;\r\n\t\t\t\t\t\t\tif(_log.isLevelEnabled('debug')){\r\n\t\t\t\t\t\t\t\t_log.runLog('debug', funcName, 'Part ' + String(partNumber) + ' is finished, uploadId ' + uploadId);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tuploadCheckpoint.md5 = calculateUploadCheckpointMD5(uploadCheckpoint);\r\n\t\t\t\t\t\t\tif(checkpointFile && !writeCheckpointFileSync(checkpointFile, uploadCheckpoint)){\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfinishedCount++;\r\n\t\t\t\t\t\t\tfinishedCountGroup++;\r\n\t\t\t\t\t\t\tlet _taskNum = (currentGroupIndex === groupCount) ? (uploadCheckpoint.partCount - (currentGroupIndex - 1) * taskNum) : taskNum;\r\n\t\t\t\t\t\t\tif(finishedCountGroup === _taskNum && finishedCount < uploadCheckpoint.partCount){\r\n\t\t\t\t\t\t\t\teventEmitter.emit('doUpload', currentGroupIndex + 1, groupCount, taskNum);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcompletedRequest();\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstart++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\t\r\n\t\t\tlet groupCount = (uploadCheckpoint.partCount % taskNum === 0) ? (uploadCheckpoint.partCount / taskNum) : (Math.floor(uploadCheckpoint.partCount / taskNum) + 1);\r\n\t\t\teventEmitter.emit('doUpload', 1, groupCount, taskNum);\r\n\t\t};\r\n\t\t\r\n\t\tlet uploadId = uploadCheckpoint.uploadId;\r\n\t\tif(!uploadId){\r\n\t\t\tlet contentType = uploadCheckpoint.contentType ? uploadCheckpoint.contentType : obsClient.util.mimeTypes[key.substring(key.lastIndexOf('.') + 1)];\r\n\t\t\t\r\n\t\t\tif(!contentType){\r\n\t\t\t\tcontentType = obsClient.util.mimeTypes[uploadFile.substring(uploadFile.lastIndexOf('.') + 1)];\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tobsClient.initiateMultipartUpload({\r\n\t\t\t\tBucket : uploadCheckpoint.bucketName,\r\n\t\t\t\tKey : uploadCheckpoint.objectKey,\r\n\t\t\t\tACL : uploadCheckpoint.acl,\r\n\t\t\t\tMetadata : uploadCheckpoint.metadata,\r\n\t\t\t\tWebsiteRedirectLocation : uploadCheckpoint.websiteRedirectLocation,\r\n\t\t\t\tContentType : contentType,\r\n\t\t\t\tSseKms : uploadCheckpoint.sseKms,\r\n\t\t\t\tSseKmsKey : uploadCheckpoint.sseKmsKey,\r\n\t\t\t\tSseC : uploadCheckpoint.sseC,\r\n\t\t\t\tSseCKey : uploadCheckpoint.sseCKey\r\n\t\t\t}, function(err, result){\r\n\t\t\t\tif(err){\r\n\t\t\t\t\tif(checkpointFile){\r\n\t\t\t\t\t\tfs.unlink(checkpointFile, function(){});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t_callback('InitateMultipartUploadFailed',err);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(result.CommonMsg.Status >= 300){\r\n\t\t\t\t\tif(checkpointFile){\r\n\t\t\t\t\t\tfs.unlink(checkpointFile, function(){});\r\n\t\t\t\t\t}\r\n\t\t\t\t\t_callback(result);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tuploadId = result.InterfaceResult.UploadId;\r\n\t\t\t\tuploadCheckpoint.uploadId = uploadId;\r\n\t\t\t\tuploadCheckpoint.md5 = calculateUploadCheckpointMD5(uploadCheckpoint);\r\n\t\t\t\tif(_log.isLevelEnabled('debug')){\r\n\t\t\t\t\t_log.runLog('debug', funcName, 'Claim a new upload id ' + uploadId);\r\n\t\t\t\t}\r\n\t\t\t\tif(checkpointFile && !writeCheckpointFileSync(checkpointFile, uploadCheckpoint)){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tstartToUploadFile(uploadId);\r\n\t\t\t});\r\n\t\t}else{\r\n\t\t\tstartToUploadFile(uploadId);\r\n\t\t}\r\n\t});\r\n\t\r\n\tlet uploadCheckpoint;\r\n\tlet partSize = parseInt(param.PartSize, 10);\r\n\tlet partCount;\r\n\tif(fileSize === 0){\r\n\t\tpartSize = 0;\r\n\t\tpartCount = 1;\r\n\t}else{\r\n\t\tif (isNaN(partSize) || partSize < MIN_UPLOAD_PART_SIZE || partSize > MAX_UPLOAD_PART_SIZE) {\r\n\t\t\tpartSize = DEFAULT_UPLOAD_PART_SIZE;\r\n\t\t}\r\n\t\tpartCount = Math.floor(fileSize / partSize);\r\n\t\tif (partCount > MAX_UPLOAD_PART_COUNT) {\r\n\t\t\tpartCount = MAX_UPLOAD_PART_COUNT;\r\n\t\t\tpartSize = Math.ceil(fileSize / partCount);\r\n\t\t} else {\r\n\t\t\tif(fileSize % partSize !== 0){\r\n\t\t\t\tpartCount++;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif(_log.isLevelEnabled('debug')){\r\n\t\t_log.runLog('debug', funcName, 'Total parts count ' + partCount);\r\n\t}\r\n\tuploadCheckpoint = {bucketName: bucket, objectKey: key, uploadFile : uploadFile, partSize : partSize, partCount : partCount};\r\n\tuploadCheckpoint.contentType = param.ContentType;\r\n\tuploadCheckpoint.acl = param.ACL;\r\n\tuploadCheckpoint.websiteRedirectLocation = param.WebsiteRedirectLocation;\r\n\tuploadCheckpoint.sseKms = param.SseKms;\r\n\tuploadCheckpoint.sseKmsKey = param.SseKmsKey;\r\n\tuploadCheckpoint.sseC = param.sseC;\r\n\tuploadCheckpoint.sseCKey = param.SseCKey;\r\n\tuploadCheckpoint.metadata = param.Metadata;\r\n\tuploadCheckpoint.md5 = calculateUploadCheckpointMD5(uploadCheckpoint);\r\n\tuploadCheckpoint.uploadFileStat = {fileSize : fileSize, lastModified : fstat.mtime.toUTCString()};\r\n\t\r\n\tif(checkpointFile){\r\n\t\tif(!fs.existsSync(checkpointFile)){// call uploadFile first time\r\n\t\t\teventEmitter.on('start to writeFile', function(){\r\n\t\t\t\tfs.writeFile(checkpointFile, JSON.stringify(uploadCheckpoint), function(err){\r\n\t\t\t\t\tif(err){\r\n\t\t\t\t\t\t_callback('WriteCheckpointFileError',err);\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\teventEmitter.emit('start to uploadFile', uploadCheckpoint);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t\tif(enableCheckSum){\r\n\t\t\t\tobsClient.util.fileMD5(uploadFile, function(err, checkSum){\r\n\t\t\t\t\tif(err){\r\n\t\t\t\t\t\tcheckSum = '';\r\n\t\t\t\t\t}\r\n\t\t\t\t\tuploadCheckpoint.uploadFileStat.checkSum = checkSum;\r\n\t\t\t\t\teventEmitter.emit('start to writeFile');\r\n\t\t\t\t});\r\n\t\t\t}else{\r\n\t\t\t\teventEmitter.emit('start to writeFile');\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tfs.readFile(checkpointFile, function(err, data){\r\n\t\t\t\tif(err){\r\n\t\t\t\t\tfs.unlink(checkpointFile, function(){});\r\n\t\t\t\t\t_callback('ReadCheckpointFileError',err);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\ttry{\r\n\t\t\t\t\tuploadCheckpoint = JSON.parse(data);\r\n\t\t\t\t}catch(e){\r\n\t\t\t\t\tfs.unlink(checkpointFile, function(){});\r\n\t\t\t\t\t_callback('ParseCheckpointFileError', e);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tif(!uploadCheckpoint || uploadCheckpoint.bucketName !== bucket || uploadCheckpoint.objectKey !== key || uploadCheckpoint.uploadFile !== uploadFile ||\r\n\t\t\t\t\t\t!uploadCheckpoint.uploadFileStat || uploadCheckpoint.uploadFileStat.fileSize !== fstat.size || uploadCheckpoint.uploadFileStat.lastModified !== fstat.mtime.toUTCString() ||\r\n\t\t\t\t\t\tuploadCheckpoint.md5 !== calculateUploadCheckpointMD5(uploadCheckpoint)){\r\n\t\t\t\t\tabortRequest(uploadCheckpoint, checkpointFile, 'CheckpointFileInvalid', 'CheckpointFile is invalid!');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tif(uploadCheckpoint.uploadFileStat.checkSum){\r\n\t\t\t\t\tobsClient.util.fileMD5(uploadFile, function(err, checkSum){\r\n\t\t\t\t\t\tif(err || checkSum !== uploadCheckpoint.uploadFileStat.checkSum){\r\n\t\t\t\t\t\t\tabortRequest(uploadCheckpoint, checkpointFile, 'CheckpointFileInvalid','CheckpointFile is invalid!');\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\teventEmitter.emit('start to uploadFile', uploadCheckpoint);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\r\n\t\t\t\t\teventEmitter.emit('start to uploadFile', uploadCheckpoint);\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}else{\r\n\t\teventEmitter.emit('start to uploadFile', uploadCheckpoint);\r\n\t}\r\n};\r\n\r\n// 当指定了参数DownloadFile，将使用此值作为保存文件名，否则使用对象名作为保存文件名， 保存时将覆盖同名文件。 \r\n// 另外，还将使用 保存文件名+\".obsnodejssdk.tmp\"后缀的形式 作为下载过程中的临时中间文件名，且也会覆盖同名文件。\r\n// 另外，当开启了断点延续下载（EnableCheckpoint=true），还将使用 参数CheckpointFile（如果没有指定CheckpointFile将使用对象名）+\".obsnodejssdk.chkpt\"后缀的形式 作为保存历史下载情况和校验信息的文件名，且也会覆盖同名文件。\r\nObsClient.prototype.downloadFile = function(param, callback){\r\n\tparam = param || {};\r\n\tlet _log = this.log;\r\n\tlet obsClient = this;\r\n\tlet funcName = 'downloadFile';\r\n\tlet start = new Date().getTime();\r\n\tcallback = callback || function(){};\r\n\tlet _callback = function(code, message, result){\r\n\t\t_log.runLog('info', funcName, 'ObsClient cost ' +  (new Date().getTime() - start) + ' ms');\r\n\t\tif(typeof code === 'string'){\r\n\t\t\tif(message){\r\n\t\t\t\tcode += ':' + String(message);\r\n\t\t\t}\r\n\t\t\tcallback(code, result);\r\n\t\t}else{\r\n\t\t\tcallback(code ? (code.CommonMsg.Code + ':' + code.CommonMsg.Message) : null, result);\r\n\t\t}\r\n\t};\r\n\t\r\n\t_log.runLog('debug', funcName, 'enter ' + funcName + '...' );\r\n\r\n\tlet bucket = param.Bucket;\r\n\tif(!bucket){\r\n\t\t_log.runLog('error', funcName, 'Bucket is a required element!');\r\n\t\t_callback('InvalidArgument','Bucket is a required element!');\r\n\t\treturn;\r\n\t}\r\n\tbucket = String(bucket);\r\n\t\r\n\tlet key = param.Key;\r\n\tif(!key){\r\n\t\t_log.runLog('error', funcName, 'Key is a required element!');\r\n\t\t_callback('InvalidArgument', 'Key is a required element!');\r\n\t\treturn;\r\n\t}\r\n\tkey = String(key);\r\n\t\r\n\tlet pathLib = require('path');\r\n\t\r\n\tlet downloadFile;\r\n\tif(!param.DownloadFile){\r\n\t\tdownloadFile = require('process').cwd() + pathLib.sep + key;\r\n\t\t_log.runLog('info', funcName, 'DownloadFile is not set, will put file to path:' + downloadFile + \", by default\");\r\n\t}else{\r\n\t\tdownloadFile = String(param.DownloadFile);\r\n\t}\r\n\tlet tmpSuffix = \".obsnodejssdk.tmp\";\r\n\tlet chkSuffix = \".obsnodejssdk.chkpt\";\r\n\tlet downloadTempFile = downloadFile + tmpSuffix;\r\n\tlet fs = require('fs');\r\n\r\n\tlet taskNum = parseInt(param.TaskNum, 10) || 10;\r\n\t\r\n\tlet initWriteAndClose4DownloadTmpFile = function(tmpFileFd, tmpFile, tmpFileSize, callback) {\r\n\t\tlet buffer = Buffer.from('1', 'utf8');\r\n\t\tlet start = new Date().getTime();\r\n\t\tfs.write(tmpFileFd, buffer, 0, 1, tmpFileSize - 1, (werr)=>{\r\n\t\t\t_log.runLog('debug', 'prepareDownloadTempFile', ` prepare ${tmpFile} cost ` + (new Date().getTime() - start) + ' ms');\r\n\t\t\tif(werr){\r\n\t\t\t\t_log.runLog('error', 'prepareDownloadTempFile', `ftruncate temp file:${tmpFile} failed , and cost: ${(new Date().getTime() - start) / 1000}`);\r\n\t\t\t\t_log.runLog('error', 'prepareDownloadTempFile', `ftruncate temp file:${tmpFile} failed , err:${werr.stack}`);\r\n\t\t\t\tfs.unlinkSync(tmpFile);\r\n\t\t\t\treturn callback(false, tmpFile);\r\n\t\t\t}\r\n\t\t\tfs.close(tmpFileFd, (err)=>{\r\n\t\t\t\tif(err){\r\n\t\t\t\t\t_log.runLog('error', 'prepareDownloadTempFile', `close fd failed, err:${err.stack}`);\r\n\t\t\t\t\tfs.unlinkSync(tmpFile);\r\n\t\t\t\t\treturn callback(false, tmpFile);\r\n\t\t\t\t}\r\n\t\t\t\treturn callback(true, tmpFile);\r\n\t\t\t});\r\n\t\t});\r\n\t}\r\n\r\n\tlet initDownloadTmpFile = function(tmpFile, tmpFileSize, callback) {\r\n\t\tfs.open(tmpFile, 'w', (oerr, fd)=>{\r\n\t\t\tif(oerr){\r\n\t\t\t\t_log.runLog('error', 'prepareDownloadTempFile', `create temp download file ${tmpFile}  failed, error:${oerr.stack}`);\r\n\t\t\t\t_callback('InnerError',  `create temp download file ${tmpFile}  failed, error:${oerr.stack}`);\r\n\t\t\t\treturn callback(false, tmpFile);\r\n\t\t\t}\r\n\r\n\t\t\tlet start = new Date().getTime();\r\n\t\t\tfs.ftruncate(fd, tmpFileSize, (terr)=>{\r\n\t\t\t\tif(terr){\r\n\t\t\t\t\t// 例如fat、exfat文件系统，将导致fs.ftruncate()报错\r\n\t\t\t\t\tinitWriteAndClose4DownloadTmpFile(fd, tmpFile, tmpFileSize, callback);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t_log.runLog('debug', 'prepareDownloadTempFile', ` prepare ${tmpFile} cost ` + (new Date().getTime() - start) + ' ms');\r\n\t\t\t\t\tfs.close(fd, (err)=>{\r\n\t\t\t\t\t\tif(err){\r\n\t\t\t\t\t\t\t_log.runLog('error', 'prepareDownloadTempFile', `close fd failed, err:${err.stack}`);\r\n\t\t\t\t\t\t\tfs.unlinkSync(tmpFile);\r\n\t\t\t\t\t\t\treturn callback(false, tmpFile);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn callback(true, tmpFile);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\t\r\n\t\t\t});\r\n\t\t});\t\r\n\t}\r\n\r\n\tconst prepareDownloadTempFile = util.promisify((tmpFile, tmpFileSize, callback) => {\r\n\t\tif(fs.existsSync(tmpFile)){\r\n\t\t\ttry{\r\n\t\t\t\tfs.unlinkSync(tmpFile);\r\n\t\t\t}catch(e){\r\n\t\t\t\t_log.runLog('error', 'prepareDownloadTempFile',  `delete ${tmpFile} file failed , exception: ${e}`);\r\n\t\t\t\t_callback('DeleteTempFileError', `delete ${tmpFile} file failed , exception: ${e}`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitDownloadTmpFile(tmpFile, tmpFileSize, callback);\r\n\t});\r\n\r\n\tlet mkdirsSync = function(dirname){\r\n\t\tif(fs.existsSync(dirname)){\r\n\t\t\treturn true;\r\n\t\t}else{\r\n\t\t\tif(mkdirsSync(pathLib.dirname(dirname))){\r\n\t\t\t\tfs.mkdirSync(dirname);\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tobsClient.getObjectMetadata({\r\n\t\tBucket : bucket,\r\n\t\tKey : key,\r\n\t\tVersionId : param.VersionId,\r\n\t\tSseC: param.SseC,\r\n\t\tSseCKey: param.SseCKey,\r\n\t}, function(err, result){\r\n\t\t_log.runLog('debug', funcName, ` getObjectMetadata of ${key} cost ` + (new Date().getTime() - start) + ' ms');\r\n\r\n\t\tlet enableCheckpoint = param.EnableCheckpoint;\r\n\t\tlet checkpointFile = null;\r\n\t\t\r\n\t\tif(enableCheckpoint){\r\n\t\t\tcheckpointFile = param.CheckpointFile;\r\n\t\t\tcheckpointFile = (checkpointFile && checkpointFile !== '') ? String(checkpointFile) : downloadFile + chkSuffix;\r\n\t\t\tlet checkPointFileDir = pathLib.dirname(checkpointFile);\r\n\t\t\tif(!fs.existsSync(checkPointFileDir)){\r\n\t\t\t\tmkdirsSync(checkPointFileDir);\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tlet tempFileDir = pathLib.dirname(downloadTempFile);\r\n\t\tif(!fs.existsSync(tempFileDir)){\r\n\t\t\tmkdirsSync(tempFileDir);\r\n\t\t}\r\n\t\t\r\n\t\tif(err || result.CommonMsg.Status >= 500){\r\n\t\t\t_log.runLog('warn', funcName,  'the peer server occur exception!');\r\n\t\t\t_callback('GetObjectSizeError', err);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tif(result.CommonMsg.Status >= 300 && result.CommonMsg.Status < 500){\r\n\t\t\t_log.runLog('warn', funcName,  result.CommonMsg.Message);\r\n\t\t\t_callback(result);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tlet objectSize = parseInt(result.InterfaceResult.ContentLength, 10);\r\n\t\t\r\n\t\tif(objectSize === 0){\r\n\t\t\tfs.writeFileSync(downloadFile, Buffer.from(''));\r\n\t\t\tcallback(null, result);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tlet objestStat = result;\r\n\t\t\r\n\t\tlet events = require('events');\r\n\t\tlet eventEmitter = new events.EventEmitter();\r\n\t\t\r\n\t\tlet calculateDownloadCheckpointMD5 = function(downloadCheckpoint){\r\n\t\t\tlet data = [];\r\n\t\t\tdata.push(downloadCheckpoint.bucketName);\r\n\t\t\tdata.push(downloadCheckpoint.objectKey);\r\n\t\t\tdata.push(downloadCheckpoint.downloadFile);\r\n\t\t\tdata.push(String(downloadCheckpoint.partSize));\r\n\t\t\tdata.push(String(downloadCheckpoint.partCount));\r\n\t\t\tif(downloadCheckpoint.versionId){\r\n\t\t\t\tdata.push(downloadCheckpoint.versionId);\r\n\t\t\t}\r\n\t\t\tif(downloadCheckpoint.ifMatch){\r\n\t\t\t\tdata.push(downloadCheckpoint.ifMatch);\r\n\t\t\t}\r\n\t\t\tif(downloadCheckpoint.ifModifiedSince){\r\n\t\t\t\tdata.push(downloadCheckpoint.ifModifiedSince);\r\n\t\t\t}\r\n\t\t\tif(downloadCheckpoint.ifNoneMatch){\r\n\t\t\t\tdata.push(downloadCheckpoint.ifNoneMatch);\r\n\t\t\t}\r\n\t\t\tif(downloadCheckpoint.ifUnmodifiedSince){\r\n\t\t\t\tdata.push(downloadCheckpoint.ifUnmodifiedSince);\r\n\t\t\t}\r\n\t\t\tif(downloadCheckpoint.sseC){\r\n\t\t\t\tdata.push(downloadCheckpoint.sseC);\r\n\t\t\t}\r\n\t\t\tif(downloadCheckpoint.sseCKey){\r\n\t\t\t\tdata.push(downloadCheckpoint.sseCKey);\r\n\t\t\t}\r\n\t\t\tif(downloadCheckpoint.partsMeta && (downloadCheckpoint.partsMeta instanceof Object)){\r\n\t\t\t\t// key是分段段号，且在partsMeta上最小编号是1。  \r\n\t\t\t\tfor(let key in downloadCheckpoint.partsMeta){\r\n\t\t\t\t\tif ({}.hasOwnProperty.call(downloadCheckpoint.partsMeta, key)) {\r\n\t\t\t\t\t\tdata.push(String(key));\r\n\t\t\t\t\t\tlet partMeta = downloadCheckpoint.partsMeta[key];\r\n\t\t\t\t\t\tif(partMeta){\r\n\t\t\t\t\t\t\tdata.push(String(partMeta.startPos));\r\n\t\t\t\t\t\t\tdata.push(String(partMeta.endPos));\r\n\t\t\t\t\t\t\tdata.push(String(partMeta.isCompleted));\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn obsClient.util.bufMD5(Buffer.from(data.join(''), 'utf8'));\r\n\t\t};\r\n\t\t\r\n\t\tlet writeCheckpointFileSync = function(checkpointFile, downloadCheckpoint){\r\n\t\t\ttry{\r\n\t\t\t\tif(fs.existsSync(downloadTempFile)){\r\n\t\t\t\t\tlet tempFileStat = fs.statSync(downloadTempFile);\r\n\t\t\t\t\tif(!downloadCheckpoint.tempFileStatus){\r\n\t\t\t\t\t\tdownloadCheckpoint.tempFileStatus = {};\r\n\t\t\t\t\t}\r\n\t\t\t\t\tdownloadCheckpoint.tempFileStatus.fileName = downloadTempFile;\r\n\t\t\t\t\tdownloadCheckpoint.tempFileStatus.fileSize = tempFileStat.size;\r\n\t\t\t\t\tdownloadCheckpoint.tempFileStatus.lastModified = tempFileStat.mtime.toUTCString();\r\n\t\t\t\t}\r\n\t\t\t\tfs.writeFileSync(checkpointFile, JSON.stringify(downloadCheckpoint));\r\n\t\t\t\treturn true;\r\n\t\t\t}catch(e){\r\n\t\t\t\tfs.unlinkSync(checkpointFile, function(){});\r\n\t\t\t\tfs.unlinkSync(downloadTempFile, function(){});\r\n\t\t\t\t_callback('WriteCheckpointFileError', e);\r\n\t\t\t\t_log.runLog('error', funcName, 'Write checkpoint file failed, err: ' + e);\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t};\r\n\t\t\r\n\t\teventEmitter.on('start to downloadFile', function(downloadCheckpoint){\r\n\t\t\tif(!downloadCheckpoint){\r\n\t\t\t\tdownloadCheckpoint = {};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(!downloadCheckpoint.partsMeta){\r\n\t\t\t\tdownloadCheckpoint.partsMeta = {};\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\t_log.runLog('debug', funcName, 'Begin to downloadFile from OBS to:' + downloadFile);\r\n\t\t\t\r\n\t\t\tlet finishedCount = 0;\r\n\t\t\tlet hasError = false;\r\n\t\t\tlet isAbort = false;\r\n\t\t\t\r\n\t\t\tlet tryCompletedDownload = function(){\r\n\t\t\t\tif(finishedCount !== downloadCheckpoint.partCount){\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_log.runLog('debug', funcName, ` getObject of ${key} cost ` + (new Date().getTime() - start) + ' ms');\r\n\r\n\t\t\t\tif(!hasError){\r\n\t\t\t\t\tfs.rename(downloadTempFile, downloadFile, function(err){\r\n\t\t\t\t\t\tif(err){\r\n\t\t\t\t\t\t\t_log.runLog('error', 'completedDownload',  `DownloadFile finished but rename temp file error: ${err.stack}`);\r\n\t\t\t\t\t\t\tif(checkpointFile){\r\n\t\t\t\t\t\t\t\tif(!writeCheckpointFileSync(checkpointFile, downloadCheckpoint)){\r\n\t\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t_callback('IncompletedDownload',`you can retry with the same parameters, DownloadFile finished but rename temp file error: ${err.stack}`);\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\tfs.unlinkSync(downloadTempFile, function(){});\r\n\t\t\t\t\t\t\t\t_callback('DownloadFileFailed', `DownloadFile finished but rename temp file error: ${err.stack}`);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// rename成功后，删除checkpointFile\r\n\t\t\t\t\t\tif(checkpointFile){\r\n\t\t\t\t\t\t\tfs.unlinkSync(checkpointFile, function(){});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif(result && result.InterfaceResult){\r\n\t\t\t\t\t\t\tdelete result.InterfaceResult.ContentLength;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_callback(null, null, result);\r\n\t\t\t\t\t});\r\n\t\t\t\t}else{\t\r\n\t\t\t\t\tif(checkpointFile){\r\n\t\t\t\t\t\tif(!writeCheckpointFileSync(checkpointFile, downloadCheckpoint)){\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t_callback('IncompletedDownload','DownloadFile finished with error, you can retry with the same parameters');\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tfs.unlinkSync(downloadTempFile, function(){});\r\n\t\t\t\t\t\t_callback('DownloadFileFailed','DownloadFile finished with error');\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\teventEmitter.on('doDownload', function(currentGroupIndex, groupCount, taskNum){\r\n\t\t\t\tlet start = (currentGroupIndex - 1) * taskNum;\r\n\t\t\t\tlet end = (currentGroupIndex === groupCount) ? downloadCheckpoint.partCount : currentGroupIndex * taskNum;\r\n\t\t\t\tlet finishedCountInGroup = 0;\r\n\r\n\t\t\t\tlet currStepEnd = function(i, partMeta, doNextRoundDownload) {\r\n\t\t\t\t\tdownloadCheckpoint.partsMeta[i] = partMeta;\r\n\t\t\t\t\tdownloadCheckpoint.md5 = calculateDownloadCheckpointMD5(downloadCheckpoint);\r\n\t\t\t\t\tif(checkpointFile && !writeCheckpointFileSync(checkpointFile, downloadCheckpoint)){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfinishedCount++;\r\n\t\t\t\t\tfinishedCountInGroup++;\r\n\r\n\t\t\t\t\tif(!doNextRoundDownload) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet _taskNum = (currentGroupIndex === groupCount) ? (downloadCheckpoint.partCount - (currentGroupIndex - 1) * taskNum) : taskNum;\r\n\t\t\t\t\tif(finishedCountInGroup === _taskNum && finishedCount < downloadCheckpoint.partCount){\r\n\t\t\t\t\t\teventEmitter.emit('doDownload', currentGroupIndex + 1, groupCount, taskNum);\r\n\t\t\t\t\t}\r\n\t\t\t\t\telse if(finishedCountInGroup === _taskNum && finishedCount === downloadCheckpoint.partCount){\r\n\t\t\t\t\t\ttryCompletedDownload();\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet checkSkipPartI = function(i) {\r\n\t\t\t\t\tif(downloadCheckpoint.partsMeta[i] && downloadCheckpoint.partsMeta[i].isCompleted){\r\n\t\t\t\t\t\tfinishedCount++;\r\n\t\t\t\t\t\tfinishedCountInGroup++;\r\n\t\t\t\t\t\tlet _taskNum = (currentGroupIndex === groupCount) ? (downloadCheckpoint.partCount - (currentGroupIndex - 1) * taskNum) : taskNum;\r\n\t\t\t\t\t\tif(finishedCountInGroup === _taskNum && finishedCount < downloadCheckpoint.partCount){\r\n\t\t\t\t\t\t\t// 开启下一组下载\r\n\t\t\t\t\t\t\teventEmitter.emit('doDownload', currentGroupIndex + 1, groupCount, taskNum);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telse if(finishedCountInGroup === _taskNum && finishedCount === downloadCheckpoint.partCount){\r\n\t\t\t\t\t\t\ttryCompletedDownload();\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn true;\r\n\t\t\t\t\t}else {\r\n\t\t\t\t\t\treturn false;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet savePartIdata = function(i, startPos, partMeta, result) {\r\n\t\t\t\t\tlet stream;\r\n\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tlet res = result.InterfaceResult.Content;\r\n\r\n\t\t\t\t\t\tstream = fs.createWriteStream(downloadTempFile, {\r\n\t\t\t\t\t\t\tflags : 'r+',\r\n\t\t\t\t\t\t\tstart : startPos,\r\n\t\t\t\t\t\t\tautoClose: true // 如果 autoClose 被设置为 true（默认的行为），则当 'error' 或 'finish' 事件时，文件描述符会被自动地关闭\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\tstream.on('error', (err) => {\r\n\t\t\t\t\t\t\thasError = true;\r\n\t\t\t\t\t\t\tpartMeta.isCompleted = false;\r\n\t\t\t\t\t\t\tcurrStepEnd(i, partMeta, false);\r\n\t\t\t\t\t\t\t_log.runLog('warn', funcName, `write to downloadTempFile occur exception : ${err.stack}`);\r\n\t\t\t\t\t\t\t_callback('DownloadFileFailed',`write to downloadTempFile occur exception : ${err.stack}`);\r\n\t\t\t\t\t\t\tdelete result.InterfaceResult.Content;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tres.on('error', (err) => {\r\n\t\t\t\t\t\t\t// 如果可读流在处理期间发送错误，则可写流目标不会自动关闭。 如果发生错误，则需要手动关闭每个流以防止内存泄漏。\r\n\t\t\t\t\t\t\thasError = true;\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tstream.close();\r\n\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\t_log.runLog('warn', funcName, 'close downloadTempFile stream failed!');\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t// error事件之后，不会有除了close事件之外的其他事件\r\n\r\n\t\t\t\t\t\t\tpartMeta.isCompleted = false;\r\n\t\t\t\t\t\t\tcurrStepEnd(i, partMeta, false);\r\n\t\t\t\t\t\t\t_log.runLog('warn', funcName, `getObject occur exception during the processing data time : ${err.stack}!`);\r\n\t\t\t\t\t\t\t_callback('DownloadFileFailed',`getObject occur exception during the processing data time : ${err.stack}!`);\r\n\t\t\t\t\t\t\tdelete result.InterfaceResult.Content;\r\n\t\t\t\t\t\t}).on('end', () => {\r\n\t\t\t\t\t\t\tif (!res.complete) {\r\n\t\t\t\t\t\t\t\thasError = true;\r\n\t\t\t\t\t\t\t\tpartMeta.isCompleted = false;\r\n\t\t\t\t\t\t\t\t_log.runLog('warn', funcName, 'getObject occur exception that does not complete the data transmission!');\r\n\t\t\t\t\t\t\t\t_callback('DownloadFileFailed','getObject occur exception that does not complete the data transmission!');\r\n\t\t\t\t\t\t\t\tdelete result.InterfaceResult.Content;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\telse {\r\n\t\t\t\t\t\t\t\tpartMeta.isCompleted = true;\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\tcurrStepEnd(i, partMeta, true);\r\n\t\t\t\t\t\t});\r\n\r\n\t\t\t\t\t\tres.pipe(stream, {end: true});\r\n\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\thasError = true;\r\n\t\t\t\t\t\t_log.runLog('warn', funcName, 'write to downloadTempFile occering execption:' + e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tlet downLoadPartI = function(i) {\r\n\t\t\t\t\tif(checkSkipPartI(i)) {\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet startPos = (i-1) * downloadCheckpoint.partSize;\r\n\t\t\t\t\tlet endPos = (i === downloadCheckpoint.partCount) ? (downloadCheckpoint.objectStatus.objectSize-1) : (i * downloadCheckpoint.partSize - 1);\r\n\t\t\t\t\tlet partStartTime = new Date().getTime();\r\n\r\n\t\t\t\t\tobsClient.getObject({\r\n\t\t\t\t\t\tBucket: downloadCheckpoint.bucketName,\r\n\t\t\t\t\t\tKey: downloadCheckpoint.objectKey,\r\n\t\t\t\t\t\tVersionId : downloadCheckpoint.versionId,\r\n\t\t\t\t\t\tRange: 'bytes=' + startPos + '-' + endPos,\r\n\t\t\t\t\t\tSaveAsStream : true,\r\n\t\t\t\t\t\tIfMatch : downloadCheckpoint.ifMatch,\r\n\t\t\t\t\t\tIfModifiedSince : downloadCheckpoint.ifModifiedSince,\r\n\t\t\t\t\t\tIfNoneMatch : downloadCheckpoint.ifNoneMatch,\r\n\t\t\t\t\t\tIfUnmodifiedSince : downloadCheckpoint.ifUnmodifiedSince,\r\n\t\t\t\t\t\tSseC : downloadCheckpoint.sseC,\r\n\t\t\t\t\t\tSseCKey : downloadCheckpoint.sseCKey\r\n\t\t\t\t\t}, function(err, result) {\r\n\t\t\t\t\t\t_log.runLog('debug', funcName, ` get part data, first to get the response, cost ` + (new Date().getTime() - partStartTime) + ' ms');\r\n\r\n\t\t\t\t\t\tlet partMeta = {startPos : startPos, endPos : endPos};\r\n\r\n\t\t\t\t\t\tif(err || result.CommonMsg.Status >= 500){\r\n\t\t\t\t\t\t\tpartMeta.isCompleted = false;\r\n\t\t\t\t\t\t\t// hasError 控制completedDownload()是否rename tempDownloadFile to DownloadFile.\r\n\t\t\t\t\t\t\thasError = true;\r\n\t\t\t\t\t\t\tcurrStepEnd(i, partMeta, true);\r\n\t\t\t\t\t\t\t_callback('DownloadFileFailed','the peer server occur exception!');\r\n\t\t\t\t\t\t\t_log.runLog('warn', funcName, 'the peer server occur exception!');\r\n\t\t\t\t\t\t}else if(result.CommonMsg.Status >= 300 && result.CommonMsg.Status < 500){\r\n\t\t\t\t\t\t\tisAbort = true;\r\n\t\t\t\t\t\t\t_callback(result);\r\n\t\t\t\t\t\t\t_log.runLog('warn', funcName,  result.CommonMsg.Message);\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tsavePartIdata(i, startPos, partMeta, result);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile(start < end) {\r\n\t\t\t\t\tif(isAbort){\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tlet i = start + 1;\r\n\t\t\t\t\tdownLoadPartI(i);\r\n\t\t\t\t\tstart++;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\r\n\t\t\tlet groupCount = (downloadCheckpoint.partCount % taskNum === 0) ? (downloadCheckpoint.partCount / taskNum) : (Math.floor(downloadCheckpoint.partCount / taskNum) + 1);\r\n\t\t\tlet defaultMaxListeners = eventEmitter.getMaxListeners();\r\n\t\t\tif(groupCount > defaultMaxListeners) {\r\n\t\t\t\teventEmitter.setMaxListeners(groupCount + 1);\r\n\t\t\t\t_log.runLog('debug', funcName, 'eventEmitter setMaxListeners from  ' + defaultMaxListeners + ' to ' + eventEmitter.getMaxListeners());\r\n\t\t\t}\r\n\r\n\t\t\teventEmitter.emit('doDownload', 1, groupCount, taskNum);\r\n\t\t});\r\n\t\t\r\n\t\tlet downloadCheckpoint;\r\n\t\tlet partSize = parseInt(param.PartSize, 10);\r\n\t\tif (isNaN(partSize) || partSize < MIN_DOWNLOAD_PART_SIZE || partSize > MAX_DOWNLOAD_PART_SIZE) {\r\n\t\t\tpartSize = DEFAULT_DOWNLOAD_PART_SIZE;\r\n\t\t}\r\n\t\tlet partCount = objectSize % partSize === 0 ? Math.floor(objectSize / partSize) : Math.floor(objectSize / partSize) + 1;\r\n\t\t_log.runLog('debug', funcName, 'Total parts count ' + partCount);\r\n\t\tdownloadCheckpoint = {bucketName: bucket, objectKey: key, downloadFile : downloadFile, partSize : partSize, partCount : partCount};\r\n\t\tdownloadCheckpoint.versionId = param.VersionId;\r\n\t\tdownloadCheckpoint.ifMatch = param.IfMatch;\r\n\t\tdownloadCheckpoint.ifModifiedSince = param.IfModifiedSince;\r\n\t\tdownloadCheckpoint.ifNoneMatch = param.IfNoneMatch;\r\n\t\tdownloadCheckpoint.ifUnmodifiedSince = param.IfUnmodifiedSince;\r\n\t\tdownloadCheckpoint.sseC = param.SseC;\r\n\t\tdownloadCheckpoint.sseCKey = param.SseCKey;\r\n\t\tdownloadCheckpoint.md5 = calculateDownloadCheckpointMD5(downloadCheckpoint);\r\n\t\tdownloadCheckpoint.objectStatus = {objectSize : objectSize, lastModified : objestStat.InterfaceResult.LastModified, etag: objestStat.InterfaceResult.ETag};\r\n\t\t\r\n\t\tlet tryContinueDownload_noChkFile = function() {\r\n\t\t\tfs.writeFile(checkpointFile, JSON.stringify(downloadCheckpoint), function(err){\r\n\t\t\t\tif(err){\r\n\t\t\t\t\t_log.runLog('error', funcName, `failed to write to checkpointFile: ${err.stack}`);\r\n\t\t\t\t\t_callback('WriteCheckpointFileError', `failed to write to checkpointFile: ${err.stack}`);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tprepareDownloadTempFile(downloadTempFile, objectSize, (isPrepareSucceed, tmpFile) => {\r\n\t\t\t\t\tif(isPrepareSucceed){\r\n\t\t\t\t\t\teventEmitter.emit('start to downloadFile', downloadCheckpoint);\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch((reason) => {\r\n\t\t\t\t\t_log.runLog('error', funcName, 'failed to download file: ' + key + ', reason: ' + reason);\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet verifyDownloadTempFileStatus = function(tempFileStatusInChk){\r\n\t\t\tif(!tempFileStatusInChk || !tempFileStatusInChk.fileName || !tempFileStatusInChk.lastModified || !tempFileStatusInChk.fileSize){\r\n\t\t\t\t_log.runLog('warn',  'verifyTempFileStatus' , ' tempFileStatus infomation is not integrity.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tif(!fs.existsSync(downloadTempFile)){\r\n\t\t\t\t_log.runLog('warn', 'verifyTempFileStatus',  downloadTempFile + ' does not exist.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\tlet tempFileStat = fs.statSync(downloadTempFile);\r\n\t\t\tif( tempFileStatusInChk.fileName !== downloadTempFile \r\n\t\t\t\t|| tempFileStatusInChk.lastModified !== tempFileStat.mtime.toUTCString() \r\n\t\t\t\t|| tempFileStatusInChk.fileSize !==  tempFileStat.size){\r\n\t\t\t\t_log.runLog('warn',  'verifyTempFileStatus' , ' the tempFileStatus information in checkpointfile is not consistent.');\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t\tlet tryContinueDownload_hasChkFile = function() {\r\n\t\t\tfs.readFile(checkpointFile, function(err, data){\r\n\t\t\t\t_tmpDownloadCheckpoint = downloadCheckpoint;\r\n\r\n\t\t\t\tif(err){\r\n\t\t\t\t\t_log.runLog('error', funcName, `read checkpointFile occur error: ${err.stack}`);\r\n\t\t\t\t\tfs.unlinkSync(checkpointFile, function(){});\r\n\t\t\t\t\t_callback('ReadCheckpointFileError', `read checkpointFile occur error: ${err.stack}`);\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tdownloadCheckpoint = JSON.parse(data);\r\n\t\t\t\t\t}catch(e){\r\n\t\t\t\t\t\t_log.runLog('error', funcName, 'pasre checkpointFile data occur exception : ' + e);\r\n\t\t\t\t\t\tfs.unlinkSync(checkpointFile, function(){});\r\n\t\t\t\t\t\t_callback('ParseCheckpointFileError', 'pasre checkpointFile data occur exception : ' + e);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\t// verify : downloadTempFile  vs  checkpointfile\r\n\t\t\t\tif(!downloadCheckpoint || downloadCheckpoint.bucketName !== bucket || downloadCheckpoint.objectKey !== key || downloadCheckpoint.downloadFile !== downloadFile || \r\n\t\t\t\t\t\t!downloadCheckpoint.objectStatus || downloadCheckpoint.objectStatus.objectSize !== objectSize || downloadCheckpoint.objectStatus.lastModified !== objestStat.InterfaceResult.LastModified || downloadCheckpoint.objectStatus.etag !== objestStat.InterfaceResult.ETag \r\n\t\t\t\t\t\t|| !verifyDownloadTempFileStatus(downloadCheckpoint.tempFileStatus) || downloadCheckpoint.md5 !== calculateDownloadCheckpointMD5(downloadCheckpoint)){\r\n\t\t\t\t\t// 校验不通过，不使用延续下载，需执行prepareDownloadTempFile()\r\n\t\t\t\t\tfs.unlinkSync(checkpointFile, function(){});\r\n\t\t\t\t\t_log.runLog('warn',  funcName , 'CheckpointFile is invalid!');\r\n\r\n\t\t\t\t\tdownloadCheckpoint = _tmpDownloadCheckpoint;\r\n\t\t\t\t\tprepareDownloadTempFile(downloadTempFile, objectSize, (isPrepareSucceed, tmpFile) => {\r\n\t\t\t\t\t\tif(isPrepareSucceed){\r\n\t\t\t\t\t\t\teventEmitter.emit('start to downloadFile', downloadCheckpoint);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}).catch((reason) => {\r\n\t\t\t\t\t\t_log.runLog('error', funcName, 'failed to download file: ' + key + ', reason: ' + reason);\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\telse {\r\n\t\t\t\t\t// 校验通过，使用断点延续下载，即不执行prepareDownloadTempFile()\r\n\t\t\t\t\t_log.runLog('debug',  funcName , 'CheckpointFile is valid!');\r\n\t\t\t\t\teventEmitter.emit('start to downloadFile', downloadCheckpoint);\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tlet tryContinueDownload = function() {\r\n\t\t\tif(!fs.existsSync(checkpointFile)){\r\n\t\t\t\ttryContinueDownload_noChkFile();\r\n\t\t\t}else{\r\n\t\t\t\ttryContinueDownload_hasChkFile();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(checkpointFile){\r\n\t\t\t// 启用l了断点续接下载\r\n\t\t\ttryContinueDownload();\r\n\t\t}else{\r\n\t\t\t// 没有启用断点续接下载\r\n\t\t\tprepareDownloadTempFile(downloadTempFile, objectSize, (isPrepareSucceed, tmpFile) => {\r\n\t\t\t\tif(isPrepareSucceed){\r\n\t\t\t\t\teventEmitter.emit('start to downloadFile', downloadCheckpoint);\r\n\t\t\t\t}\r\n\t\t\t}).catch((reason) => {\r\n\t\t\t\t_log.runLog('error', funcName, 'failed to download file: ' + key + ', reason: ' + reason);\r\n\t\t\t});\r\n\t\t}\r\n\t});\r\n};\r\n\r\nfunction isFunction(obj){\r\n\treturn Object.prototype.toString.call(obj) === '[object Function]';\r\n}\r\n\r\nfunction createPromise(current){\r\n\treturn function(param, callback){\r\n\t\tif(isFunction(param)){\r\n\t\t\tcurrent.call(this, null, param);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif(isFunction(callback)){\r\n\t\t\tcurrent.call(this, param, callback);\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t\r\n\t\tlet that = this;\r\n\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\tcurrent.call(that, param, function(err, result){\r\n\t\t\t\tif(err){\r\n\t\t\t\t\treturn reject(err);\r\n\t\t\t\t}\r\n\t\t\t\tresolve(result);\r\n\t\t\t});\r\n\t\t});\r\n\t};\r\n}\r\n\r\ntry{\r\n\tif(Promise){\r\n\t\tfor(let key in ObsClient.prototype){\r\n\t\t\tif ({}.hasOwnProperty.call(ObsClient.prototype, key)) {\r\n\t\t\t\tlet current = ObsClient.prototype[key];\r\n\t\t\t\tObsClient.prototype[key] = createPromise(current);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}catch(e){\r\n\tconsole.log(e);\r\n}\r\n\r\nObsClient.prototype.close = function(){\r\n\tif(this.util){\r\n\t\tthis.util.close();\r\n\t\tdelete this.util;\r\n\t}\r\n};\r\n\r\nObsClient.prototype.exec = function(funcName, param, callback){\r\n\tlet _log = this.log;\r\n\tif(_log.isLevelEnabled('info')){\r\n\t\t_log.runLog('info', funcName, 'enter ' + funcName + '...' );\r\n\t}\r\n\tlet start = new Date().getTime();\r\n\tparam = param || {};\r\n\tlet _callback = function(err, msg){\r\n\t\tif(_callback.$called){\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t_callback.$called = true;\r\n\t\tif(_log.isLevelEnabled('info')){\r\n\t\t\t_log.runLog('info', funcName, 'ObsClient cost ' +  (new Date().getTime() - start) + ' ms');\r\n\t\t}\r\n\t\t\r\n\t\tif(err && !(err instanceof Error)){\r\n\t\t\terr = new Error(err);\r\n\t\t}\r\n\t\tcallback(err, msg);\r\n\t};\r\n\tthis.util.exec(funcName, param , _callback);\r\n};\r\n\r\nObsClient.prototype.initLog = function(param){\r\n\tparam = param || {};\r\n\tthis.log.initLog(param.file_full_path, param.max_log_size, param.backups, param.level, param.log_to_console, param.name, param.logger);\r\n\tif(this.log.isLevelEnabled('warn')){\r\n\t\tlet msg = ['[OBS SDK Version=' + this.util.obsSdkVersion];\r\n\t\tif(this.util.server){\r\n\t\t\tlet port = this.util.port ? ':' + this.util.port : '';\r\n\t\t\tmsg.push('Endpoint=' + (this.util.is_secure? 'https' : 'http') + '://' + this.util.server + port);\r\n\t\t}\r\n\t\tmsg.push('Access Mode=' + (this.util.path_style ? 'Path' : 'Virtual Hosting') + ']');\r\n\t\tthis.log.runLog('warn', 'init', msg.join('];['));\r\n\t}\r\n};\r\n\r\nObsClient.prototype.factory = function(param){\r\n\tthis.log = new LogUtil();\r\n\tthis.util = new Utils(this.log);\r\n\tparam = param || {};\r\n\tthis.util.initFactory(param.access_key_id, param.secret_access_key, param.is_secure,\r\n\t\t\tparam.server, param.path_style, param.signature, param.region, param.port, param.max_retry_count,\r\n\t\t\tparam.timeout, param.ssl_verify, param.long_conn_param, param.security_token, param.is_signature_negotiation, param.is_cname,\r\n\t\t\tparam.max_connections, param.http_agent, param.https_agent, param.user_agent);\r\n};\r\n\r\nObsClient.prototype.refresh = function(access_key_id, secret_access_key, security_token){\r\n\tthis.util.refresh(access_key_id, secret_access_key, security_token);\r\n};\r\n\r\nObsClient.prototype.enums = enums;\r\n\r\nObsClient.prototype.createV2SignedUrlSync = function(param){\r\n\treturn this.util.createV2SignedUrlSync(param);\r\n};\r\n\r\nObsClient.prototype.createV4SignedUrlSync = function(param){\r\n\treturn this.util.createV4SignedUrlSync(param);\r\n};\r\n\r\n\r\nObsClient.prototype.createSignedUrlSync = function(param){\r\n\treturn this.util.createSignedUrlSync(param);\r\n};\r\n\r\nObsClient.prototype.createV4PostSignatureSync = function(param){\r\n\treturn this.util.createV4PostSignatureSync(param);\r\n};\r\n\r\nObsClient.prototype.createPostSignatureSync = function(param){\r\n\treturn this.util.createPostSignatureSync(param);\r\n};\r\n\r\nfor(let key in ObsClient.prototype){\r\n\tif ({}.hasOwnProperty.call(ObsClient.prototype, key)) {\r\n\t\tObsClient.prototype[capitalize(key)] = ObsClient.prototype[key];\r\n\t}\r\n}\r\n\r\nfor(let key in ObsClient.prototype){\r\n\tif ({}.hasOwnProperty.call(ObsClient.prototype, key)) {\r\n\t\tlet index = key.indexOf('Configuration');\r\n\t\tif (index > 0 && index + 'Configuration'.length === key.length) {\r\n\t\t\tObsClient.prototype[key.slice(0, index)] = ObsClient.prototype[key];\r\n\t\t}\r\n\t}\r\n}\r\n\r\nmodule.exports = ObsClient;\r\n\r\n","/**\r\n * Copyright 2019 Huawei Technologies Co.,Ltd.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n * this file except in compliance with the License.  You may obtain a copy of the\r\n * License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed\r\n * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\n\r\nconst owner = {\r\n\t'type' : 'object',\r\n\t'location' : 'xml',\r\n\t'sentAs' : 'Owner',\r\n\t'parameters' : {\r\n\t\t'ID' : {\r\n\t\t\t'sentAs' : 'ID',\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst initiator = {\r\n\t'type' : 'object',\r\n\t'location' : 'xml',\r\n\t'sentAs' : 'Initiator',\r\n\t'parameters' : {\r\n\t\t'ID' : {\r\n\t\t\t'sentAs' : 'ID',\r\n\t\t},\r\n\t},\r\n};\r\nconst commonPrefixes = {\r\n\t'type' : 'array',\r\n\t'location' : 'xml',\r\n\t'sentAs' : 'CommonPrefixes',\r\n\t'items' : {\r\n\t\t'type' : 'object',\r\n\t\t'parameters' : {\r\n\t\t\t'Prefix' : {\r\n\t\t\t\t'sentAs' : 'Prefix',\r\n\t\t\t},\r\n\t\t\t'MTime': {\r\n\t\t\t\t'sentAs': 'MTime',\r\n\t\t\t},\r\n\t\t\t'InodeNo': {\r\n\t\t\t\t'sentAs': 'InodeNo',\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst grants = {\r\n\t'type' : 'array',\r\n\t'location' : 'xml',\r\n\t'wrapper' : 'AccessControlList',\r\n\t'sentAs' : 'Grant',\r\n\t'items' : {\r\n\t\t'type' : 'object',\r\n\t\t'parameters' : {\r\n\t\t\t'Grantee' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'Grantee',\r\n\t\t\t\t'parameters' : {\r\n\t\t\t\t\t'Type' : {\r\n\t\t\t\t\t\t'type' : 'ignore',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'ID' : {\r\n\t\t\t\t\t\t'sentAs' : 'ID',\r\n\t\t\t\t\t\t'notAllowEmpty' : true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'URI' : {\r\n\t\t\t\t\t\t'sentAs' :  'Canned',\r\n\t\t\t\t\t\t'type' : 'adapter',\r\n\t\t\t\t\t\t'notAllowEmpty' : true,\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'Permission' : {\r\n\t\t\t\t'sentAs' : 'Permission',\r\n\t\t\t},\r\n\t\t\t'Delivered' :{\r\n\t\t\t\t'sentAs' : 'Delivered',\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n\r\nconst grantsV2 = {\r\n\t'type' : 'array',\r\n\t'location' : 'xml',\r\n\t'wrapper' : 'AccessControlList',\r\n\t'sentAs' : 'Grant',\r\n\t'items' : {\r\n\t\t'type' : 'object',\r\n\t\t'parameters' : {\r\n\t\t\t'Grantee' : {\r\n\t\t\t\t'data' : {\r\n\t\t\t\t\t'xsiNamespace' : 'http://www.w3.org/2001/XMLSchema-instance',\r\n\t\t\t\t\t'xsiType' : 'Type',\r\n\t\t\t\t},\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'Grantee',\r\n\t\t\t\t'parameters' : {\r\n\t\t\t\t\t'Type' : {\r\n\t\t\t\t\t\t'type' : 'ignore',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'ID' : {\r\n\t\t\t\t\t\t'sentAs' : 'ID',\r\n\t\t\t\t\t\t'notAllowEmpty' : true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'Name' : {\r\n\t\t\t\t\t\t'sentAs' : 'DisplayName',\r\n\t\t\t\t\t\t'notAllowEmpty' : true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'URI' : {\r\n\t\t\t\t\t\t'sentAs' :  'URI',\r\n\t\t\t\t\t\t'type' : 'adapter',\r\n\t\t\t\t\t\t'notAllowEmpty' : true,\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'Permission' : {\r\n\t\t\t\t'sentAs' : 'Permission',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n};\r\n\r\nconst loggingEnabled = {\r\n\t'type' : 'object',\r\n\t'location' : 'xml',\r\n\t'sentAs' : 'LoggingEnabled',\r\n\t'parameters' : {\r\n\t\t'TargetBucket' : {\r\n\t\t\t'sentAs' : 'TargetBucket',\r\n\t\t},\r\n\t\t'TargetPrefix' : {\r\n\t\t\t'sentAs' : 'TargetPrefix',\r\n\t\t},\r\n\t\t'TargetGrants' : {\r\n\t\t\t'type' : 'array',\r\n\t\t\t'wrapper' : 'TargetGrants',\r\n\t\t\t'sentAs' : 'Grant',\r\n\t\t\t'items' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'parameters' : {\r\n\t\t\t\t\t'Grantee' : {\r\n\t\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t\t'sentAs' : 'Grantee',\r\n\t\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t\t'Type' : {\r\n\t\t\t\t\t\t\t\t'type' : 'ignore',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t'ID' : {\r\n\t\t\t\t\t\t\t\t'sentAs' : 'ID',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t'URI' : {\r\n\t\t\t\t\t\t\t\t'sentAs' :  'Canned',\r\n\t\t\t\t\t\t\t\t'type' : 'adapter'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'Permission' : {\r\n\t\t\t\t\t\t'sentAs' : 'Permission',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n};\r\n\r\nconst rules = {\r\n\t'required' : true,\r\n\t'type' : 'array',\r\n\t'location' : 'xml',\r\n\t'sentAs' : 'Rule',\r\n\t'items' : {\r\n\t\t'type' : 'object',\r\n\t\t'parameters' : {\r\n\t\t\t'ID' : {\r\n\t\t\t\t'sentAs' : 'ID',\r\n\t\t\t},\r\n\t\t\t'Prefix' : {\r\n\t\t\t\t'sentAs' : 'Prefix',\r\n\t\t\t},\r\n\t\t\t'Status' : {\r\n\t\t\t\t'sentAs' : 'Status',\r\n\t\t\t},\r\n\t\t\t'Transitions' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'sentAs' : 'Transition',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t'StorageClass' :{\r\n\t\t\t\t\t\t\t'sentAs' : 'StorageClass',\r\n\t\t\t\t\t\t\t'type' : 'adapter'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Date' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Date',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Days' : {\r\n\t\t\t\t\t\t\t'type' : 'number',\r\n\t\t\t\t\t\t\t'sentAs' : 'Days'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'Expiration' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'Expiration',\r\n\t\t\t\t'parameters' : {\r\n\t\t\t\t\t'Date' : {\r\n\t\t\t\t\t\t'sentAs' : 'Date',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'Days' : {\r\n\t\t\t\t\t\t'type' : 'number',\r\n\t\t\t\t\t\t'sentAs' : 'Days'\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'NoncurrentVersionTransitions' :{\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'sentAs' : 'NoncurrentVersionTransition',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t'StorageClass' :{\r\n\t\t\t\t\t\t\t'sentAs' : 'StorageClass',\r\n\t\t\t\t\t\t\t'type' : 'adapter'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'NoncurrentDays' : {\r\n\t\t\t\t\t\t\t'type' : 'number',\r\n\t\t\t\t\t\t\t'sentAs' : 'NoncurrentDays'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'NoncurrentVersionExpiration' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'NoncurrentVersionExpiration',\r\n\t\t\t\t'parameters' : {\r\n\t\t\t\t\t'NoncurrentDays' : {\r\n\t\t\t\t\t\t'type' : 'number',\r\n\t\t\t\t\t\t'sentAs' : 'NoncurrentDays',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n};\r\n\r\nconst redirectAllRequestsTo = {\r\n\t'type' : 'object',\r\n\t'location' : 'xml',\r\n\t'sentAs' : 'RedirectAllRequestsTo',\r\n\t'parameters' : {\r\n\t\t'HostName' : {\r\n\t\t\t'sentAs' : 'HostName',\r\n\t\t},\r\n\t\t'Protocol' : {\r\n\t\t\t'sentAs' : 'Protocol',\r\n\t\t},\r\n\t}\r\n};\r\n\r\nconst routingRules = {\r\n\t'type' : 'array',\r\n\t'wrapper' : 'RoutingRules',\r\n\t'location' : 'xml',\r\n\t'sentAs' : 'RoutingRule',\r\n\t'items' : {\r\n\t\t'type' : 'object',\r\n\t\t'parameters' : {\r\n\t\t\t'Condition' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'Condition',\r\n\t\t\t\t'parameters' : {\r\n\t\t\t\t\t'HttpErrorCodeReturnedEquals' : {\r\n\t\t\t\t\t\t'sentAs' : 'HttpErrorCodeReturnedEquals',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'KeyPrefixEquals' : {\r\n\t\t\t\t\t\t'sentAs' : 'KeyPrefixEquals',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'Redirect' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'Redirect',\r\n\t\t\t\t'parameters' : {\r\n\t\t\t\t\t'HostName' : {\r\n\t\t\t\t\t\t'sentAs' : 'HostName',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'HttpRedirectCode' : {\r\n\t\t\t\t\t\t'sentAs' : 'HttpRedirectCode',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'Protocol' : {\r\n\t\t\t\t\t\t'sentAs' : 'Protocol',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'ReplaceKeyPrefixWith' : {\r\n\t\t\t\t\t\t'sentAs' : 'ReplaceKeyPrefixWith',\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'ReplaceKeyWith' : {\r\n\t\t\t\t\t\t'sentAs' : 'ReplaceKeyWith',\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n};\r\n\r\nconst indexDocument = {\r\n\t'type' : 'object',\r\n\t'location' : 'xml',\r\n\t'sentAs' : 'IndexDocument',\r\n\t'parameters' : {\r\n\t\t'Suffix' : {\r\n\t\t\t'sentAs' : 'Suffix',\r\n\t\t},\r\n\t}\r\n};\r\n\r\nconst errorDocument = {\r\n\t'type' : 'object',\r\n\t'location' : 'xml',\r\n\t'sentAs' : 'ErrorDocument',\r\n\t'parameters' : {\r\n\t\t'Key' : {\r\n\t\t\t'sentAs' : 'Key',\r\n\t\t},\r\n\t}\r\n};\r\n\r\nconst corsRule = {\r\n\t'required' : true,\r\n\t'type' : 'array',\r\n\t'location' : 'xml',\r\n\t'sentAs' : 'CORSRule',\r\n\t'items' : {\r\n\t\t'type' : 'object',\r\n\t\t'parameters' : {\r\n\t\t\t'ID' : {\r\n\t\t\t\t'sentAs' : 'ID',\r\n\t\t\t},\r\n\t\t\t'AllowedMethod' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'sentAs' : 'AllowedMethod',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'string',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'AllowedOrigin' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'sentAs' : 'AllowedOrigin',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'string',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'AllowedHeader' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'sentAs' : 'AllowedHeader',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'string',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'MaxAgeSeconds' : {\r\n\t\t\t\t'type' : 'number',\r\n\t\t\t\t'sentAs' : 'MaxAgeSeconds',\r\n\t\t\t},\r\n\t\t\t'ExposeHeader' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'sentAs' : 'ExposeHeader',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'string',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n};\r\n\r\nconst functionGraphConfiguration = {\r\n\t'type' : 'array',\r\n\t'location' : 'xml',\r\n\t'sentAs' : 'FunctionGraphConfiguration',\r\n\t'items' : {\r\n\t\t'type' : 'object',\r\n\t\t'location' : 'xml',\r\n\t\t'parameters' : {\r\n\t\t\t'ID' : {\r\n\t\t\t\t'sentAs' : 'Id'\r\n\t\t\t},\r\n\t\t\t'Filter' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'parameters' : {\r\n\t\t\t\t\t'FilterRules' : {\r\n\t\t\t\t\t\t'wrapper' : 'Object',\r\n\t\t\t\t\t\t'type' : 'array',\r\n\t\t\t\t\t\t'sentAs' : 'FilterRule',\r\n\t\t\t\t\t\t'items' : {\r\n\t\t\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t\t\t'Name' : {},\r\n\t\t\t\t\t\t\t\t'Value' : {}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'FunctionGraph' : {},\r\n\t\r\n\t\t\t'Event' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'adapter',\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\t\r\n};\r\n\r\nconst topicConfiguration = {\r\n\t'type' : 'array',\r\n\t'location' : 'xml',\r\n\t'sentAs' : 'TopicConfiguration',\r\n\t'items' : {\r\n\t\t'type' : 'object',\r\n\t\t'location' : 'xml',\r\n\t\t'parameters' : {\r\n\t\t\t'ID' : {\r\n\t\t\t\t'sentAs' : 'Id'\r\n\t\t\t},\r\n\t\t\t'Filter' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'parameters' : {\r\n\t\t\t\t\t'FilterRules' : {\r\n\t\t\t\t\t\t'wrapper' : 'Object',\r\n\t\t\t\t\t\t'type' : 'array',\r\n\t\t\t\t\t\t'sentAs' : 'FilterRule',\r\n\t\t\t\t\t\t'items' : {\r\n\t\t\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t\t\t'Name' : {},\r\n\t\t\t\t\t\t\t\t'Value' : {}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t'Topic' : {},\r\n\t\r\n\t\t\t'Event' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'adapter',\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst tagSet = {\r\n\t'required' : true,\r\n\t'type' : 'array',\r\n\t'location' : 'xml',\r\n\t'wrapper' : 'TagSet',\r\n\t'sentAs' : 'Tag',\r\n\t'items' : {\r\n\t\t'type' : 'object',\r\n\t\t'parameters' : {\r\n\t\t\t'Key' : {\r\n\t\t\t\t'sentAs' : 'Key',\r\n\t\t\t},\r\n\t\t\t'Value' : {\r\n\t\t\t\t'sentAs' : 'Value',\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst replicationRules = {\r\n\t'required' : true,\r\n\t'type' : 'array',\r\n\t'location' : 'xml',\r\n\t'sentAs' : 'Rule',\r\n\t'items' : {\r\n\t\t'type' : 'object',\r\n\t\t'parameters' : {\r\n\t\t\t'ID' : {\r\n\t\t\t\t'sentAs' : 'ID',\r\n\t\t\t},\r\n\t\t\t'Prefix' : {\r\n\t\t\t\t'sentAs' : 'Prefix',\r\n\t\t\t},\r\n\t\t\t'Status' : {\r\n\t\t\t\t'sentAs' : 'Status',\r\n\t\t\t},\r\n\t\t\t'Destination' :{\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'Destination',\r\n\t\t\t\t'parameters' :{\r\n\t\t\t\t\t'Bucket' : {\r\n\t\t\t\t\t\t'sentAs' : 'Bucket',\r\n\t\t\t\t\t\t'type' : 'adapter'\r\n\t\t\t\t\t},\r\n\t\t\t\t\t'StorageClass' :{\r\n\t\t\t\t\t\t'sentAs' : 'StorageClass',\r\n\t\t\t\t\t\t'type' : 'adapter'\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t}\r\n};\r\n\r\nconst bucketEncryptionRule = {\r\n\t'type': 'object',\r\n\t'location': 'xml',\r\n\t'sentAs': 'Rule',\r\n\t'parameters': {\r\n\t\t'ApplyServerSideEncryptionByDefault': {\r\n\t\t\t'type': 'object',\r\n\t\t\t'sentAs': 'ApplyServerSideEncryptionByDefault',\r\n\t\t\t'parameters': {\r\n\t\t\t\t'SSEAlgorithm': {\r\n\t\t\t\t\t'sentAs': 'SSEAlgorithm'\r\n\t\t\t\t},\r\n\t\t\t\t'KMSMasterKeyID': {\r\n\t\t\t\t\t'sentAs': 'KMSMasterKeyID'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n};\r\n\r\nconst operations = {\r\n\t'CreateBucket' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'CreateBucketConfiguration',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'ACL' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'acl',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'StorageClass' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'storage-class',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'Location' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Location' \r\n\t\t\t},\r\n\t\t\t'GrantRead' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-read',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t'GrantWrite' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-write',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t'GrantReadAcp' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-read-acp',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t'GrantWriteAcp' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-write-acp',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t'GrantFullControl' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-full-control',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t'GrantReadDelivered' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-read-delivered',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t'GrantFullControlDelivered' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-full-control-delivered',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\r\n\t\t\t'AzRedundancy': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'x-obs-az-redundancy'\r\n\t\t\t},\r\n\t\t\t'MultiEnterprise': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'epid',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t},\r\n\t\t\t'FileInterface':{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'fs-file-interface',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\t\r\n\t'ListBuckets' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'parameters' : {\r\n\t\t\t'BucketType': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'bucket-type',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t'ListBucketsOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'ListAllMyBucketsResult',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Owner' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Owner',\r\n\t\t\t\t'parameters' : {\r\n\t\t\t\t\t'ID' : {\r\n\t\t\t\t\t\t'sentAs' : 'ID',\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\r\n\t\t\t},\r\n\t\t\t'Buckets' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'wrapper' : 'Buckets',\r\n\t\t\t\t'sentAs' : 'Bucket',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t'BucketName' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Name',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'CreationDate' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'CreationDate'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Location' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Location'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t\r\n\t'HeadBucket' : {\r\n\t\t'httpMethod' : 'HEAD',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t\r\n\t'HeadApiVersion' : {\r\n\t\t'httpMethod' : 'HEAD',\r\n\t\t'urlPath' : 'apiversion',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t\r\n\t'HeadApiVersionOutput' : {\r\n\t\t'parameters' : {\r\n\t\t\t'ApiVersion' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-api'\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t'GetBucketMetadata' : {\r\n\t\t'httpMethod' : 'HEAD',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\r\n\t\t\t'Origin' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Origin'\r\n\t\t\t},\r\n\r\n\t\t\t'RequestHeader' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Access-Control-Request-Headers'\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t'GetBucketMetadataOutput' : {\r\n\t\t'parameters' : {\r\n\t\t\t'StorageClass' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'storage-class',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'StorageClassObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-storage-class',\r\n\t\t\t},\r\n\t\t\t'StorageClassV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-default-storage-class',\r\n\t\t\t},\r\n\t\t\t'ObsVersion' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'version',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'ObsVersionObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-version',\r\n\t\t\t},\r\n\t\t\t'ObsVersionV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-version',\r\n\t\t\t},\r\n\t\t\t'FsInterface': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'fs-file-interface',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t},\r\n\t\t\t'FsInterfaceObs': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'x-obs-fs-file-interface',\r\n\t\t\t},\r\n\t\t\t'FsInterfaceV2': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'x-amz-fs-file-interface',\r\n\t\t\t},\r\n\t\t\t'Location' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'bucket-location',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'LocationObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-bucket-location',\r\n\t\t\t},\r\n\t\t\t'LocationV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-bucket-region',\r\n\t\t\t},\r\n\t\t\t'AzRedundancy': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'x-obs-az-redundancy'\r\n\t\t\t},\r\n\t\t\t'AllowOrigin' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-origin'\r\n\t\t\t},\r\n\t\t\t'MaxAgeSeconds' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-max-age'\r\n\t\t\t},\r\n\t\t\t'ExposeHeader' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-expose-headers'\r\n\t\t\t},\r\n\t\t\t'AllowMethod' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-methods'\r\n\t\t\t},\r\n\t\t\t'AllowHeader' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-headers'\r\n\t\t\t},\r\n\t\t\t'MultiEnterprise': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'epid',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'MultiEnterpriseObs': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'x-obs-epid',\r\n\t\t\t},\r\n\t\t\t'MultiEnterpriseV2': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'x-amz-epid',\r\n\t\t\t},\r\n\t\t\t'ErrorCode': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'x-obs-error-code'\r\n\t\t\t},\r\n\t\t\t'ErrorMessage': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'x-obs-error-message'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t'DeleteBucket' : {\r\n\t\t'httpMethod' : 'DELETE',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t'ListObjects' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Prefix' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'prefix',\r\n\t\t\t},\r\n\t\t\t'Marker' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'marker',\r\n\t\t\t},\r\n\t\t\t'MaxKeys' : {\r\n\t\t\t\t'type' : 'number',\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'max-keys',\r\n\t\t\t},\r\n\t\t\t'Delimiter' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'delimiter',\r\n\t\t\t},\r\n\t\t\t'AccessKeyId': {\r\n\t\t\t\t'location': 'urlPath',\r\n\t\t\t\t'sentAs': 'AccessKeyId'\r\n\t\t\t},\r\n\t\t\t'Signature': {\r\n\t\t\t\t'location': 'urlPath',\r\n\t\t\t\t'sentAs': 'Signature'\r\n\t\t\t},\r\n\t\t\t'Policy': {\r\n\t\t\t\t'location': 'urlPath',\r\n\t\t\t\t'sentAs': 'Policy'\r\n\t\t\t},\r\n\t\t\t'SecurityToken': {\r\n\t\t\t\t'location': 'urlPath',\r\n\t\t\t\t'sentAs': 'x-obs-security-token'\r\n\t\t\t},\r\n\t\t\t'FsClient': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'x-hws-fs-client'\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t'ListObjectsOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'ListBucketResult',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Location' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'bucket-location',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'LocationObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-bucket-location',\r\n\t\t\t},\r\n\t\t\t'LocationV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-bucket-region',\r\n\t\t\t},\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Name',\r\n\t\t\t},\r\n\t\t\t'Delimiter' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Delimiter',\r\n\t\t\t},\r\n\t\t\t'IsTruncated' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'IsTruncated',\r\n\t\t\t},\r\n\t\t\t'Prefix' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Prefix',\r\n\t\t\t},\r\n\t\t\t'Marker' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Marker',\r\n\t\t\t},\r\n\t\t\t'NextMarker' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'NextMarker',\r\n\t\t\t},\r\n\t\t\t'MaxKeys' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'MaxKeys',\r\n\t\t\t},\r\n\t\t\t'Contents' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Contents',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t'Key' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Key',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'LastModified' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'LastModified',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'ETag' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'ETag',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Size' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Size',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Type' :{\r\n\t\t\t\t\t\t\t'sentAs' : 'Type'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'StorageClass' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'StorageClass',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Owner' : owner\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\r\n\t\t\t},\r\n\t\t\t'CommonPrefixes' : commonPrefixes\r\n\t\t},\r\n\t},\r\n\r\n\t'ListVersions' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'versions',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Prefix' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'prefix',\r\n\t\t\t},\r\n\t\t\t'KeyMarker' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'key-marker',\r\n\t\t\t},\r\n\t\t\t'MaxKeys' : {\r\n\t\t\t\t'type' : 'number',\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'max-keys',\r\n\t\t\t},\r\n\t\t\t'Delimiter' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'delimiter',\r\n\t\t\t},\r\n\t\t\t'VersionIdMarker' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'version-id-marker',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'ListVersionsOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'ListVersionsResult',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Location' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'bucket-location',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'LocationObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-bucket-location',\r\n\t\t\t},\r\n\t\t\t'LocationV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-bucket-region',\r\n\t\t\t},\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Name',\r\n\t\t\t},\r\n\t\t\t'Prefix' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Prefix',\r\n\t\t\t},\r\n\t\t\t'Delimiter' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Delimiter',\r\n\t\t\t},\r\n\t\t\t'KeyMarker' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'KeyMarker',\r\n\t\t\t},\r\n\t\t\t'VersionIdMarker' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'VersionIdMarker',\r\n\t\t\t},\r\n\t\t\t'NextKeyMarker' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'NextKeyMarker',\r\n\t\t\t},\r\n\t\t\t'NextVersionIdMarker' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'NextVersionIdMarker',\r\n\t\t\t},\r\n\t\t\t'MaxKeys' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'MaxKeys',\r\n\t\t\t},\r\n\t\t\t'IsTruncated' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'IsTruncated',\r\n\t\t\t},\r\n\t\t\t'Versions' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Version',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t'Key' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Key',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'VersionId' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'VersionId',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'IsLatest' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'IsLatest',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'LastModified' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'LastModified',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'ETag' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'ETag',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Size' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Size',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Type' :{\r\n\t\t\t\t\t\t\t'sentAs' : 'Type'\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Owner' : owner,\r\n\t\t\t\t\t\t'StorageClass' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'StorageClass',\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'DeleteMarkers' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'DeleteMarker',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t'Key' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Key',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'VersionId' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'VersionId',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'IsLatest' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'IsLatest',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'LastModified' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'LastModified',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Owner' : owner\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'CommonPrefixes' : commonPrefixes\r\n\t\t},\r\n\t},\r\n\r\n\t'GetBucketLocation' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'location',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t\r\n\t'GetBucketLocationOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml'\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Location' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Location'\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t'GetBucketStorageInfo' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'storageinfo',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'GetBucketStorageInfoOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'GetBucketStorageInfoResult',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Size' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Size',\r\n\t\t\t},\r\n\t\t\t'ObjectNumber' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'ObjectNumber',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t'SetBucketQuota' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'quota',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'Quota',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'StorageQuota' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'StorageQuota',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t'GetBucketQuota' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'quota',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\r\n\t\t},\r\n\t},\r\n\t'GetBucketQuotaOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'Quota',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'StorageQuota' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'StorageQuota',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t\r\n\t'SetBucketAcl' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'acl',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'AccessControlPolicy',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'ACL' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'acl',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'Owner' : owner,\r\n\t\t\t'Grants' : grants\r\n\t\t},\r\n\t},\r\n\t\r\n\t'GetBucketAcl' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'acl',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'GetBucketAclOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'AccessControlPolicy',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Owner' : owner,\r\n\t\t\t'Grants' : grants,\r\n\t\t\t'GrantsV2': grantsV2,\r\n\t\t}\r\n\t},\r\n\t\r\n\t'SetBucketLoggingConfiguration' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'logging',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'BucketLoggingStatus',\r\n\t\t\t'xmlAllowEmpty' : true\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Agency' :{\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Agency',\r\n\t\t\t},\r\n\t\t\t'LoggingEnabled' : loggingEnabled,\r\n\t\t},\r\n\t},\r\n\r\n\t'GetBucketLoggingConfiguration' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'logging',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'GetBucketLoggingConfigurationOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'BucketLoggingStatus',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Agency' :{\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Agency'\r\n\t\t\t},\r\n\t\t\t'LoggingEnabled' : loggingEnabled,\r\n\t\t},\r\n\t},\r\n\r\n\t'SetBucketPolicy' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'policy',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Policy' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'body',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t\r\n\t'GetBucketPolicy' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'policy',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'GetBucketPolicyOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'body',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Policy' : {\r\n\t\t\t\t'location' : 'body',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'DeleteBucketPolicy' : {\r\n\t\t'httpMethod' : 'DELETE',\r\n\t\t'urlPath' : 'policy',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t'SetBucketLifecycleConfiguration' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'lifecycle',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'LifecycleConfiguration',\r\n\t\t\t'md5' : true\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Rules' : rules\r\n\t\t},\r\n\t},\r\n\r\n\t'GetBucketLifecycleConfiguration' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'lifecycle',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'GetBucketLifecycleConfigurationOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'LifecycleConfiguration',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Rules' : rules\r\n\t\t},\r\n\t},\r\n\t\r\n\t'DeleteBucketLifecycleConfiguration' : {\r\n\t\t'httpMethod' : 'DELETE',\r\n\t\t'urlPath' : 'lifecycle',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t'SetBucketWebsiteConfiguration' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'website',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'WebsiteConfiguration',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'RedirectAllRequestsTo' : redirectAllRequestsTo,\r\n\t\t\t'IndexDocument' : indexDocument,\r\n\t\t\t'ErrorDocument' : errorDocument,\r\n\t\t\t'RoutingRules' : routingRules\r\n\t\t},\r\n\t},\r\n\t\r\n\t'GetBucketWebsiteConfiguration' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'website',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'GetBucketWebsiteConfigurationOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'WebsiteConfiguration',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'RedirectAllRequestsTo' : redirectAllRequestsTo,\r\n\t\t\t'IndexDocument' : indexDocument,\r\n\t\t\t'ErrorDocument' : errorDocument,\r\n\t\t\t'RoutingRules' : routingRules,\r\n\t\t},\r\n\t},\r\n\t'DeleteBucketWebsiteConfiguration' : {\r\n\t\t'httpMethod' : 'DELETE',\r\n\t\t'urlPath' : 'website',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t'SetBucketVersioningConfiguration' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'versioning',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'VersioningConfiguration',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'VersionStatus' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Status',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t\r\n\t'GetBucketVersioningConfiguration' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'versioning',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'GetBucketVersioningConfigurationOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'VersioningConfiguration',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'VersionStatus' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Status',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t'SetBucketCors' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'cors',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'CORSConfiguration',\r\n\t\t\t'md5' : true\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'CorsRules' : corsRule\r\n\t\t},\r\n\t},\r\n\t'GetBucketCors' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'cors',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'GetBucketCorsOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'CORSConfiguration',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'CorsRules' : corsRule\r\n\t\t},\r\n\t},\r\n\t'DeleteBucketCors' : {\r\n\t\t'httpMethod' : 'DELETE',\r\n\t\t'urlPath' : 'cors',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t'SetBucketNotification' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'notification',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'NotificationConfiguration',\r\n\t\t\t'xmlAllowEmpty' : true\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri'\r\n\t\t\t},\r\n\t\t\t'TopicConfigurations' : topicConfiguration,\r\n\t\t\t'FunctionGraphConfigurations' : functionGraphConfiguration,\r\n\t\t}\r\n\t},\r\n\r\n\r\n\t'GetBucketNotification' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'notification',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\r\n\t'GetBucketNotificationOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'NotificationConfiguration',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'TopicConfigurations' : topicConfiguration,\r\n\t\t\t'FunctionGraphConfigurations' : functionGraphConfiguration,\r\n\t\t},\r\n\t},\r\n\r\n\t'OptionsBucket' : {\r\n\t\t'httpMethod' : 'OPTIONS',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Origin' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Origin',\r\n\t\t\t},\r\n\t\t\t'AccessControlRequestMethods' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Access-Control-Request-Method',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'string',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'AccessControlRequestHeaders' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Access-Control-Request-Headers',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'string',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'OptionsBucketOutput' : {\r\n\t\t'parameters' : {\r\n\t\t\t'AllowOrigin' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-origin',\r\n\t\t\t},\r\n\t\t\t'AllowHeader' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-headers',\r\n\t\t\t},\r\n\t\t\t'AllowMethod' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-methods',\r\n\t\t\t},\r\n\t\t\t'ExposeHeader' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-expose-headers',\r\n\t\t\t},\r\n\t\t\t'MaxAgeSeconds' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-max-age',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t'SetBucketTagging' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'tagging',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'Tagging',\r\n\t\t\t'md5' : true\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri'\r\n\t\t\t},\r\n\t\t\t'Tags' : tagSet\r\n\t\t}\r\n\t},\r\n\r\n\t'GetBucketTagging' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'tagging',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\r\n\t'GetBucketTaggingOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'Tagging',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Tags' : tagSet\r\n\t\t}\r\n\t},\r\n\r\n\t'DeleteBucketTagging' : {\r\n\t\t'httpMethod' : 'DELETE',\r\n\t\t'urlPath' : 'tagging',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\r\n\t'SetBucketStoragePolicy' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'storageClass',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'StorageClass' :{\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'type' : 'adapter',\r\n\t\t\t\t'sentAs' : 'StorageClass'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t'GetBucketStoragePolicy' :{\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'storageClass',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\t\r\n\t'GetBucketStoragePolicyOutput' :{\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'StorageClass' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'type' : 'string',\r\n\t\t\t\t'sentAs' : 'StorageClass'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t'SetBucketReplication' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'replication',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'ReplicationConfiguration',\r\n\t\t\t'md5' : true\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri'\r\n\t\t\t},\r\n\t\t\t'Agency' :{\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Agency'\r\n\t\t\t},\r\n\t\t\t'Rules' : replicationRules\r\n\t\t}\r\n\t},\r\n\r\n\t'GetBucketReplication' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'replication',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\r\n\t'GetBucketReplicationOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'ReplicationConfiguration',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Agency' :{\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Agency'\r\n\t\t\t},\r\n\t\t\t'Rules' : replicationRules\r\n\t\t}\r\n\t},\r\n\r\n\t'DeleteBucketReplication' : {\r\n\t\t'httpMethod' : 'DELETE',\r\n\t\t'urlPath' : 'replication',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t}\r\n\t},\r\n\r\n\t'GetBucketRequesterPayment': {\r\n\t\t'httpMethod': 'GET',\r\n\t\t'urlPath': 'requestPayment',\r\n\t\t'parameters': {\r\n\t\t\t'Bucket': {\r\n\t\t\t\t'required': true,\r\n\t\t\t\t'location': 'uri'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'GetBucketRequesterPaymentOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'RequestPaymentConfiguration'\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Payer' : {\r\n\t\t\t\t'location': 'xml',\r\n\t\t\t\t'sentAs': 'Payer',\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'SetBucketRequesterPayment': {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath': 'requestPayment',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'RequestPaymentConfiguration'\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri'\r\n\t\t\t},\r\n\t\t\t'Payer' : {\r\n\t\t\t\t'location': 'xml',\r\n\t\t\t\t'sentAs': 'Payer'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'SetBucketRequesterPaymentOutput': {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'RequestPaymentConfiguration'\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Payer' : {\r\n\t\t\t\t'location': 'xml',\r\n\t\t\t\t'sentAs': 'Payer',\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t\r\n\t'PutObject' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'ContentMD5' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-MD5',\r\n\t\t\t},\r\n\t\t\t'ContentType' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Type'\r\n\t\t\t},\r\n\t\t\t'Offset' : {\r\n\t\t\t\t'type' : 'plain'\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t'ProgressCallback' :{\r\n\t\t\t\t'type' : 'plain'\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t'ContentLength' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Length',\r\n\t\t\t\t'type' : 'plain'\r\n\t\t\t},\r\n\t\t\t'ACL' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'acl',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter',\r\n\t\t\t},\r\n\t\t\t'GrantRead' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-read',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantReadAcp' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-read-acp',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantWriteAcp' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-write-acp',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantFullControl' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-full-control',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'StorageClass' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'storage-class',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter',\r\n\t\t\t},\r\n\t\t\t'Metadata' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'meta-',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'WebsiteRedirectLocation' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'website-redirect-location',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'Expires' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'expires',\r\n\t\t\t\t'type' : 'number',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SuccessActionRedirect':{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'success-action-redirect'\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseCKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key',\r\n\t\t\t\t'type' : 'password',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'Body' : {\r\n\t\t\t\t'location' : 'body',\r\n\t\t\t},\r\n\t\t\t'SourceFile' : {\r\n\t\t\t\t'type' : 'srcFile',\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'PutObjectOutput' : {\r\n\t\t'parameters' : {\r\n\t\t\t'ETag' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'etag',\r\n\t\t\t},\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'version-id',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'VersionIdObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-version-id',\r\n\t\t\t},\r\n\t\t\t'VersionIdV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-version-id',\r\n\t\t\t},\r\n\t\t\t'StorageClass' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'storage-class',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'StorageClassObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-storage-class',\r\n\t\t\t},\r\n\t\t\t'StorageClassV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-storage-class',\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseKmsObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption',\r\n\t\t\t},\r\n\t\t\t'SseKmsV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption',\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseKmsKeyObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-kms-key-id',\r\n\t\t\t},\r\n\t\t\t'SseKmsKeyV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-kms-key-id',\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseCObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-customer-algorithm',\r\n\t\t\t},\r\n\t\t\t'SseCV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-customer-algorithm',\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key-MD5',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5Obs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-customer-key-MD5',\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5V2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-customer-key-MD5',\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t'RenameObject': {\r\n\t\t'httpMethod': 'POST',\r\n\t\t'urlPath': 'rename',\r\n\t\t'parameters': {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Name': {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'name',\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t'ModifyObject': {\r\n\t\t'httpMethod': 'PUT',\r\n\t\t'urlPath': 'modify',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Position' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'position',\r\n\t\t\t\t'type' : 'number'\r\n\t\t\t},\r\n\t\t\t'ContentMD5' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-MD5',\r\n\t\t\t},\r\n\t\t\t'ContentType' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Type'\r\n\t\t\t},\r\n\t\t\t'Offset' : {\r\n\t\t\t\t'type' : 'plain'\r\n\t\t\t},\r\n\r\n\t\t\t'ProgressCallback' :{\r\n\t\t\t\t'type' : 'plain'\r\n\t\t\t},\r\n\r\n\t\t\t'ContentLength' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Length',\r\n\t\t\t\t'type' : 'plain'\r\n\t\t\t},\r\n\t\t\t'ACL' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'acl',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter',\r\n\t\t\t},\r\n\t\t\t'GrantRead' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-read',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantReadAcp' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-read-acp',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantWriteAcp' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-write-acp',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantFullControl' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-full-control',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'StorageClass' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'storage-class',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter',\r\n\t\t\t},\r\n\t\t\t'Metadata' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'meta-',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'WebsiteRedirectLocation' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'website-redirect-location',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'Expires' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'expires',\r\n\t\t\t\t'type' : 'number',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseCKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key',\r\n\t\t\t\t'type' : 'password',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'Body' : {\r\n\t\t\t\t'location' : 'body',\r\n\t\t\t},\r\n\t\t\t'SourceFile' : {\r\n\t\t\t\t'type' : 'srcFile',\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t'ModifyObjectOutput': {\r\n\t\t'parameters' : {\r\n\t\t\t'ETag' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'etag',\r\n\t\t\t},\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'version-id',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'VersionIdObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-version-id',\r\n\t\t\t},\r\n\t\t\t'VersionIdV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-version-id',\r\n\t\t\t},\r\n\t\t\t'StorageClass' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'storage-class',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'StorageClassObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-storage-class',\r\n\t\t\t},\r\n\t\t\t'StorageClassV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-storage-class',\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseKmsObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption',\r\n\t\t\t},\r\n\t\t\t'SseKmsV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption',\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseKmsKeyObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-kms-key-id',\r\n\t\t\t},\r\n\t\t\t'SseKmsKeyV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-kms-key-id',\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseCObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-customer-algorithm',\r\n\t\t\t},\r\n\t\t\t'SseCV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-customer-algorithm',\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key-MD5',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5Obs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-customer-key-MD5',\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5V2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-customer-key-MD5',\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t'AppendObject' : {\r\n\t\t'httpMethod' : 'POST',\r\n\t\t'urlPath' : 'append',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Position' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'position',\r\n\t\t\t\t'type' : 'number'\r\n\t\t\t},\r\n\t\t\t'ContentMD5' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-MD5',\r\n\t\t\t},\r\n\t\t\t'ContentType' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Type'\r\n\t\t\t},\r\n\t\t\t'Offset' : {\r\n\t\t\t\t'type' : 'plain'\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t'ProgressCallback' :{\r\n\t\t\t\t'type' : 'plain'\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t'ContentLength' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Length',\r\n\t\t\t\t'type' : 'plain'\r\n\t\t\t},\r\n\t\t\t'ACL' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'acl',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter',\r\n\t\t\t},\r\n\t\t\t'GrantRead' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-read',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantReadAcp' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-read-acp',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantWriteAcp' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-write-acp',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantFullControl' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-full-control',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'StorageClass' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'storage-class',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter',\r\n\t\t\t},\r\n\t\t\t'Metadata' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'meta-',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'WebsiteRedirectLocation' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'website-redirect-location',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'Expires' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'expires',\r\n\t\t\t\t'type' : 'number',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseCKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key',\r\n\t\t\t\t'type' : 'password',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'Body' : {\r\n\t\t\t\t'location' : 'body',\r\n\t\t\t},\r\n\t\t\t'SourceFile' : {\r\n\t\t\t\t'type' : 'srcFile',\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'AppendObjectOutput' : {\r\n\t\t'parameters' : {\r\n\t\t\t'ETag' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'etag',\r\n\t\t\t},\r\n\t\t\t'NextPosition' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'next-append-position',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'NextPositionObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-next-append-position',\r\n\t\t\t},\r\n\t\t\t'NextPositionV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-next-append-position',\r\n\t\t\t},\r\n\t\t\t'StorageClass' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'storage-class',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'StorageClassObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-storage-class',\r\n\t\t\t\t'type' : 'adapter',\r\n\t\t\t},\r\n\t\t\t'StorageClassV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-storage-class',\r\n\t\t\t\t'type' : 'adapter',\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseKmsObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption',\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'SseKmsV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption',\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseKmsKeyObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-kms-key-id',\r\n\t\t\t},\r\n\t\t\t'SseKmsKeyV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-kms-key-id',\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseCObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-customer-algorithm',\r\n\t\t\t},\r\n\t\t\t'SseCV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-customer-algorithm',\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key-MD5',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5Obs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-customer-key-MD5',\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5V2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-customer-key-MD5',\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t\r\n\t'GetObject' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'AccessKeyId': {\r\n\t\t\t\t'location': 'urlPath',\r\n\t\t\t},\r\n\t\t\t'Signature': {\r\n\t\t\t\t'location': 'urlPath'\r\n\t\t\t},\r\n\t\t\t'Policy': {\r\n\t\t\t\t'location': 'urlPath'\r\n\t\t\t},\r\n\t\t\t'SecurityToken': {\r\n\t\t\t\t'location': 'urlPath',\r\n\t\t\t\t'sentAs': 'x-obs-security-token'\r\n\t\t\t},\r\n\t\t\t'ResponseCacheControl' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'response-cache-control',\r\n\t\t\t},\r\n\t\t\t'ResponseContentDisposition' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'response-content-disposition',\r\n\t\t\t},\r\n\t\t\t'ResponseContentEncoding' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'response-content-encoding',\r\n\t\t\t},\r\n\t\t\t'ResponseContentLanguage' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'response-content-language',\r\n\t\t\t},\r\n\t\t\t'ResponseContentType' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'response-content-type',\r\n\t\t\t},\r\n\t\t\t'ResponseExpires' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'response-expires',\r\n\t\t\t},\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'versionId',\r\n\t\t\t},\r\n\t\t\t'ImageProcess' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'x-image-process',\r\n\t\t\t},\r\n\t\t\t'IfMatch' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'If-Match',\r\n\t\t\t},\r\n\t\t\t'IfModifiedSince' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'If-Modified-Since',\r\n\t\t\t},\r\n\t\t\t'IfNoneMatch' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'If-None-Match',\r\n\t\t\t},\r\n\t\t\t'IfUnmodifiedSince' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'If-Unmodified-Since',\r\n\t\t\t},\r\n\t\t\t'Range' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Range',\r\n\t\t\t},\r\n\t\t\t'Origin' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Origin'\r\n\t\t\t},\r\n\t\t\t'RequestHeader' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Access-Control-Request-Headers'\r\n\t\t\t},\r\n\t\t\t'SaveAsFile' : {\r\n\t\t\t\t'type' : 'dstFile',\r\n\t\t\t},\r\n\t\t\t'SaveAsStream' : {\r\n\t\t\t\t'type' : 'plain'\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key',\r\n\t\t\t\t'type' : 'password',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'GetObjectOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'body'\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Content' : {\r\n\t\t\t\t'location' : 'body',\r\n\t\t\t},\r\n\t\t\t'Expiration' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'expiration',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'ExpirationObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-expiration',\r\n\t\t\t},\r\n\t\t\t'ExpirationV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-expiration',\r\n\t\t\t},\r\n\t\t\t'ETag' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'etag',\r\n\t\t\t},\r\n\t\t\t'CacheControl' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Cache-Control',\r\n\t\t\t},\r\n\t\t\t'ContentDisposition' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Disposition',\r\n\t\t\t},\r\n\t\t\t'ContentEncoding' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Encoding',\r\n\t\t\t},\r\n\t\t\t'ContentLanguage' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Language',\r\n\t\t\t},\r\n\t\t\t'ContentType' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Type',\r\n\t\t\t},\r\n\t\t\t'Expires' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Expires',\r\n\t\t\t},\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'version-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'VersionIdObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-version-id',\r\n\t\t\t},\r\n\t\t\t'VersionIdV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-version-id',\r\n\t\t\t},\r\n\t\t\t'ContentLength' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Length',\r\n\t\t\t},\r\n\t\t\t'DeleteMarker' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'delete-marker',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'DeleteMarkerObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-delete-marker',\r\n\t\t\t},\r\n\t\t\t'DeleteMarkerV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-delete-marker',\r\n\t\t\t},\r\n\t\t\t'LastModified' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Last-Modified',\r\n\t\t\t},\r\n\t\t\t'WebsiteRedirectLocation' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'website-redirect-location',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'WebsiteRedirectLocationObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-website-redirect-location',\r\n\t\t\t},\r\n\t\t\t'WebsiteRedirectLocationV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-website-redirect-location',\r\n\t\t\t},\r\n\t\t\t'StorageClass' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'storage-class',\r\n\t\t\t\t'withPrefix' : true\t\r\n\t\t\t},\r\n\t\t\t'StorageClassObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-storage-class',\r\n\t\t\t},\r\n\t\t\t'StorageClassV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-storage-class',\r\n\t\t\t},\r\n\t\t\t'Restore' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'restore',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'RestoreObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-restore',\r\n\t\t\t},\r\n\t\t\t'RestoreV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-restore',\r\n\t\t\t},\r\n\t\t\t'AllowOrigin' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-origin'\r\n\t\t\t},\r\n\t\t\t'MaxAgeSeconds' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-max-age'\r\n\t\t\t},\r\n\t\t\t'ExposeHeader' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-expose-headers'\r\n\t\t\t},\r\n\t\t\t'AllowMethod' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-methods'\r\n\t\t\t},\r\n\t\t\t'AllowHeader' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-headers'\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseKmsObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption',\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'SseKmsV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption',\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseKmsKeyObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-kms-key-id',\r\n\t\t\t},\r\n\t\t\t'SseKmsKeyV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-kms-key-id',\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-customer-algorithm',\r\n\t\t\t},\r\n\t\t\t'SseCV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-customer-algorithm',\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key-MD5',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5Obs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-customer-key-MD5',\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5V2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-customer-key-MD5',\r\n\t\t\t},\r\n\t\t\t'Metadata' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'meta-',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'MetadataObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'x-obs-meta-',\r\n\t\t\t},\r\n\t\t\t'MetadataV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'x-amz-meta-',\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'CopyObject' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'ACL' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'acl',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter',\r\n\t\t\t},\r\n\t\t\t'GrantRead' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-read',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantReadAcp' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-read-acp',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantWriteAcp' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-write-acp',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantFullControl' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-full-control',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'StorageClass' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'storage-class',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter',\r\n\t\t\t},\r\n\t\t\t'CopySource' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'copy-source',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'skipEncoding' : true\r\n\t\t\t},\r\n\t\t\t'CopySourceIfMatch' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'copy-source-if-match',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'CopySourceIfModifiedSince' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'copy-source-if-modified-since',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'CopySourceIfNoneMatch' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'copy-source-if-none-match',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'CopySourceIfUnmodifiedSince' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'copy-source-if-unmodified-since',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'ContentType' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Type'\r\n\t\t\t},\r\n\t\t\t'ContentEncoding' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'content-encoding'\r\n\t\t\t},\r\n\t\t\t'ContentLanguage' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'content-language'\r\n\t\t\t},\r\n\t\t\t'ContentDisposition' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'content-disposition'\r\n\t\t\t},\r\n\t\t\t'CacheControl' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'cache-control'\r\n\t\t\t},\r\n\t\t\t'Expires' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'expires'\r\n\t\t\t},\r\n\t\t\t'Metadata' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'meta-',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'MetadataDirective' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'metadata-directive',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'WebsiteRedirectLocation' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'website-redirect-location',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SuccessActionRedirect':{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'success-action-redirect'\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key',\r\n\t\t\t\t'type' : 'password',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'CopySourceSseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'copy-source-server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'CopySourceSseCKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'copy-source-server-side-encryption-customer-key',\r\n\t\t\t\t'type' : 'password',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'CopyObjectOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'CopyObjectResult',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'version-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'VersionIdObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-version-id',\r\n\t\t\t},\r\n\t\t\t'VersionIdV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-version-id',\r\n\t\t\t},\r\n\t\t\t'CopySourceVersionId' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'copy-source-version-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'CopySourceVersionIdObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-copy-source-version-id',\r\n\t\t\t},\r\n\t\t\t'CopySourceVersionIdV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-copy-source-version-id',\r\n\t\t\t},\r\n\t\t\t'ETag' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'ETag',\r\n\t\t\t},\r\n\t\t\t'LastModified' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'LastModified',\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseKmsObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption',\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'SseKmsV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption',\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseKmsKeyObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-kms-key-id',\r\n\t\t\t},\r\n\t\t\t'SseKmsKeyV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-kms-key-id',\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-customer-algorithm',\r\n\t\t\t},\r\n\t\t\t'SseCV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-customer-algorithm',\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key-MD5',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5Obs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-customer-key-MD5',\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5V2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-customer-key-MD5',\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t'RestoreObject' : {\r\n\t\t'httpMethod' : 'POST',\r\n\t\t'urlPath' : 'restore',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'RestoreRequest',\r\n\t\t\t'md5' : true\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'versionId',\r\n\t\t\t},\r\n\t\t\t'Days' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Days'\r\n\t\t\t},\r\n\t\t\t'Tier' : {\r\n\t\t\t\t'wrapper' : 'RestoreJob',\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Tier',\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t'GetObjectMetadata' : {\r\n\t\t'httpMethod' : 'HEAD',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'versionId',\r\n\t\t\t},\r\n\t\t\t'Origin' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Origin'\r\n\t\t\t},\r\n\t\t\t'RequestHeader' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Access-Control-Request-Headers'\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key',\r\n\t\t\t\t'type' : 'password',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t\r\n\t'GetObjectMetadataOutput' : {\r\n\t\t'parameters' : {\r\n\t\t\t'Expiration' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'expiration',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'ExpirationObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-expiration',\r\n\t\t\t},\r\n\t\t\t'ExpirationV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-expiration',\r\n\t\t\t},\r\n\t\t\t'LastModified' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Last-Modified',\r\n\t\t\t},\r\n\t\t\t'ContentLength' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Length',\r\n\t\t\t},\r\n\t\t\t'ContentType' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Type'\r\n\t\t\t},\r\n\t\t\t'CacheControl': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'Cache-Control'\r\n\t\t\t},\r\n\t\t\t'ContentDisposition': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'Content-Disposition'\r\n\t\t\t},\r\n\t\t\t'ContentLanguage': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'Content-Language'\r\n\t\t\t},\r\n\t\t\t'ContentEncoding': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'Content-Encoding'\r\n\t\t\t},\r\n\t\t\t'Expires': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'Expires'\r\n\t\t\t},\r\n\t\t\t'ETag' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'etag',\r\n\t\t\t},\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'version-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'VersionIdObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-version-id',\r\n\t\t\t},\r\n\t\t\t'VersionIdV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-version-id',\r\n\t\t\t},\r\n\t\t\t'WebsiteRedirectLocation' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'website-redirect-location',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'WebsiteRedirectLocationObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-website-redirect-location',\r\n\t\t\t},\r\n\t\t\t'WebsiteRedirectLocationV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-website-redirect-location',\r\n\t\t\t},\r\n\t\t\t'StorageClass' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'storage-class',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'StorageClassObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-storage-class',\r\n\t\t\t},\r\n\t\t\t'StorageClassV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-storage-class',\r\n\t\t\t},\r\n\t\t\t'Restore' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'restore',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'RestoreObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-restore',\r\n\t\t\t},\r\n\t\t\t'RestoreV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-restore',\r\n\t\t\t},\r\n\t\t\t'ObjectType' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'object-type',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'ObjectTypeObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-object-type',\r\n\t\t\t},\r\n\t\t\t'ObjectTypeV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-object-type',\r\n\t\t\t},\r\n\t\t\t'NextPosition' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'next-append-position',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'NextPositionObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-next-append-position',\r\n\t\t\t},\r\n\t\t\t'NextPositionV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-next-append-position',\r\n\t\t\t},\r\n\t\t\t'AllowOrigin' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-origin'\r\n\t\t\t},\r\n\t\t\t'MaxAgeSeconds' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-max-age'\r\n\t\t\t},\r\n\t\t\t'ExposeHeader' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-expose-headers'\r\n\t\t\t},\r\n\t\t\t'AllowMethod' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-methods'\r\n\t\t\t},\r\n\t\t\t'AllowHeader' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-headers'\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseKmsObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption',\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'SseKmsV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption',\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCObs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-customer-algorithm',\r\n\t\t\t},\r\n\t\t\t'SseCV2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-customer-algorithm',\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key-MD5',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5Obs' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-server-side-encryption-customer-key-MD5',\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5V2' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-server-side-encryption-customer-key-MD5',\r\n\t\t\t},\r\n\t\t\t'Metadata' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'meta-',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'MetadataObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'x-obs-meta-',\r\n\t\t\t},\r\n\t\t\t'MetadataV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'x-amz-meta-',\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t\r\n    'SetObjectMetadata': {\r\n        'httpMethod': 'PUT',\r\n        'urlPath': 'metadata',\r\n        'parameters': {\r\n            'Bucket': {\r\n                'required': true,\r\n                'location': 'uri'\r\n            },\r\n            'Key': {\r\n                'required': true,\r\n                'location': 'uri'\r\n            },\r\n            'VersionId': {\r\n                'location': 'urlPath',\r\n                'sentAs': 'versionId'\r\n            },\r\n            'Origin': {\r\n                'location': 'header',\r\n                'sentAs': 'Origin'\r\n            },\r\n            'RequestHeader': {\r\n                'location': 'header',\r\n                'sentAs': 'Access-Control-Request-Headers'\r\n            },\r\n            'CacheControl': {\r\n                'location': 'header',\r\n                'sentAs': 'Cache-Control'\r\n            },\r\n            'ContentDisposition': {\r\n                'location': 'header',\r\n                'sentAs': 'Content-Disposition'\r\n            },\r\n            'ContentLanguage': {\r\n                'location': 'header',\r\n                'sentAs': 'Content-Language'\r\n            },\r\n            'ContentEncoding': {\r\n            \t'location': 'header', \r\n            \t'sentAs': 'Content-Encoding'\r\n            },\r\n            'ContentType': {\r\n                'location': 'header',\r\n                'sentAs': 'Content-Type'\r\n            },\r\n            'Expires': {\r\n                'location': 'header',\r\n                'sentAs': 'Expires'\r\n            },\r\n            'Metadata': {\r\n            \t'type' : 'object',\r\n            \t'location': 'header', \r\n            \t'sentAs': 'meta-',\r\n                'withPrefix': true\r\n            },\r\n            'MetadataDirective' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'metadata-directive',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n            'StorageClass': {\r\n                'location': 'header',\r\n                'sentAs': 'storage-class',\r\n                'withPrefix': true,\r\n                'type' : 'adapter',\r\n            },\r\n            'WebsiteRedirectLocation': {\r\n                'location': 'header',\r\n                'sentAs': 'website-redirect-location',\r\n                'withPrefix': true\r\n            },\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n        }\r\n    },\r\n    'SetObjectMetadataOutput': {\r\n        'parameters': {\r\n            'Expires': {\r\n                'location': 'header',\r\n                'sentAs': 'Expires'\r\n            },\r\n\t\t\t'ContentEncoding': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'Content-Encoding'\r\n\t\t\t},\r\n            'ContentType': {\r\n                'location': 'header',\r\n                'sentAs': 'Content-Type'\r\n            },\r\n            'ContentLanguage': {\r\n                'location': 'header',\r\n                'sentAs': 'Content-Language'\r\n            },\r\n            'CacheControl': {\r\n                'location': 'header',\r\n                'sentAs': 'Cache-Control'\r\n            },\r\n            'ContentDisposition': {\r\n                'location': 'header',\r\n                'sentAs': 'Content-Disposition'\r\n            },\r\n            'WebsiteRedirectLocation': {\r\n                'location': 'header',\r\n                'sentAs': 'website-redirect-location',\r\n                'withPrefix': true\r\n            },\r\n\t\t\t'WebsiteRedirectLocationObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-website-redirect-location',\r\n\t\t\t},\r\n\t\t\t'WebsiteRedirectLocationV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-website-redirect-location',\r\n\t\t\t},\r\n            'StorageClass': {\r\n                'location': 'header',\r\n                'sentAs': 'storage-class',\r\n                'withPrefix': true\r\n            },\r\n\t\t\t'StorageClassObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-storage-class',\r\n\t\t\t},\r\n\t\t\t'StorageClassV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-storage-class',\r\n\t\t\t},\r\n            'Metadata': {\r\n                'location': 'header',\r\n                'type': 'object',\r\n                'sentAs': 'meta-',\r\n                'withPrefix': true\r\n            },\r\n\t\t\t'MetadataObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'x-obs-meta-',\r\n\t\t\t},\r\n\t\t\t'MetadataV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'sentAs' : 'x-amz-meta-',\r\n\t\t\t},\r\n\t\t\t'MetadataDirective': {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'metadata-directive',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t}\r\n        }\r\n    },\r\n\r\n\t'SetObjectAcl' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'acl',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'AccessControlPolicy',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'versionId',\r\n\t\t\t},\r\n\t\t\t'ACL' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'acl',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'Delivered' :{\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Delivered'\r\n\t\t\t},\r\n\t\t\t'Owner' : owner,\r\n\t\t\t'Grants' : grants,\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'SetObjectAclOutput' : {\r\n\t\t'parameters' : {\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'version-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'VersionIdObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-version-id',\r\n\t\t\t},\r\n\t\t\t'VersionIdV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-version-id',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'GetObjectAcl' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'acl',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'versionId',\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'GetObjectAclOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'AccessControlPolicy',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'version-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'VersionIdObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-version-id',\r\n\t\t\t},\r\n\t\t\t'VersionIdV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-version-id',\r\n\t\t\t},\r\n\t\t\t'Delivered' :{\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Delivered'\r\n\t\t\t},\r\n\t\t\t'Owner' : owner,\r\n\t\t\t'Grants' : grants\r\n\t\t},\r\n\t},\r\n\t'DeleteObject' : {\r\n\t\t'httpMethod' : 'DELETE',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'versionId',\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'DeleteObjectOutput' : {\r\n\t\t'parameters' : {\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'version-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'VersionIdObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-version-id',\r\n\t\t\t},\r\n\t\t\t'VersionIdV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-version-id',\r\n\t\t\t},\r\n\t\t\t'DeleteMarker' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'delete-marker',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'DeleteMarkerObs' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-obs-delete-marker',\r\n\t\t\t},\r\n\t\t\t'DeleteMarkerV2' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'x-amz-delete-marker',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'DeleteObjects' : {\r\n\t\t'httpMethod' : 'POST',\r\n\t\t'urlPath' : 'delete',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'Delete',\r\n\t\t\t'md5' : true\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Quiet' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Quiet',\r\n\t\t\t},\r\n\t\t\t'Objects' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Object',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t'Key' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Key',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'VersionId' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'VersionId',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'DeleteObjectsOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'DeleteResult',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Deleteds' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Deleted',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t'Key' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Key',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'VersionId' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'VersionId',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'DeleteMarker' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'DeleteMarker',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'DeleteMarkerVersionId' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'DeleteMarkerVersionId',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'Errors' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Error',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t'Key' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Key',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'VersionId' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'VersionId',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Code' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Code',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Message' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Message',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t\r\n\t'InitiateMultipartUpload' : {\r\n\t\t'httpMethod' : 'POST',\r\n\t\t'urlPath' : 'uploads',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'ACL' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'acl',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter',\r\n\t\t\t},\r\n\t\t\t'GrantRead' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-read',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantReadAcp' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-read-acp',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantWriteAcp' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-write-acp',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'GrantFullControl' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'grant-full-control',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t},\r\n\t\t\t'StorageClass' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'storage-class',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter',\r\n\t\t\t},\r\n\t\t\t'Metadata' : {\r\n\t\t\t\t'type' : 'object',\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'meta-',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'WebsiteRedirectLocation' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'website-redirect-location',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'Expires' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'expires',\r\n\t\t\t\t'type' : 'number',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'ContentType' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-Type'\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true,\r\n\t\t\t\t'type' : 'adapter'\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key',\r\n\t\t\t\t'type' : 'password',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'InitiateMultipartUploadOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'InitiateMultipartUploadResult',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Bucket',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Key',\r\n\t\t\t},\r\n\t\t\t'UploadId' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'UploadId',\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key-MD5',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'ListMultipartUploads' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'uploads',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Delimiter' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'delimiter',\r\n\t\t\t},\r\n\t\t\t'KeyMarker' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'key-marker',\r\n\t\t\t},\r\n\t\t\t'MaxUploads' : {\r\n\t\t\t\t'type' : 'number',\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'max-uploads',\r\n\t\t\t},\r\n\t\t\t'Prefix' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'prefix',\r\n\t\t\t},\r\n\t\t\t'UploadIdMarker' : {\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'upload-id-marker',\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'ListMultipartUploadsOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'ListMultipartUploadsResult',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Bucket',\r\n\t\t\t},\r\n\t\t\t'KeyMarker' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'KeyMarker',\r\n\t\t\t},\r\n\t\t\t'UploadIdMarker' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'UploadIdMarker',\r\n\t\t\t},\r\n\t\t\t'NextKeyMarker' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'NextKeyMarker',\r\n\t\t\t},\r\n\t\t\t'Prefix' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Prefix',\r\n\t\t\t},\r\n\t\t\t'Delimiter' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Delimiter',\r\n\t\t\t},\r\n\t\t\t'NextUploadIdMarker' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'NextUploadIdMarker',\r\n\t\t\t},\r\n\t\t\t'MaxUploads' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'MaxUploads',\r\n\t\t\t},\r\n\t\t\t'IsTruncated' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'IsTruncated',\r\n\t\t\t},\r\n\t\t\t'Uploads' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Upload',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t'UploadId' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'UploadId',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Key' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Key',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Initiated' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Initiated',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'StorageClass' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'StorageClass',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Owner' : owner,\r\n\t\t\t\t\t\t'Initiator' : initiator\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'CommonPrefixes' : commonPrefixes\r\n\t\t},\r\n\t},\r\n\t'UploadPart' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'PartNumber' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'type' : 'number',\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'partNumber',\r\n\t\t\t},\r\n\t\t\t'UploadId' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'uploadId',\r\n\t\t\t},\r\n\t\t\t'ContentMD5' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Content-MD5',\r\n\t\t\t},\r\n\t\t\t'Body' : {\r\n\t\t\t\t'location' : 'body',\r\n\t\t\t},\r\n\t\t\t'SourceFile' : {\r\n\t\t\t\t'type' : 'srcFile',\r\n\t\t\t},\r\n\t\t\t'Offset' : {\r\n\t\t\t\t'type' : 'plain'\r\n\t\t\t},\r\n\t\t\t'PartSize' : {\r\n\t\t\t\t'type' : 'plain'\r\n\t\t\t},\r\n\t\t\t'ProgressCallback' :{\r\n\t\t\t\t'type' : 'plain'\r\n\t\t\t},\r\n\t\t\t\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key',\r\n\t\t\t\t'type' : 'password',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'UploadPartOutput' : {\r\n\t\t'parameters' : {\r\n\t\t\t'ETag' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'etag',\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key-MD5',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'ListParts' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'UploadId' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'uploadId',\r\n\t\t\t},\r\n\t\t\t'MaxParts' : {\r\n\t\t\t\t'type' : 'number',\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'max-parts',\r\n\t\t\t},\r\n\t\t\t'PartNumberMarker' : {\r\n\t\t\t\t'type' : 'number',\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'part-number-marker',\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'ListPartsOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'ListPartsResult',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Bucket',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Key',\r\n\t\t\t},\r\n\t\t\t'UploadId' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'UploadId',\r\n\t\t\t},\r\n\t\t\t'PartNumberMarker' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'PartNumberMarker',\r\n\t\t\t},\r\n\t\t\t'NextPartNumberMarker' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'NextPartNumberMarker',\r\n\t\t\t},\r\n\t\t\t'MaxParts' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'MaxParts',\r\n\t\t\t},\r\n\t\t\t'IsTruncated' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'IsTruncated',\r\n\t\t\t},\r\n\t\t\t'StorageClass' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'StorageClass',\r\n\t\t\t},\r\n\t\t\t'Initiator':initiator,\r\n\t\t\t'Owner' : owner,\r\n\t\t\t'Parts' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Part',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t'PartNumber' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'PartNumber',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'LastModified' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'LastModified',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'ETag' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'ETag',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'Size' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'Size',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'CopyPart' : {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'PartNumber' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'partNumber',\r\n\t\t\t\t'type' : 'number',\r\n\t\t\t},\r\n\t\t\t'UploadId' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'uploadId',\r\n\t\t\t},\r\n\t\t\t'CopySource' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'copy-source',\r\n\t\t\t\t'skipEncoding' : true,\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'CopySourceRange' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'copy-source-range',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key',\r\n\t\t\t\t'type' : 'password',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'CopySourceSseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'copy-source-server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'CopySourceSseCKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'copy-source-server-side-encryption-customer-key',\r\n\t\t\t\t'type' : 'password',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'CopyPartOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'CopyPartResult',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'LastModified' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'LastModified',\r\n\t\t\t},\r\n\t\t\t'ETag' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'ETag',\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key-MD5',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'AbortMultipartUpload' : {\r\n\t\t'httpMethod' : 'DELETE',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'UploadId' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'uploadId',\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t\r\n\t'CompleteMultipartUpload' : {\r\n\t\t'httpMethod' : 'POST',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'CompleteMultipartUpload',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'UploadId' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'urlPath',\r\n\t\t\t\t'sentAs' : 'uploadId',\r\n\t\t\t},\r\n\t\t\t'Parts' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Part',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'object',\r\n\t\t\t\t\t'parameters' : {\r\n\t\t\t\t\t\t'PartNumber' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'PartNumber',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t'ETag' : {\r\n\t\t\t\t\t\t\t'sentAs' : 'ETag',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'RequestPayer': {\r\n\t\t\t\t'location': 'header',\r\n\t\t\t\t'sentAs': 'request-payer',\r\n\t\t\t\t'withPrefix': true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\t'CompleteMultipartUploadOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'CompleteMultipartUploadResult',\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'VersionId' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'version-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'Location' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Location',\r\n\t\t\t},\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Bucket',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'Key',\r\n\t\t\t},\r\n\t\t\t'ETag' : {\r\n\t\t\t\t'location' : 'xml',\r\n\t\t\t\t'sentAs' : 'ETag',\r\n\t\t\t},\r\n\t\t\t'SseKms' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseKmsKey' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-kms-key-id',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseC' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-algorithm',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t},\r\n\t\t\t'SseCKeyMd5' :{\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'server-side-encryption-customer-key-MD5',\r\n\t\t\t\t'withPrefix' : true\r\n\t\t\t}\r\n\t\t},\r\n\t},\r\n\r\n\t'OptionsObject' : {\r\n\t\t'httpMethod' : 'OPTIONS',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Key' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri',\r\n\t\t\t},\r\n\t\t\t'Origin' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Origin',\r\n\t\t\t},\r\n\t\t\t'AccessControlRequestMethods' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Access-Control-Request-Method',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'string',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t\t'AccessControlRequestHeaders' : {\r\n\t\t\t\t'type' : 'array',\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'Access-Control-Request-Headers',\r\n\t\t\t\t'items' : {\r\n\t\t\t\t\t'type' : 'string',\r\n\t\t\t\t},\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\t'OptionsObjectOutput' : {\r\n\t\t'parameters' : {\r\n\t\t\t'AllowOrigin' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-origin',\r\n\t\t\t},\r\n\t\t\t'AllowHeader' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-headers',\r\n\t\t\t},\r\n\t\t\t'AllowMethod' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-allow-methods',\r\n\t\t\t},\r\n\t\t\t'ExposeHeader' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-expose-headers',\r\n\t\t\t},\r\n\t\t\t'MaxAgeSeconds' : {\r\n\t\t\t\t'location' : 'header',\r\n\t\t\t\t'sentAs' : 'access-control-max-age',\r\n\t\t\t},\r\n\t\t},\r\n\t},\r\n\r\n\t'GetBucketDirectColdAccess': {\r\n\t\t'httpMethod': 'GET',\r\n\t\t'urlPath': 'directcoldaccess',\r\n\t\t'parameters': {\r\n\t\t\t'Bucket': {\r\n\t\t\t\t'required': true,\r\n\t\t\t\t'location': 'uri'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t'GetBucketDirectColdAccessOutput': {\r\n\t\t'data': {\r\n\t\t\t'type': 'xml',\r\n\t\t\t'xmlRoot': 'DirectColdAccessConfiguration'\r\n\t\t},\r\n\t\t'parameters': {\r\n\t\t\t'Status': {\r\n\t\t\t\t'location': 'xml',\r\n\t\t\t\t'sentAs': 'Status'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t'SetBucketDirectColdAccess': {\r\n\t\t'httpMethod': 'PUT',\r\n\t\t'urlPath': 'directcoldaccess',\r\n\t\t'data': {\r\n\t\t\t'xmlRoot': 'DirectColdAccessConfiguration',\r\n\t\t\t'md5' : true\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri'\r\n\t\t\t},\r\n\t\t\t'Status': {\r\n\t\t\t\t'required': true,\r\n\t\t\t\t'location': 'xml',\r\n\t\t\t\t'sentAs': 'Status'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t'SetBucketDirectColdAccessOutput': {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'DirectColdAccessConfiguration'\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Status': {\r\n\t\t\t\t'location': 'xml',\r\n\t\t\t\t'sentAs': 'Status'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t'DeleteBucketDirectColdAccess': {\r\n\t\t'httpMethod': 'DELETE',\r\n\t\t'urlPath': 'directcoldaccess',\r\n\t\t'parameters': {\r\n\t\t\t'Bucket': {\r\n\t\t\t\t'required': true,\r\n\t\t\t\t'location': 'uri'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t'DeleteBucketDirectColdAccessOutput': {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'DirectColdAccessConfiguration'\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Status': {\r\n\t\t\t\t'location': 'xml',\r\n\t\t\t\t'sentAs': 'Status'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\r\n\t'GetBucketEncryption' : {\r\n\t\t'httpMethod' : 'GET',\r\n\t\t'urlPath' : 'encryption',\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'GetBucketEncryptionOutput' : {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'ServerSideEncryptionConfiguration'\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Rule' : {\r\n\t\t\t\t'type': 'object',\r\n\t\t\t\t'location': 'xml',\r\n\t\t\t\t'sentAs': 'Rule',\r\n\r\n\t\t\t\t'parameters': {\r\n\t\t\t\t\t'ApplyServerSideEncryptionByDefault': {\r\n\t\t\t\t\t\t'type': 'object',\r\n\t\t\t\t\t\t'sentAs': 'ApplyServerSideEncryptionByDefault',\r\n\t\t\t\t\t\t'parameters': {\r\n\t\t\t\t\t\t\t'SSEAlgorithm': {\r\n\t\t\t\t\t\t\t\t'sentAs': 'SSEAlgorithm'\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t'KMSMasterKeyID': {\r\n\t\t\t\t\t\t\t\t'sentAs': 'KMSMasterKeyID'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'SetBucketEncryption': {\r\n\t\t'httpMethod' : 'PUT',\r\n\t\t'urlPath' : 'encryption',\r\n\t\t'data' : {\r\n\t\t\t'xmlRoot' : 'ServerSideEncryptionConfiguration'\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Bucket' : {\r\n\t\t\t\t'required' : true,\r\n\t\t\t\t'location' : 'uri'\r\n\t\t\t},\r\n\t\t\t'Rule' : bucketEncryptionRule\r\n\t\t}\r\n\t},\r\n\t'SetBucketEncryptionOutput': {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'ServerSideEncryptionConfiguration'\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Rule' : bucketEncryptionRule\r\n\t\t}\r\n\t},\r\n\t'DeleteBucketEncryption': {\r\n\t\t'httpMethod': 'DELETE',\r\n\t\t'urlPath': 'encryption',\r\n\t\t'parameters': {\r\n\t\t\t'Bucket': {\r\n\t\t\t\t'required': true,\r\n\t\t\t\t'location': 'uri'\r\n\t\t\t}\r\n\t\t}\r\n\t},\r\n\t'DeleteBucketEncryptionOutput': {\r\n\t\t'data' : {\r\n\t\t\t'type' : 'xml',\r\n\t\t\t'xmlRoot' : 'ServerSideEncryptionConfiguration'\r\n\t\t},\r\n\t\t'parameters' : {\r\n\t\t\t'Rule' : bucketEncryptionRule\r\n\t\t}\r\n\t}\r\n};\r\n\r\n\r\nmodule.exports = operations;","/**\r\n * Copyright 2019 Huawei Technologies Co.,Ltd.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\n * this file except in compliance with the License.  You may obtain a copy of the\r\n * License at\r\n *\r\n * http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software distributed\r\n * under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\r\n * CONDITIONS OF ANY KIND, either express or implied.  See the License for the\r\n * specific language governing permissions and limitations under the License.\r\n *\r\n */\r\n\r\n\r\nconst crypto = require('crypto');\r\nconst fs = require('fs');\r\nconst events = require('events');\r\nconst httpLib = require('http');\r\nconst httpsLib = require('https');\r\nconst xml2js = require('xml2js');\r\nconst urlLib = require('url');\r\nconst pathLib = require('path');\r\nconst streamLib = require('stream');\r\nconst obsModel = require('./obsModel');\r\nconst v2Model = require('./v2Model');\r\n\r\nconst CONTENT_SHA256 = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855';\r\nconst OBS_SDK_VERSION = '3.20.11';\r\n\r\nconst mimeTypes = {\r\n    '7z' : 'application/x-7z-compressed',\r\n    'aac' : 'audio/x-aac',\r\n    'ai' : 'application/postscript',\r\n    'aif' : 'audio/x-aiff',\r\n    'asc' : 'text/plain',\r\n    'asf' : 'video/x-ms-asf',\r\n    'atom' : 'application/atom+xml',\r\n    'avi' : 'video/x-msvideo',\r\n    'bmp' : 'image/bmp',\r\n    'bz2' : 'application/x-bzip2',\r\n    'cer' : 'application/pkix-cert',\r\n    'crl' : 'application/pkix-crl',\r\n    'crt' : 'application/x-x509-ca-cert',\r\n    'css' : 'text/css',\r\n    'csv' : 'text/csv',\r\n    'cu' : 'application/cu-seeme',\r\n    'deb' : 'application/x-debian-package',\r\n    'doc' : 'application/msword',\r\n    'docx' : 'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\r\n    'dvi' : 'application/x-dvi',\r\n    'eot' : 'application/vnd.ms-fontobject',\r\n    'eps' : 'application/postscript',\r\n    'epub' : 'application/epub+zip',\r\n    'etx' : 'text/x-setext',\r\n    'flac' : 'audio/flac',\r\n    'flv' : 'video/x-flv',\r\n    'gif' : 'image/gif',\r\n    'gz' : 'application/gzip',\r\n    'htm' : 'text/html',\r\n    'html' : 'text/html',\r\n    'ico' : 'image/x-icon',\r\n    'ics' : 'text/calendar',\r\n    'ini' : 'text/plain',\r\n    'iso' : 'application/x-iso9660-image',\r\n    'jar' : 'application/java-archive',\r\n    'jpe' : 'image/jpeg',\r\n    'jpeg' : 'image/jpeg',\r\n    'jpg' : 'image/jpeg',\r\n    'js' : 'text/javascript',\r\n    'json' : 'application/json',\r\n    'latex' : 'application/x-latex',\r\n    'log' : 'text/plain',\r\n    'm4a' : 'audio/mp4',\r\n    'm4v' : 'video/mp4',\r\n    'mid' : 'audio/midi',\r\n    'midi' : 'audio/midi',\r\n    'mov' : 'video/quicktime',\r\n    'mp3' : 'audio/mpeg',\r\n    'mp4' : 'video/mp4',\r\n    'mp4a' : 'audio/mp4',\r\n    'mp4v' : 'video/mp4',\r\n    'mpe' : 'video/mpeg',\r\n    'mpeg' : 'video/mpeg',\r\n    'mpg' : 'video/mpeg',\r\n    'mpg4' : 'video/mp4',\r\n    'oga' : 'audio/ogg',\r\n    'ogg' : 'audio/ogg',\r\n    'ogv' : 'video/ogg',\r\n    'ogx' : 'application/ogg',\r\n    'pbm' : 'image/x-portable-bitmap',\r\n    'pdf' : 'application/pdf',\r\n    'pgm' : 'image/x-portable-graymap',\r\n    'png' : 'image/png',\r\n    'pnm' : 'image/x-portable-anymap',\r\n    'ppm' : 'image/x-portable-pixmap',\r\n    'ppt' : 'application/vnd.ms-powerpoint',\r\n    'pptx' : 'application/vnd.openxmlformats-officedocument.presentationml.presentation',\r\n    'ps' : 'application/postscript',\r\n    'qt' : 'video/quicktime',\r\n    'rar' : 'application/x-rar-compressed',\r\n    'ras' : 'image/x-cmu-raster',\r\n    'rss' : 'application/rss+xml',\r\n    'rtf' : 'application/rtf',\r\n    'sgm' : 'text/sgml',\r\n    'sgml' : 'text/sgml',\r\n    'svg' : 'image/svg+xml',\r\n    'swf' : 'application/x-shockwave-flash',\r\n    'tar' : 'application/x-tar',\r\n    'tif' : 'image/tiff',\r\n    'tiff' : 'image/tiff',\r\n    'torrent' : 'application/x-bittorrent',\r\n    'ttf' : 'application/x-font-ttf',\r\n    'txt' : 'text/plain',\r\n    'wav' : 'audio/x-wav',\r\n    'webm' : 'video/webm',\r\n    'wma' : 'audio/x-ms-wma',\r\n    'wmv' : 'video/x-ms-wmv',\r\n    'woff' : 'application/x-font-woff',\r\n    'wsdl' : 'application/wsdl+xml',\r\n    'xbm' : 'image/x-xbitmap',\r\n    'xls' : 'application/vnd.ms-excel',\r\n    'xlsx' : 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n    'xml' : 'application/xml',\r\n    'xpm' : 'image/x-xpixmap',\r\n    'xwd' : 'image/x-xwindowdump',\r\n    'yaml' : 'text/yaml',\r\n    'yml' : 'text/yaml',\r\n    'zip' : 'application/zip',\t\r\n};\r\n\r\n\r\nconst allowedResourceParameterNames = [        \r\n\t'acl',\r\n\t'backtosource',\r\n    'policy',\r\n    'torrent',\r\n    'logging',\r\n    'location',\r\n    'storageinfo',\r\n    'quota',\r\n    'storageclass',\r\n    'storagepolicy',\r\n    'requestpayment',\r\n    'versions',\r\n    'versioning',\r\n    'versionid',\r\n    'uploads',\r\n    'uploadid',\r\n    'partnumber',\r\n    'website',\r\n    'notification',\r\n    'replication',\r\n    'lifecycle',\r\n    'deletebucket',\r\n    'delete',\r\n    'cors',\r\n    'restore',\r\n    'tagging',\r\n    'append',\r\n    'position',\r\n    'response-content-type',\r\n    'response-content-language',\r\n    'response-expires',\r\n    'response-cache-control',\r\n    'response-content-disposition',\r\n    'response-content-encoding',\r\n    'x-image-process',\r\n    'x-oss-process',\r\n\t'encryption',\r\n\t'directcoldaccess',\r\n\t'rename',\r\n\t'name',\r\n\t'requestPayment',\r\n\t'metadata',\r\n\t'modify'\r\n];\r\n\r\n\r\nconst allowedResponseHttpHeaderMetadataNames = [\r\n    'content-type',\r\n    'content-md5',\r\n    'content-length',\r\n    'content-language',\r\n    'expires',\r\n    'origin',\r\n    'cache-control',\r\n    'content-disposition',\r\n    'content-encoding',\r\n    'x-default-storage-class',\r\n    'location',\r\n    'date',\r\n    'etag',\r\n    'host',\r\n    'last-modified',\r\n    'content-range',\r\n    'x-reserved',\r\n    'access-control-allow-origin',\r\n    'access-control-allow-headers',\r\n    'access-control-max-age',\r\n    'access-control-allow-methods',\r\n    'access-control-expose-headers',\r\n    'connection'\r\n];\r\n\r\nconst commonHeaders = {\r\n\t'content-length' : 'ContentLength',\r\n\t'date' : 'Date',\r\n\t'x-reserved' : 'Reserved'\r\n};\r\n\r\nconst obsAllowedStorageClass = ['STANDARD', 'WARM', 'COLD'];\r\n\r\nconst v2AllowedStorageClass = ['STANDARD', 'STANDARD_IA', 'GLACIER'];\r\n\r\nconst obsAllowedAcl = ['private', 'public-read', 'public-read-write', 'public-read-delivered', 'public-read-write-delivered','bucket-owner-full-control'];\r\n\r\nconst v2AllowedAcl = ['private', 'public-read', 'public-read-write', 'authenticated-read', 'bucket-owner-read', 'bucket-owner-full-control', 'log-delivery-write'];\r\n\r\nconst obsAllowedUri = ['Everyone', 'Logdelivery'];\r\n\r\nconst v2AllowedUri = ['http://acs.amazonaws.com/groups/global/AllUsers', 'http://acs.amazonaws.com/groups/global/AuthenticatedUsers', 'http://acs.amazonaws.com/groups/s3/LogDelivery'];\r\n\r\nconst obsAllowedEvent = ['ObjectCreated:*', 'ObjectCreated:Put', 'ObjectCreated:Post', 'ObjectCreated:Copy', \r\n    'ObjectCreated:CompleteMultipartUpload', 'ObjectRemoved:*', 'ObjectRemoved:Delete', 'ObjectRemoved:DeleteMarkerCreated'];\r\nconst v2AllowedEvent = ['s3:ObjectCreated:*', 's3:ObjectCreated:Put', 's3:ObjectCreated:Post', 's3:ObjectCreated:Copy', \r\n    's3:ObjectCreated:CompleteMultipartUpload', 's3:ObjectRemoved:*', 's3:ObjectRemoved:Delete', 's3:ObjectRemoved:DeleteMarkerCreated'];\r\n\r\nconst negotiateMethod = 'HeadApiVersion';\r\n\r\nconst obsSignatureContext = {\r\n\tsignature :\t'obs',\r\n\theaderPrefix : 'x-obs-',\r\n\theaderMetaPrefix : 'x-obs-meta-',\r\n\tauthPrefix : 'OBS'\r\n};\r\n\r\nconst v2SignatureContext = {\r\n\tsignature :\t'v2',\r\n\theaderPrefix : 'x-amz-',\r\n\theaderMetaPrefix : 'x-amz-meta-',\r\n\tauthPrefix : 'AWS'\r\n};\r\n\r\nclass TimedOutError extends Error {\r\n    constructor(host) {\r\n        super('connect ETIMEDOUT ' + host);\r\n        this.errno = 'ETIMEDOUT';\r\n        this.code = 'ETIMEDOUT';\r\n        Error.captureStackTrace(this, TimedOutError);\r\n    }\r\n}\r\n\r\nfunction encodeURIWithSafe(str, safe, skipEncoding){\r\n\tstr = String(str);\r\n\tif (str.length === 0) {\r\n\t\treturn '';\r\n\t}\r\n\tif (skipEncoding) {\r\n\t\treturn str;\r\n\t}\r\n\tlet ret;\r\n\tif (safe) {\r\n\t\tret = [];\r\n\t\tfor (const element of str) {\r\n\t\t\tret.push(safe.indexOf(element) >= 0 ? element : encodeURIComponent(element));\r\n\t\t}\r\n\t\tret = ret.join('');\r\n\t} else {\r\n\t\tret = encodeURIComponent(str);\r\n\t}\r\n\treturn ret.replace(/!/g, '%21')\r\n\t\t.replace(/\\*/g, '%2A')\r\n\t\t.replace(/'/g, '%27')\r\n\t\t.replace(/\\(/g, '%28')\r\n\t\t.replace(/\\)/g, '%29');\r\n}\r\n\r\nfunction headerTostring(obj){\r\n\treturn JSON ? JSON.stringify(obj) : '';\r\n}\r\n\r\nfunction parseObjectFromHeaders(sentAs, headers){\r\n\tlet metadata = {};\r\n\tfor(let key in headers){\r\n\t\tif ({}.hasOwnProperty.call(headers, key)) {\r\n\t\t\tlet k = String(key).toLowerCase();\r\n\t\t\tif (k.indexOf(sentAs) === 0) {\r\n\t\t\t\tmetadata[k.slice(sentAs.length)] = headers[key];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn metadata;\r\n}\r\n\r\nfunction mkdirsSync(dirname) {\r\n\tif (fs.existsSync(dirname)) {\r\n\t\treturn true;\r\n\t}\r\n\tif (mkdirsSync(pathLib.dirname(dirname))) {\r\n\t\tfs.mkdirSync(dirname);\r\n\t\treturn true;\r\n\t}\r\n\treturn false;\r\n}\r\n\r\nfunction isArray(obj) {\r\n\treturn Object.prototype.toString.call(obj) === '[object Array]';\r\n}\r\n\r\nfunction isObject(obj) {\r\n\treturn Object.prototype.toString.call(obj) === '[object Object]';\r\n}\r\n\r\n\r\nfunction makeObjFromXml(xml, methodName, log, bc){\r\n\txml2js.parseString(xml, {explicitArray:false, ignoreAttrs:true}, function(err, result){\r\n\t\tif(err){\r\n\t\t\treturn bc(err, null);\r\n\t\t}\r\n\t\t\r\n\t\tif(result === null || result === undefined){\r\n\t\t\tif(log.isLevelEnabled('error')){\r\n\t\t\t\tlog.runLog('error', methodName, 'xml [' + xml + '] is not well-format');\r\n\t\t\t}\r\n\t\t\treturn bc(new Error('xml is not well format'), null);\r\n\t\t}\r\n\t\t\r\n\t\tbc(null, result);\r\n\t});\r\n}\r\n\r\n\r\nfunction getExpireDate(utcDateStr){\r\n\tlet date = new Date(Date.parse(utcDateStr));\r\n\tlet hour = date.getUTCHours();\r\n\tlet min = date.getUTCMinutes();\r\n\tlet sec = date.getUTCSeconds();\r\n\tlet day = date.getUTCDate();\r\n\tlet moth = date.getUTCMonth() + 1;\r\n\tlet year = date.getUTCFullYear();\r\n\tlet expireDate = '';\r\n\texpireDate += year + '-';\r\n\t\r\n\tif(moth < 10){\r\n\t\texpireDate += '0';\r\n\t}\r\n\texpireDate += moth + '-';\r\n\t\r\n\tif(day < 10){\r\n\t\texpireDate += '0';\r\n\t}\r\n\texpireDate += day + 'T';\r\n\t\r\n\tif(hour < 10){\r\n\t\texpireDate += '0';\r\n\t}\r\n\texpireDate += hour + ':';\r\n\t\r\n\tif(min < 10){\r\n\t\texpireDate += '0';\r\n\t}\r\n\texpireDate += min + ':';\r\n\t\r\n\tif(sec < 10){\r\n\t\texpireDate += '0';\r\n\t}\r\n\texpireDate += sec + 'Z';\r\n\treturn expireDate;\r\n}\r\n\r\nfunction getDates(utcDateStr){\r\n\tlet date = new Date(Date.parse(utcDateStr));\r\n\tlet hour = date.getUTCHours();\r\n\tlet min = date.getUTCMinutes();\r\n\tlet sec = date.getUTCSeconds();\r\n\tlet day = date.getUTCDate();\r\n\tlet moth = date.getUTCMonth() + 1;\r\n\tlet year = date.getUTCFullYear();\r\n\tlet shortDate = '';\r\n\tlet longDate = '';\r\n\tshortDate += year;\r\n\t\r\n\tif(moth < 10){\r\n\t\tshortDate += '0';\r\n\t}\r\n\tshortDate += moth;\r\n\t\r\n\tif(day < 10){\r\n\t\tshortDate += '0';\r\n\t}\r\n\tshortDate += day;\r\n\t\r\n\tlongDate += shortDate + 'T';\r\n\tif(hour < 10){\r\n\t\tlongDate += '0';\r\n\t}\r\n\tlongDate +=  hour;\r\n\t\r\n\tif(min < 10){\r\n\t\tlongDate += '0';\r\n\t}\r\n\tlongDate +=  min;\r\n\t\r\n\tif(sec < 10){\r\n\t\tlongDate += '0';\r\n\t}\r\n\tlongDate +=  sec + 'Z';\r\n\treturn [shortDate, longDate];\r\n}\r\n\r\nfunction getSignedAndCanonicalHeaders(header){\r\n\tlet arrheadKey = [];\r\n\tlet arrhead = {};\r\n\tfor(let key in header){\r\n\t\tif ({}.hasOwnProperty.call(header, key)){\r\n\t\t\tarrheadKey.push(key.toLowerCase());\r\n\t\t\tarrhead[key.toLowerCase()] = header[key];\r\n\t\t}\r\n\t}\r\n\tarrheadKey = arrheadKey.sort();\r\n\tlet signedHeaders = '';\r\n\tlet canonicalHeaders = '';\r\n\tfor(let i = 0; i < arrheadKey.length; i++){\r\n\t\tif(i !== 0){\r\n\t\t\tsignedHeaders += ';';\r\n\t\t}\r\n\t\tsignedHeaders += arrheadKey[i];\r\n\t\tcanonicalHeaders +=  arrheadKey[i] + ':' + arrhead[arrheadKey[i]] + '\\n';\r\n\t}\r\n\treturn [signedHeaders, canonicalHeaders];\r\n}\r\n\r\nfunction createV4Signature(shortDate, sk, region, stringToSign){\r\n\tlet dateKey = crypto.createHmac('sha256', 'AWS4' + sk).update(shortDate).digest();\r\n\tlet dateRegionKey = crypto.createHmac('sha256', dateKey).update(region).digest();\r\n\tlet dateRegionServiceKey = crypto.createHmac('sha256', dateRegionKey).update('s3').digest();\r\n\tlet signingKey = crypto.createHmac('sha256',dateRegionServiceKey).update('aws4_request').digest();\r\n\treturn crypto.createHmac('sha256',signingKey).update(stringToSign).digest('hex');\r\n}\r\n\r\nfunction getV4Signature(shortDate, longDate, sk, region, canonicalRequest){\r\n\tlet scop = shortDate + '/' + region + '/s3/aws4_request';\r\n\tlet stringToSign = 'AWS4-HMAC-SHA256\\n';\r\n\tstringToSign += longDate + '\\n';\r\n\tstringToSign += scop + '\\n';\r\n\tstringToSign += crypto.createHash('sha256').update(canonicalRequest).digest('hex');\r\n\treturn createV4Signature(shortDate, sk, region, stringToSign);\r\n}\r\n\r\nfunction Utils(logger) {\r\n\tthis.log = logger;\r\n\tthis.ak = null;\r\n\tthis.sk = null;\r\n\tthis.securityToken = null;\r\n\tthis.isSecure = true; \r\n\tthis.server = null;\r\n\tthis.pathStyle = false;\r\n\tthis.signatureContext = null;\r\n\tthis.isSignatureNegotiation = true;\r\n\tthis.bucketSignatureCache = {};\r\n\tthis.region = 'region';\r\n\tthis.port = null;\r\n\tthis.maxRetryCount = 3;\r\n\tthis.timeout = 60;\r\n\tthis.sslVerify = false;\r\n\tthis.httpAgent = false;\r\n\tthis.httpsAgent = false;\r\n\tthis.obsSdkVersion = OBS_SDK_VERSION;\r\n\tthis.isCname = false;\r\n\tthis.bucketEventEmitters = {};\r\n\tthis.maxConnections = 1000;\r\n\tthis.userAgent = 'obs-sdk-js/' + this.obsSdkVersion;\r\n}\r\n\r\nUtils.prototype.encodeURIWithSafe = encodeURIWithSafe;\r\n\r\nUtils.prototype.mimeTypes = mimeTypes;\r\n\r\nUtils.prototype.close = function(){\r\n\tif(this.httpAgent){\r\n\t\tthis.httpAgent = null;\r\n\t}\r\n\tif(this.httpsAgent){\r\n\t\tthis.httpsAgent = null;\r\n\t}\r\n\tif (this.thirdHttpLib) {\r\n\t\tthis.thirdHttpLib = null;\r\n\t}\r\n};\r\n\r\nUtils.prototype.refresh = function(ak, sk, securityToken){\r\n\tthis.ak = ak ? String(ak).trim() : null;\r\n\tthis.sk = sk ? String(sk).trim(): null;\r\n\tthis.securityToken = securityToken ? String(securityToken).trim() : null;\r\n};\r\n\r\nUtils.prototype.initFactory = function(ak, sk, isSecure,\r\n\t\tserver, pathStyle, signature, region, port, maxRetryCount, timeout, sslVerify, longConnection, securityToken, \r\n\t\tisSignatureNegotiation, isCname, maxConnections, httpAgent, httpsAgent, userAgent, thirdHttpLib){\r\n\t\r\n\tthis.refresh(ak, sk, securityToken);\r\n\r\n\tif (!server) {\r\n\t\tthrow new Error('Server is not set');\r\n\t}\r\n\tserver = String(server).trim();\r\n\t\r\n\tif(server.indexOf('https://') === 0){\r\n\t\tserver = server.slice('https://'.length);\r\n\t\tisSecure = true;\r\n\t}else if(server.indexOf('http://') === 0){\r\n\t\tserver = server.slice('http://'.length);\r\n\t\tisSecure = false;\r\n\t}\r\n\t\r\n\tlet index = server.lastIndexOf('/');\r\n\twhile(index >= 0){\r\n\t\tserver = server.slice(0, index);\r\n\t\tindex = server.lastIndexOf('/');\r\n\t}\r\n\t\r\n\tindex = server.indexOf(':');\r\n\tif(index >= 0){\r\n\t\tport = server.slice(index + 1);\r\n\t\tserver = server.slice(0, index);\r\n\t}\r\n\tthis.server = server;\r\n\t\r\n\tif(/^[0-9]+\\.[0-9]+\\.[0-9]+\\.[0-9]+$/.test(this.server)){\r\n\t\tpathStyle = true;\r\n\t}\r\n\t\r\n\tif (isSecure !== undefined) {\r\n\t\tthis.isSecure = isSecure;\r\n\t}\r\n\tif (pathStyle !== undefined) {\r\n\t\tthis.pathStyle = pathStyle;\r\n\t}\r\n\t\r\n\tif (signature !== undefined) {\r\n\t\tsignature = String(signature).trim().toLowerCase();\r\n\t}else{\r\n\t\tsignature = 'obs';\r\n\t}\r\n\t\r\n\tif(isSignatureNegotiation !== undefined){\r\n\t\tthis.isSignatureNegotiation = isSignatureNegotiation;\r\n\t}\r\n\r\n\tthis.isCname = isCname;\r\n\t\r\n\tif(this.pathStyle || this.isCname){\r\n\t\tthis.isSignatureNegotiation = false;\r\n\t\tif(signature === 'obs'){\r\n\t\t\tsignature = 'v2';\r\n\t\t}\r\n\t}\r\n\t\r\n\tthis.signatureContext = signature === 'obs' ? obsSignatureContext : v2SignatureContext;\r\n\t\r\n\tif(region !== undefined){\r\n\t\tthis.region = String(region).trim();\r\n\t}\r\n\t\r\n\tthis.port = port ? parseInt(port, 10) : (this.isSecure ? 443 : 80);\r\n\t\r\n\tif(maxRetryCount !== undefined){\r\n\t\tthis.maxRetryCount = parseInt(maxRetryCount, 10);\r\n\t}\r\n\t\r\n\tif(timeout !== undefined){\r\n\t\tthis.timeout = parseInt(timeout, 10);\r\n\t}\r\n\t\r\n\tif(sslVerify !== undefined){\r\n\t\tthis.sslVerify = sslVerify;\r\n\t}\r\n\t\r\n\tif(maxConnections !== undefined){\r\n\t\tthis.maxConnections = parseInt(maxConnections, 10);\r\n\t}\r\n\t\r\n\tif(httpAgent !== undefined){\r\n\t\tthis.httpAgent = httpAgent;\r\n\t}\r\n\t\r\n\tif(httpsAgent !== undefined){\r\n\t\tthis.httpsAgent = httpsAgent;\r\n\t}\r\n\t\r\n\tif(userAgent){\r\n\t\tthis.userAgent = userAgent;\r\n\t}\r\n\r\n\tif (thirdHttpLib) {\r\n\t\tthis.thirdHttpLib = thirdHttpLib;\r\n\t}\r\n\t\r\n\tif(longConnection !== undefined && Number(longConnection) >= 0){\r\n\t\tif(!this.httpAgent){\r\n\t\t\tthis.httpAgent = new httpLib.Agent({keepAlive : true, keepAliveMsecs : Number(longConnection) * 1000, maxSockets : this.maxConnections, maxFreeSockets : this.maxConnections});\r\n\t\t}\r\n\t\tif(!this.httpsAgent){\r\n\t\t\tthis.httpsAgent = new httpsLib.Agent({keepAlive : true, keepAliveMsecs : Number(longConnection) * 1000, maxSockets : this.maxConnections, maxFreeSockets : this.maxConnections});\r\n\t\t}\r\n\t}\r\n\t\r\n};\r\n\r\nUtils.prototype.SseKmsAdapter = function(value, signatureContext){\r\n\tvalue = value || '';\r\n\tvalue = String(value);\r\n\tlet index = value.indexOf('aws:');\r\n\tif(signatureContext.signature === 'obs'){\r\n\t\treturn index === 0 ? value.slice(4) : value;\r\n\t}\r\n\treturn index === 0 ? value : 'aws:' + value;\r\n};\r\n\r\nUtils.prototype.BucketAdapter = function(value, signatureContext){\r\n\tvalue = value || '';\r\n\tvalue = String(value);\r\n\tlet index = value.indexOf('arn:aws:s3:::');\r\n\tif(signatureContext.signature === 'obs'){\r\n\t\treturn index === 0 ? value.slice('arn:aws:s3:::'.length) : value;\r\n\t}\r\n\treturn index === 0 ? value : 'arn:aws:s3:::' + value;\r\n};\r\n\r\n\r\nUtils.prototype.EventAdapter = function(value, signatureContext){\r\n\tvalue = value || '';\r\n\tvalue = String(value);\r\n\tif(signatureContext.signature === 'obs'){\r\n\t\tif(obsAllowedEvent.indexOf(value) >= 0){\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\tif(v2AllowedEvent.indexOf(value) >= 0){\r\n\t\t\treturn value.substring(3);\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\tif(v2AllowedEvent.indexOf(value) >= 0){\r\n\t\treturn value;\r\n\t}\r\n\tif(obsAllowedEvent.indexOf(value) >= 0){\r\n\t\treturn 's3:' + value;\r\n\t}\r\n\treturn '';\r\n};\r\n\r\nUtils.prototype.URIAdapter = function(value, signatureContext){\r\n\tvalue = value || '';\r\n\tvalue = String(value);\r\n\tif(signatureContext.signature === 'obs'){\r\n\t\tif(obsAllowedUri.indexOf(value) >= 0){\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\tif(value === 'AllUsers' || value === 'http://acs.amazonaws.com/groups/global/AllUsers'){\r\n\t\t\treturn 'Everyone';\r\n\t\t}\r\n\t\t\r\n\t\treturn '';\r\n\t\t\r\n\t}\r\n\tif(v2AllowedUri.indexOf(value) >= 0){\r\n\t\treturn value;\r\n\t}\r\n\tif(value === 'Everyone' || value === 'AllUsers'){\r\n\t\treturn 'http://acs.amazonaws.com/groups/global/AllUsers';\r\n\t}\r\n\tif(value === 'AuthenticatedUsers'){\r\n\t\treturn 'http://acs.amazonaws.com/groups/global/AuthenticatedUsers';\r\n\t}\r\n\tif(value === 'LogDelivery'){\r\n\t\treturn 'http://acs.amazonaws.com/groups/s3/LogDelivery';\r\n\t}\r\n\treturn '';\r\n};\r\n\r\n\r\nUtils.prototype.StorageClassAdapter = function(value, signatureContext){\r\n\tvalue = value || '';\r\n\tvalue = String(value).toUpperCase();\r\n\tif(signatureContext.signature === 'obs'){\r\n\t\tif(obsAllowedStorageClass.indexOf(value) >= 0){\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\tif(value === 'STANDARD_IA'){\r\n\t\t\treturn 'WARM';\r\n\t\t}\r\n\t\tif(value === 'GLACIER'){\r\n\t\t\treturn 'COLD';\r\n\t\t}\r\n\t\treturn '';\r\n\t}\r\n\t\r\n\tif(v2AllowedStorageClass.indexOf(value) >= 0){\r\n\t\treturn value;\r\n\t}\r\n\tif(value === 'WARM'){\r\n\t\treturn 'STANDARD_IA';\r\n\t}\r\n\tif(value === 'COLD'){\r\n\t\treturn 'GLACIER';\r\n\t}\r\n\treturn '';\r\n};\r\n\r\nUtils.prototype.ACLAdapter = function(value, signatureContext){\r\n\tvalue = value || '';\r\n\tvalue = String(value).toLowerCase();\r\n\tif(signatureContext.signature === 'obs'){\r\n\t\tif(obsAllowedAcl.indexOf(value) >= 0){\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\t\r\n\t\treturn '';\r\n\t}\r\n\t\r\n\tif(value === 'public-read-delivered'){\r\n\t\tvalue = 'public-read';\r\n\t}else if(value === 'public-read-write-delivered'){\r\n\t\tvalue = 'public-read-write';\r\n\t}\r\n\t\r\n\tif(v2AllowedAcl.indexOf(value) >= 0){\r\n\t\treturn value;\r\n\t}\r\n\treturn '';\r\n};\r\n\r\nUtils.prototype.doExec = function(funcName, param, callback){\r\n\tlet opt = this.makeParam(funcName, param);\r\n\tif('err' in opt){\r\n\t\treturn callback(opt.err, null);\r\n\t}\r\n\tthis.sendRequest(funcName, opt, callback);\r\n};\r\n\r\nUtils.prototype.doNegotiation = function(funcName, param, callback, checkBucket, checkCache, setCache){\r\n\tlet o = null;\r\n\tlet that = this;\r\n\tif(checkCache && param.Bucket){\r\n\t\tlet item = that.bucketSignatureCache[param.Bucket];\r\n\t\tif(item && item.signatureContext && item.expireTime > new Date().getTime()){\r\n\t\t\tparam.signatureContext = item.signatureContext;\r\n\t\t\tlet opt = that.makeParam(funcName, param);\r\n\t\t\tif('err' in opt){\r\n\t\t\t\treturn callback(opt.err, null);\r\n\t\t\t}\r\n\t\t\topt.signatureContext = item.signatureContext;\r\n\t\t\treturn that.sendRequest(funcName, opt, callback);\r\n\t\t}\r\n\t\t\r\n\t\to = this.bucketEventEmitters[param.Bucket];\r\n\t\tif(!o){\r\n\t\t\to = {\r\n\t\t\t\ts : 0,\r\n\t\t\t};\r\n\t\t\tthis.bucketEventEmitters[param.Bucket] = o;\r\n\t\t}\r\n\t\t\r\n\t\tif(o.s){\r\n\t\t\to.e.once('done', () => {\r\n\t\t\t\tthat.doNegotiation(funcName, param, callback, checkBucket, checkCache, setCache);\r\n\t\t\t});\r\n\t\t\treturn;\r\n\t\t}\r\n\t\to.e = new events.EventEmitter();\r\n\t\to.s = 1;\r\n\t}\r\n\tthis.doExec(negotiateMethod, checkBucket ? {Bucket:param.Bucket} : {},  function(err, result){\r\n\t\tif(err){\r\n\t\t\tcallback(err, null);\r\n\t\t\tif(o){\r\n\t\t\t\to.s = 0;\r\n\t\t\t\to.e.emit('done');\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif((checkBucket && result.CommonMsg.Status === 404) || result.CommonMsg.Status >= 500){\r\n\t\t\tcallback(err, result);\r\n\t\t\tif(o){\r\n\t\t\t\to.s = 0;\r\n\t\t\t\to.e.emit('done');\r\n\t\t\t}\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tlet signatureContext = v2SignatureContext;\r\n\t\tif(result.CommonMsg.Status < 300 && result.InterfaceResult && result.InterfaceResult.ApiVersion >= '3.0'){\r\n\t\t\tsignatureContext = obsSignatureContext;\r\n\t\t}\r\n\t\t\r\n\t\tif(setCache){\r\n\t\t\tthat.bucketSignatureCache[param.Bucket] = {\r\n\t\t\t\tsignatureContext : signatureContext,\r\n\t\t\t\texpireTime : new Date().getTime() + 15 + (Math.ceil(Math.random()*5)) * 60 * 1000\r\n\t\t\t};\r\n\t\t}\r\n\t\tif(o){\r\n\t\t\to.s = 0;\r\n\t\t\to.e.emit('done');\r\n\t\t}\r\n\t\tparam.signatureContext = signatureContext;\r\n\t\tlet opt = that.makeParam(funcName, param);\r\n\t\tif('err' in opt){\r\n\t\t\treturn callback(opt.err, null);\r\n\t\t}\r\n\t\topt.signatureContext = signatureContext;\r\n\t\tthat.sendRequest(funcName, opt, callback);\r\n\t});\r\n};\r\n\r\nUtils.prototype.exec = function(funcName, param, callback){\r\n\tlet that = this;\r\n\tif(that.isSignatureNegotiation && funcName !== negotiateMethod){\r\n\t\tif(funcName === 'ListBuckets'){\r\n\t\t\tthat.doNegotiation(funcName, param, callback, false, false, false);\r\n\t\t}else if(funcName === 'CreateBucket'){\r\n\t\t\tlet _callback = function(err, result){\r\n\t\t\t\tif(!err && result.CommonMsg.Status === 400 &&\r\n\t\t\t\t\t\tresult.CommonMsg.Message === 'Unsupported Authorization Type' &&\r\n\t\t\t\t\t\tparam.signatureContext && \r\n\t\t\t\t\t\tparam.signatureContext.signature === 'v2'){\r\n\t\t\t\t\tparam.signatureContext = v2SignatureContext;\r\n\t\t\t\t\tlet opt = that.makeParam(funcName, param);\r\n\t\t\t\t\tif('err' in opt){\r\n\t\t\t\t\t\treturn callback(opt.err, null);\r\n\t\t\t\t\t}\r\n\t\t\t\t\topt.signatureContext = param.signatureContext;\r\n\t\t\t\t\tthat.sendRequest(funcName, opt, callback);\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tcallback(err, result);\r\n\t\t\t};\r\n\t\t\t\r\n\t\t\tthat.doNegotiation(funcName, param, _callback, false, true, false);\r\n\t\t}else{\r\n\t\t\tthat.doNegotiation(funcName, param, callback, true, true, true);\r\n\t\t}\r\n\t\treturn;\r\n\t}\r\n\tthat.doExec(funcName, param, callback);\r\n};\r\n\r\n\r\nUtils.prototype.toXml = function(mXml, xmlMeta, root, sentAs, signatureContext){\r\n\tlet xml = '';\r\n\tif(root !== null){\r\n\t\txml += this.buildXml(mXml, xmlMeta, root, sentAs, signatureContext);\r\n\t\treturn xml;\r\n\t}\r\n\tfor (let key in xmlMeta){\r\n\t\tif(key in mXml){\r\n\t\t\tlet meta = xmlMeta[key];\r\n\t\t\txml += this.buildXml(mXml, meta, key, meta.sentAs || key, signatureContext);\r\n\t\t}\r\n\t}\r\n\treturn xml;\r\n};\r\n\r\nUtils.prototype.buildXml = function(mXml, xmlMeta, key, sentAs, signatureContext){\r\n\tlet xml = '';\r\n\tlet type = xmlMeta.type;\r\n\tif(type === 'array'){\r\n\t\tfor(let i = 0; i < mXml[key].length; i++){\r\n\t\t\tif(xmlMeta.items.type === 'object'){\r\n\t\t\t\tif (!mXml[key][i]) {\r\n\t\t\t\t\treturn xml;\r\n\t\t\t\t}\r\n\t\t\t\tlet result = this.toXml(mXml[key][i], xmlMeta.items.parameters, null, null, signatureContext);\r\n\t\t\t\tif(result !== ''){\r\n\t\t\t\t\txml += '<' + sentAs + '>'+ result + '</' + sentAs + '>';\r\n\t\t\t\t}\r\n\t\t\t}else if(xmlMeta.items.type === 'adapter'){\r\n\t\t\t\txml += '<' + sentAs + '>' + String(this[key + 'Adapter'](mXml[key][i], signatureContext)).replace(/&/g, '&amp;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;') + '</' + sentAs + '>';\r\n\t\t\t}else if(xmlMeta.items.type !== 'array'){\r\n\t\t\t\txml += '<' + sentAs + '>'+ String(mXml[key][i]).replace(/&/g, '&amp;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;') + '</' + sentAs +'>';\r\n\t\t\t}\r\n\t\t}\r\n\t}else if(type === 'object'){\r\n\t\tif (!mXml[key]) {\r\n\t\t\treturn xml;\r\n\t\t}\r\n\t\tlet result = this.toXml(mXml[key], xmlMeta.parameters, null, null, signatureContext);\r\n\t\tif(result !== ''){\r\n\t\t\txml += '<' + sentAs;\r\n\t\t\tif('data' in xmlMeta){\r\n\t\t\t\tif('xsiNamespace' in xmlMeta.data){\r\n\t\t\t\t\txml += ' xmlns:xsi=\"' +  xmlMeta.data.xsiNamespace + '\"';\r\n\t\t\t\t}\r\n\t\t\t\tif('xsiType' in xmlMeta.data){\r\n\t\t\t\t\txml += ' xsi:type=\"' + mXml[key][xmlMeta.data.xsiType] + '\"';\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\txml += '>';\r\n\t\t\txml += result + '</' + sentAs + '>';\r\n\t\t}\r\n\t\t\r\n\t}else if(!xmlMeta.notAllowEmpty || String(mXml[key]) !== ''){\r\n\t\tif(type === 'adapter'){\r\n\t\t\txml += '<' + sentAs + '>' + String(this[key + 'Adapter'](mXml[key], signatureContext)).replace(/&/g, '&amp;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;') + '</' + sentAs + '>';\r\n\t\t}else if(type !== 'ignore'){\r\n\t\t\txml += '<' + sentAs + '>' + String(mXml[key]).replace(/&/g, '&amp;').replace(/'/g, '&apos;').replace(/\"/g, '&quot;') + '</' + sentAs + '>';\r\n\t\t}\r\n\t}\r\n\tif(xml && xmlMeta.wrapper){\r\n\t\tlet _wrapper = xmlMeta.wrapper;\r\n\t\txml = '<' + _wrapper + '>' + xml + '</' + _wrapper + '>';\r\n\t}\r\n\treturn xml;\r\n};\r\n\r\n\r\n\r\nUtils.prototype.jsonToObject = function(model, obj, root){\r\n\tlet opt = {};\r\n\tif(root !== null){\r\n\t\tthis.buildObject(model, obj, root, opt);\r\n\t}else{\r\n\t\tfor(let key in model){\r\n\t\t\tif ({}.hasOwnProperty.call(model, key)) {\r\n\t\t\t\tthis.buildObject(model, obj, key, opt);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn opt;\r\n};\r\n\r\nUtils.prototype.buildObject = function(model, obj, key, opt){\r\n\tif(isObject(obj)){\r\n\t\tlet flag = true;\r\n\t\tlet wrapper = model[key].wrapper;\r\n\t\tif(wrapper && wrapper in obj){\r\n\t\t\tobj = obj[wrapper];\r\n\t\t\tflag = isObject(obj);\r\n\t\t}\r\n\t\tif(flag){\r\n\t\t\tlet sentAs = model[key].sentAs || key;\r\n\t\t\tif(sentAs in obj){\r\n\t\t\t\tif(model[key].type === 'object'){\r\n\t\t\t\t\topt[key] = this.jsonToObject(model[key].parameters, obj[sentAs], null);\r\n\t\t\t\t}else if(model[key].type === 'array'){\r\n\t\t\t\t\tlet arr = [];\r\n\t\t\t\t\tif(!isArray(obj[sentAs])){\r\n\t\t\t\t\t\tarr[0] = model[key].items.type === 'object' ? this.jsonToObject(model[key].items.parameters, obj[sentAs], n